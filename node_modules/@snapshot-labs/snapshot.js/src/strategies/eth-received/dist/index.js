"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
exports.__esModule = true;
exports.strategy = exports.about = exports.examples = exports.version = exports.author = void 0;
var cross_fetch_1 = require("cross-fetch");
var examples_json_1 = require("./examples.json");
var README_md_1 = require("./README.md");
exports.author = 'mccallofthewild';
exports.version = '0.1.0';
exports.examples = examples_json_1["default"];
exports.about = README_md_1["default"];
function strategy() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return __awaiter(this, void 0, void 0, function () {
        var addresses, options, _a, coeff, receivingAddresses, charitableTransactions, scores, _loop_1, _b, addresses_1, address;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    addresses = args[3], options = args[4];
                    _a = options.coeff, coeff = _a === void 0 ? 1 : _a, receivingAddresses = options.receivingAddresses;
                    return [4 /*yield*/, cross_fetch_1["default"]('https://api.anyblock.tools/ethereum/ethereum/mainnet/es/tx/search/', {
                            method: 'POST',
                            body: JSON.stringify({
                                from: 0,
                                size: 10000,
                                query: {
                                    bool: {
                                        must: [
                                            {
                                                bool: {
                                                    should: __spreadArrays(addresses.map(function (a) { return ({
                                                        match: {
                                                            from: a
                                                        }
                                                    }); }))
                                                }
                                            },
                                            {
                                                bool: {
                                                    should: __spreadArrays(receivingAddresses.map(function (a) { return ({
                                                        match: {
                                                            to: a
                                                        }
                                                    }); }))
                                                }
                                            }
                                        ]
                                    }
                                }
                            }),
                            headers: {
                                Authorization: 'Bearer 8c8b3826-afd5-4535-a8be-540562624fbe',
                                'Content-Type': 'application/json'
                            }
                        })
                            .then(function (r) { return r.json(); })["catch"](function (e) {
                            console.error('Eth-Received AnyBlock ElasticSearch Query Failed:');
                            throw e;
                        })];
                case 1:
                    charitableTransactions = _c.sent();
                    scores = {};
                    _loop_1 = function (address) {
                        scores[address] = charitableTransactions.hits.hits
                            .filter(function (tx) {
                            var validAddress = tx._source.from.toLowerCase() == address.toLowerCase();
                            return validAddress;
                        })
                            .reduce(function (prev, curr) {
                            return prev + curr._source.value.eth * coeff;
                        }, 0);
                    };
                    for (_b = 0, addresses_1 = addresses; _b < addresses_1.length; _b++) {
                        address = addresses_1[_b];
                        _loop_1(address);
                    }
                    return [2 /*return*/, scores];
            }
        });
    });
}
exports.strategy = strategy;
