"use strict";
exports.__esModule = true;
var balancer = require("./balancer");
var balancerSmartPool = require("./balancer-smart-pool");
var contractCall = require("./contract-call");
var ensDomainsOwned = require("./ens-domains-owned");
var ensReverseRecord = require("./ens-reverse-record");
var erc20BalanceOf = require("./erc20-balance-of");
var erc20BalanceOfCoeff = require("./erc20-balance-of-coeff");
var erc20BalanceOfFixedTotal = require("./erc20-balance-of-fixed-total");
var erc20BalanceOfCv = require("./erc20-balance-of-cv");
var erc20WithBalance = require("./erc20-with-balance");
var erc20BalanceOfDelegation = require("./erc20-balance-of-delegation");
var erc20BalanceOfQuadraticDelegation = require("./erc20-balance-of-quadratic-delegation");
var erc20Price = require("./erc20-price");
var balanceOfWithMin = require("./balance-of-with-min");
var balanceOfWithThresholds = require("./balance-of-with-thresholds");
var ethBalance = require("./eth-balance");
var ethWithBalance = require("./eth-with-balance");
var ethWalletAge = require("./eth-wallet-age");
var multichain = require("./multichain");
var makerDsChief = require("./maker-ds-chief");
var uni = require("./uni");
var yearnVault = require("./yearn-vault");
var fraxFinance = require("./frax-finance");
var moloch = require("./moloch");
var uniswap = require("./uniswap");
var flashstake = require("./flashstake");
var pancake = require("./pancake");
var synthetix = require("./synthetix");
var ctoken = require("./ctoken");
var cream = require("./cream");
var esd = require("./esd");
var esdDelegation = require("./esd-delegation");
var stakedUniswap = require("./staked-uniswap");
var piedao = require("./piedao");
var ethReceived = require("./eth-received");
var erc20Received = require("./erc20-received");
var ethPhilanthropy = require("./eth-philanthropy");
var xDaiEasyStaking = require("./xdai-easy-staking");
var xDaiPOSDAOStaking = require("./xdai-posdao-staking");
var xDaiStakeHolders = require("./xdai-stake-holders");
var xDaiStakeDelegation = require("./xdai-stake-delegation");
var defidollar = require("./defidollar");
var aavegotchi = require("./aavegotchi");
var aavegotchiAgip = require("./aavegotchi-agip");
var mithcash = require("./mithcash");
var dittomoney = require("./dittomoney");
var balancerUnipool = require("./balancer-unipool");
var sushiswap = require("./sushiswap");
var masterchef = require("./masterchef");
var stablexswap = require("./stablexswap");
var stakedKeep = require("./staked-keep");
var typhoon = require("./typhoon");
var delegation = require("./delegation");
var ticket = require("./ticket");
var work = require("./work");
var ticketValidity = require("./ticket-validity");
var opium = require("./opium");
var ocean = require("./ocean-marketplace");
var theGraphBalance = require("./the-graph-balance");
var theGraphDelegation = require("./the-graph-delegation");
var theGraphIndexing = require("./the-graph-indexing");
var whitelist = require("./whitelist");
var tokenlon = require("./tokenlon");
var rebased = require("./rebased");
var pobHash = require("./pob-hash");
var totalAxionShares = require("./total-axion-shares");
var erc1155BalanceOf = require("./erc1155-balance-of");
var erc1155BalanceOfCv = require("./erc1155-balance-of-cv");
var compLikeVotes = require("./comp-like-votes");
var governorAlpha = require("./governor-alpha");
var pagination = require("./pagination");
var rulerStakedToken = require("./ruler-staked-token");
var rulerStakedLP = require("./ruler-staked-lp");
var xcover = require("./xcover");
var niuStaked = require("./niu-staked");
var mushrooms = require("./mushrooms");
var curioCardsErc20Weighted = require("./curio-cards-erc20-weighted");
var saffronFinance = require("./saffron-finance");
var renNodes = require("./ren-nodes");
var multisigOwners = require("./multisig-owners");
var trancheStaking = require("./tranche-staking");
var pepemon = require("./pepemon");
var erc1155AllBalancesOf = require("./erc1155-all-balances-of");
var trancheStakingLP = require("./tranche-staking-lp");
var masterchefPoolBalance = require("./masterchef-pool-balance");
var masterchefPoolBalancePrice = require("./masterchef-pool-balance-price");
var avnBalanceOfStaked = require("./avn-balance-of-staked");
var badgeth = require("./badgeth");
var api = require("./api");
var xseen = require("./xseen");
var molochAll = require("./moloch-all");
var molochLoot = require("./moloch-loot");
var erc721Enumerable = require("./erc721-enumerable");
var erc721WithMultiplier = require("./erc721-with-multiplier");
var erc721WithTokenId = require("./erc721-with-tokenid");
var hoprUniLpFarm = require("./hopr-uni-lp-farm");
var erc721 = require("./erc721");
var apescape = require("./apescape");
var liftkitchen = require("./liftkitchen");
var decentralandEstateSize = require("./decentraland-estate-size");
var iotexBalance = require("./iotex-balance");
var iotexStakedBalance = require("./iotex-staked-balance");
var xrc20BalanceOf = require("./xrc20-balance-of");
var brightid = require("./brightid");
var inverseXINV = require("./inverse-xinv");
var modefi = require("./modefi");
var modefiStaking = require("./modefi-staking");
var spookyswap = require("./spookyswap");
var rnbwBalance = require("./rnbw-balance");
var celerSgnDelegation = require("./celer-sgn-delegation");
var balancerDelegation = require("./balancer-delegation");
var infinityProtocolPools = require("./infinityprotocol-liquidity-pools");
var aaveGovernancePower = require("./aave-governance-power");
var cake = require("./cake");
var planetFinance = require("./planet-finance");
var impossibleFinance = require("./impossible-finance");
var ogn = require("./ogn");
var zrxVotingPower = require("./zrx-voting-power");
var tombFinance = require("./tomb-finance");
var trancheStakingSLICE = require("./tranche-staking-slice");
var unipoolSameToken = require("./unipool-same-token");
var unipoolUniv2Lp = require("./unipool-univ2-lp");
exports["default"] = {
    balancer: balancer,
    'balancer-smart-pool': balancerSmartPool,
    'erc20-received': erc20Received,
    'contract-call': contractCall,
    'eth-received': ethReceived,
    'eth-philanthropy': ethPhilanthropy,
    'ens-domains-owned': ensDomainsOwned,
    'ens-reverse-record': ensReverseRecord,
    'erc20-balance-of': erc20BalanceOf,
    'erc20-balance-of-fixed-total': erc20BalanceOfFixedTotal,
    'erc20-balance-of-cv': erc20BalanceOfCv,
    'erc20-balance-of-coeff': erc20BalanceOfCoeff,
    'erc20-with-balance': erc20WithBalance,
    'erc20-balance-of-delegation': erc20BalanceOfDelegation,
    'erc20-balance-of-quadratic-delegation': erc20BalanceOfQuadraticDelegation,
    'erc20-price': erc20Price,
    'balance-of-with-min': balanceOfWithMin,
    'balance-of-with-thresholds': balanceOfWithThresholds,
    'eth-balance': ethBalance,
    'eth-with-balance': ethWithBalance,
    'eth-wallet-age': ethWalletAge,
    'maker-ds-chief': makerDsChief,
    erc721: erc721,
    'erc721-enumerable': erc721Enumerable,
    'erc721-with-multiplier': erc721WithMultiplier,
    'erc721-with-tokenid': erc721WithTokenId,
    'erc1155-balance-of': erc1155BalanceOf,
    'erc1155-balance-of-cv': erc1155BalanceOfCv,
    multichain: multichain,
    uni: uni,
    'frax-finance': fraxFinance,
    'yearn-vault': yearnVault,
    moloch: moloch,
    masterchef: masterchef,
    sushiswap: sushiswap,
    uniswap: uniswap,
    flashstake: flashstake,
    pancake: pancake,
    synthetix: synthetix,
    ctoken: ctoken,
    cream: cream,
    'staked-uniswap': stakedUniswap,
    esd: esd,
    'esd-delegation': esdDelegation,
    piedao: piedao,
    'xdai-easy-staking': xDaiEasyStaking,
    'xdai-posdao-staking': xDaiPOSDAOStaking,
    'xdai-stake-holders': xDaiStakeHolders,
    'xdai-stake-delegation': xDaiStakeDelegation,
    defidollar: defidollar,
    aavegotchi: aavegotchi,
    'aavegotchi-agip': aavegotchiAgip,
    mithcash: mithcash,
    stablexswap: stablexswap,
    dittomoney: dittomoney,
    'staked-keep': stakedKeep,
    'balancer-unipool': balancerUnipool,
    typhoon: typhoon,
    delegation: delegation,
    ticket: ticket,
    work: work,
    'ticket-validity': ticketValidity,
    opium: opium,
    'ocean-marketplace': ocean,
    'the-graph-balance': theGraphBalance,
    'the-graph-delegation': theGraphDelegation,
    'the-graph-indexing': theGraphIndexing,
    whitelist: whitelist,
    tokenlon: tokenlon,
    rebased: rebased,
    'pob-hash': pobHash,
    'total-axion-shares': totalAxionShares,
    'comp-like-votes': compLikeVotes,
    'governor-alpha': governorAlpha,
    pagination: pagination,
    'ruler-staked-token': rulerStakedToken,
    'ruler-staked-lp': rulerStakedLP,
    xcover: xcover,
    'niu-staked': niuStaked,
    mushrooms: mushrooms,
    'curio-cards-erc20-weighted': curioCardsErc20Weighted,
    'ren-nodes': renNodes,
    'multisig-owners': multisigOwners,
    'tranche-staking': trancheStaking,
    pepemon: pepemon,
    'erc1155-all-balances-of': erc1155AllBalancesOf,
    'saffron-finance': saffronFinance,
    'tranche-staking-lp': trancheStakingLP,
    'masterchef-pool-balance': masterchefPoolBalance,
    'masterchef-pool-balance-price': masterchefPoolBalancePrice,
    'avn-balance-of-staked': avnBalanceOfStaked,
    api: api,
    xseen: xseen,
    'moloch-all': molochAll,
    'moloch-loot': molochLoot,
    'hopr-uni-lp-farm': hoprUniLpFarm,
    apescape: apescape,
    liftkitchen: liftkitchen,
    'decentraland-estate-size': decentralandEstateSize,
    brightid: brightid,
    'inverse-xinv': inverseXINV,
    modefi: modefi,
    'modefi-staking': modefiStaking,
    'iotex-balance': iotexBalance,
    'iotex-staked-balance': iotexStakedBalance,
    'xrc20-balance-of': xrc20BalanceOf,
    spookyswap: spookyswap,
    'rnbw-balance': rnbwBalance,
    'celer-sgn-delegation': celerSgnDelegation,
    'balancer-delegation': balancerDelegation,
    'infinityprotocol-liquidity-pools': infinityProtocolPools,
    'aave-governance-power': aaveGovernancePower,
    cake: cake,
    'planet-finance': planetFinance,
    ogn: ogn,
    'impossible-finance': impossibleFinance,
    badgeth: badgeth,
    'zrx-voting-power': zrxVotingPower,
    'tomb-finance': tombFinance,
    'tranche-staking-slice': trancheStakingSLICE,
    'unipool-same-token': unipoolSameToken,
    'unipool-univ2-lp': unipoolUniv2Lp
};
