"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
exports.__esModule = true;
exports.strategy = exports.about = exports.examples = exports.version = exports.author = void 0;
var address_1 = require("@ethersproject/address");
var bignumber_1 = require("@ethersproject/bignumber");
var contracts_1 = require("@ethersproject/contracts");
var utils_1 = require("../../utils");
var examples_json_1 = require("./examples.json");
var README_md_1 = require("./README.md");
exports.author = 'andytcf';
exports.version = '1.0.0';
exports.examples = examples_json_1["default"];
exports.about = README_md_1["default"];
var DebtCacheABI = [
    {
        constant: true,
        inputs: [],
        name: 'currentDebt',
        outputs: [
            { internalType: 'uint256', name: 'debt', type: 'uint256' },
            { internalType: 'bool', name: 'anyRateIsInvalid', type: 'bool' }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    }
];
var SynthetixStateABI = [
    {
        constant: true,
        inputs: [],
        name: 'lastDebtLedgerEntry',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    }
];
var SynthetixStateContractAddress = '0x4b9Ca5607f1fF8019c1C6A3c2f0CC8de622D5B82';
var DebtCacheContractAddress = '0x9bB05EF2cA7DBAafFC3da1939D1492e6b00F39b8';
var defaultGraphs = {
    '1': 'https://api.thegraph.com/subgraphs/name/synthetixio-team/synthetix',
    '10': 'https://api.thegraph.com/subgraphs/name/synthetixio-team/optimism-general'
};
var ovmSnapshotJSON = 'QmNwvhq4By1Mownjycg7bWSXqbJWMVyAWRZ1K4mjxuvGXg';
var HIGH_PRECISE_UNIT = 1e27;
var MED_PRECISE_UNIT = 1e18;
var SCALING_FACTOR = 1e5;
function returnGraphParams(snapshot, addresses) {
    return {
        snxholders: {
            __args: {
                where: {
                    id_in: addresses.map(function (address) { return address.toLowerCase(); })
                },
                first: 1000,
                block: {
                    number: snapshot
                }
            },
            id: true,
            initialDebtOwnership: true,
            debtEntryAtIndex: true
        }
    };
}
var loadLastDebtLedgerEntry = function (provider, snapshot) { return __awaiter(void 0, void 0, void 0, function () {
    var contract, lastDebtLedgerEntry;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                contract = new contracts_1.Contract(SynthetixStateContractAddress, SynthetixStateABI, provider);
                return [4 /*yield*/, contract.lastDebtLedgerEntry({
                        blockTag: snapshot
                    })];
            case 1:
                lastDebtLedgerEntry = _a.sent();
                return [2 /*return*/, bignumber_1.BigNumber.from(lastDebtLedgerEntry)];
        }
    });
}); };
var loadL1TotalDebt = function (provider, snapshot) { return __awaiter(void 0, void 0, void 0, function () {
    var contract, currentDebtObject;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                contract = new contracts_1.Contract(DebtCacheContractAddress, DebtCacheABI, provider);
                return [4 /*yield*/, contract.currentDebt({
                        blockTag: snapshot
                    })];
            case 1:
                currentDebtObject = _a.sent();
                return [2 /*return*/, Number(currentDebtObject.debt) / MED_PRECISE_UNIT];
        }
    });
}); };
var quadraticWeightedVoteL1 = function (initialDebtOwnership, debtEntryAtIndex, totalL1Debt, scaledTotalL2Debt, lastDebtLedgerEntry) { return __awaiter(void 0, void 0, void 0, function () {
    var currentDebtOwnershipPercent, highPrecisionBalance, currentDebtBalance, totalDebtInSystem, ownershipPercentOfTotalDebt, scaledWeighting;
    return __generator(this, function (_a) {
        currentDebtOwnershipPercent = (Number(lastDebtLedgerEntry) / Number(debtEntryAtIndex)) *
            Number(initialDebtOwnership);
        highPrecisionBalance = totalL1Debt *
            MED_PRECISE_UNIT *
            (currentDebtOwnershipPercent / HIGH_PRECISE_UNIT);
        currentDebtBalance = highPrecisionBalance / MED_PRECISE_UNIT;
        totalDebtInSystem = totalL1Debt + scaledTotalL2Debt;
        ownershipPercentOfTotalDebt = currentDebtBalance / totalDebtInSystem;
        scaledWeighting = ownershipPercentOfTotalDebt * SCALING_FACTOR;
        return [2 /*return*/, Math.sqrt(scaledWeighting)];
    });
}); };
var quadraticWeightedVoteL2 = function (initialDebtOwnership, totalL1Debt, scaledTotalL2Debt, normalisedL2CRatio) { return __awaiter(void 0, void 0, void 0, function () {
    var totalDebtInSystem, ownershipPercentBN, ownershipPercent, ownershipOfDebtDollarValue, ownershipPercentOfTotalDebt, scaledWeighting;
    return __generator(this, function (_a) {
        totalDebtInSystem = totalL1Debt + scaledTotalL2Debt;
        ownershipPercentBN = Number(initialDebtOwnership) * normalisedL2CRatio;
        ownershipPercent = ownershipPercentBN / HIGH_PRECISE_UNIT;
        ownershipOfDebtDollarValue = ownershipPercent * scaledTotalL2Debt;
        ownershipPercentOfTotalDebt = ownershipOfDebtDollarValue / totalDebtInSystem;
        scaledWeighting = ownershipPercentOfTotalDebt * SCALING_FACTOR;
        return [2 /*return*/, Math.sqrt(scaledWeighting)];
    });
}); };
function strategy(_space, _network, _provider, _addresses, _, snapshot) {
    return __awaiter(this, void 0, void 0, function () {
        var score, blockTag, l1Results, normalisedL2CRatio, totalL1Debt, lastDebtLedgerEntry, totalL2Debt, scaledTotalL2Debt, i, holder, _a, _b, OVMSnapshot, array, k, address, _c, _d, _e;
        return __generator(this, function (_f) {
            switch (_f.label) {
                case 0:
                    score = {};
                    blockTag = typeof snapshot === 'number' ? snapshot : 'latest';
                    return [4 /*yield*/, utils_1.subgraphRequest(defaultGraphs[1], returnGraphParams(blockTag, _addresses))];
                case 1:
                    l1Results = (_f.sent());
                    normalisedL2CRatio = 1000 / 450;
                    return [4 /*yield*/, loadL1TotalDebt(_provider, snapshot)];
                case 2:
                    totalL1Debt = _f.sent();
                    return [4 /*yield*/, loadLastDebtLedgerEntry(_provider, snapshot)];
                case 3:
                    lastDebtLedgerEntry = _f.sent();
                    totalL2Debt = 4792266;
                    scaledTotalL2Debt = totalL2Debt * normalisedL2CRatio;
                    if (!(l1Results && l1Results.snxholders)) return [3 /*break*/, 7];
                    i = 0;
                    _f.label = 4;
                case 4:
                    if (!(i < l1Results.snxholders.length)) return [3 /*break*/, 7];
                    holder = l1Results.snxholders[i];
                    _a = score;
                    _b = address_1.getAddress(holder.id);
                    return [4 /*yield*/, quadraticWeightedVoteL1(holder.initialDebtOwnership, holder.debtEntryAtIndex, totalL1Debt, scaledTotalL2Debt, lastDebtLedgerEntry)];
                case 5:
                    _a[_b] = _f.sent();
                    _f.label = 6;
                case 6:
                    i++;
                    return [3 /*break*/, 4];
                case 7: return [4 /*yield*/, utils_1.ipfsGet('gateway.pinata.cloud', ovmSnapshotJSON)];
                case 8:
                    OVMSnapshot = _f.sent();
                    array = Object.assign.apply(Object, __spreadArrays([{}], OVMSnapshot.data.snxholders.map(function (key) {
                        var _a;
                        return (_a = {},
                            _a[address_1.getAddress(key.id)] = key.initialDebtOwnership,
                            _a);
                    })));
                    k = 0;
                    _f.label = 9;
                case 9:
                    if (!(k < _addresses.length)) return [3 /*break*/, 13];
                    address = _addresses[k];
                    if (!array[address_1.getAddress(address)]) return [3 /*break*/, 11];
                    _c = score;
                    _d = address_1.getAddress(address);
                    _e = _c[_d];
                    return [4 /*yield*/, quadraticWeightedVoteL2(array[address_1.getAddress(address)], totalL1Debt, scaledTotalL2Debt, normalisedL2CRatio)];
                case 10:
                    _c[_d] = _e + _f.sent();
                    return [3 /*break*/, 12];
                case 11: return [3 /*break*/, 12];
                case 12:
                    k++;
                    return [3 /*break*/, 9];
                case 13: return [2 /*return*/, score || {}];
            }
        });
    });
}
exports.strategy = strategy;
