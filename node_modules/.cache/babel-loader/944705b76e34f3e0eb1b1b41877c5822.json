{"ast":null,"code":"import { __read } from \"tslib\";\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { internalFromArray } from './fromArray';\nvar nodeEventEmitterMethods = ['addListener', 'removeListener'];\nvar eventTargetMethods = ['addEventListener', 'removeEventListener'];\nvar jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n\n  if (resultSelector) {\n    return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  var _a = __read(isEventTarget(target) ? eventTargetMethods.map(function (methodName) {\n    return function (handler) {\n      return target[methodName](eventName, handler, options);\n    };\n  }) : isNodeStyleEventEmitter(target) ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName)) : isJQueryStyleEventEmitter(target) ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName)) : [], 2),\n      add = _a[0],\n      remove = _a[1];\n\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap(function (subTarget) {\n        return fromEvent(subTarget, eventName, options);\n      })(internalFromArray(target));\n    }\n  }\n\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable(function (subscriber) {\n    var handler = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return subscriber.next(1 < args.length ? args : args[0]);\n    };\n\n    add(handler);\n    return function () {\n      return remove(handler);\n    };\n  });\n}\n\nfunction toCommonHandlerRegistry(target, eventName) {\n  return function (methodName) {\n    return function (handler) {\n      return target[methodName](eventName, handler);\n    };\n  };\n}\n\nfunction isNodeStyleEventEmitter(target) {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\nfunction isJQueryStyleEventEmitter(target) {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\nfunction isEventTarget(target) {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}","map":{"version":3,"sources":["../../../../src/internal/observable/fromEvent.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __read } from \"tslib\";\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { internalFromArray } from './fromArray';\nvar nodeEventEmitterMethods = ['addListener', 'removeListener'];\nvar eventTargetMethods = ['addEventListener', 'removeEventListener'];\nvar jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    var _a = __read(isEventTarget(target)\n        ? eventTargetMethods.map(function (methodName) { return function (handler) { return target[methodName](eventName, handler, options); }; })\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [], 2), add = _a[0], remove = _a[1];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap(function (subTarget) { return fromEvent(subTarget, eventName, options); })(internalFromArray(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable(function (subscriber) {\n        var handler = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return subscriber.next(1 < args.length ? args : args[0]);\n        };\n        add(handler);\n        return function () { return remove(handler); };\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return function (methodName) { return function (handler) { return target[methodName](eventName, handler); }; };\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n//# sourceMappingURL=fromEvent.js.map"]},"metadata":{},"sourceType":"module"}