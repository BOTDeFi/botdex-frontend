{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Pools/Table/index.tsx\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getFarmMode } from '@/store/pools/helpers';\nimport { PoolTableRow } from '..';\nimport './Table.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ColumnStyle;\n\n(function (ColumnStyle) {\n  ColumnStyle[\"default\"] = \"default\";\n  ColumnStyle[\"disabled\"] = \"disabled\";\n})(ColumnStyle || (ColumnStyle = {}));\n\nconst mockData = {\n  profitTokenSymbol: 'RP1'\n};\nconst columns = [{\n  style: 'disabled',\n  name: `Recent ${mockData.profitTokenSymbol} profit`\n}, {\n  name: 'APR'\n}, {\n  name: 'Total staked'\n}, {\n  name: 'Ends in'\n}];\nconst Table = /*#__PURE__*/React.memo(_c = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pools-table box-shadow box-white box-overflow-v\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pools-table__head t-box-none\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), columns.map(({\n        name,\n        style = 'default'\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames({\n          'text-ssm text-gray-l-2': style === ColumnStyle.disabled,\n          'text-bold text-yellow': style === ColumnStyle.default\n        }),\n        children: name\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), data.map(pool => {\n      const farmMode = getFarmMode(pool);\n      return /*#__PURE__*/_jsxDEV(PoolTableRow // key={`${rowData.tokenEarn?.address}${rowData.tokenStake.address}`}\n      , {\n        farmMode: farmMode,\n        pool: pool,\n        columns: columns\n      }, pool.isAutoVault ? 'auto-pool' : pool.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n});\n_c2 = Table;\nexport default Table;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Table$React.memo\");\n$RefreshReg$(_c2, \"Table\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Pools/Table/index.tsx"],"names":["React","classNames","getFarmMode","PoolTableRow","ColumnStyle","mockData","profitTokenSymbol","columns","style","name","Table","memo","data","map","disabled","default","pool","farmMode","isAutoVault","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,WAAT,QAA4B,uBAA5B;AAGA,SAASC,YAAT,QAA6B,IAA7B;AAEA,OAAO,cAAP;;IAEKC,W;;WAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAgBL,MAAMC,QAAQ,GAAG;AACfC,EAAAA,iBAAiB,EAAE;AADJ,CAAjB;AAIA,MAAMC,OAAkB,GAAG,CACzB;AACEC,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,IAAI,EAAG,UAASJ,QAAQ,CAACC,iBAAkB;AAF7C,CADyB,EAKzB;AACEG,EAAAA,IAAI,EAAE;AADR,CALyB,EAQzB;AACEA,EAAAA,IAAI,EAAE;AADR,CARyB,EAWzB;AACEA,EAAAA,IAAI,EAAE;AADR,CAXyB,CAA3B;AAgBA,MAAMC,KAA4B,gBAAGV,KAAK,CAACW,IAAN,MAAW,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5D,sBACE;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,EAEGL,OAAO,CAACM,GAAR,CAAY,CAAC;AAAEJ,QAAAA,IAAF;AAAQD,QAAAA,KAAK,GAAG;AAAhB,OAAD,kBACX;AAEE,QAAA,SAAS,EAAEP,UAAU,CAAC;AACpB,oCAA0BO,KAAK,KAAKJ,WAAW,CAACU,QAD5B;AAEpB,mCAAyBN,KAAK,KAAKJ,WAAW,CAACW;AAF3B,SAAD,CAFvB;AAAA,kBAOGN;AAPH,SACOA,IADP;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAeGG,IAAI,CAACC,GAAL,CAAUG,IAAD,IAAU;AAClB,YAAMC,QAAQ,GAAGf,WAAW,CAACc,IAAD,CAA5B;AACA,0BACE,QAAC,YAAD,CACE;AADF;AAGE,QAAA,QAAQ,EAAEC,QAHZ;AAIE,QAAA,IAAI,EAAED,IAJR;AAKE,QAAA,OAAO,EAAET;AALX,SAEOS,IAAI,CAACE,WAAL,GAAmB,WAAnB,GAAiCF,IAAI,CAACG,EAF7C;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAXA,CAfH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA/BoC,CAArC;MAAMT,K;AAiCN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { getFarmMode } from '@/store/pools/helpers';\nimport { Pool } from '@/types';\n\nimport { PoolTableRow } from '..';\n\nimport './Table.scss';\n\nenum ColumnStyle {\n  default = 'default',\n  disabled = 'disabled',\n}\n\ntype IColumnStyle = keyof typeof ColumnStyle;\n\ninterface ITableProps {\n  data: Pool[];\n}\n\ninterface IColumn {\n  style?: IColumnStyle;\n  name: string;\n}\n\nconst mockData = {\n  profitTokenSymbol: 'RP1',\n};\n\nconst columns: IColumn[] = [\n  {\n    style: 'disabled',\n    name: `Recent ${mockData.profitTokenSymbol} profit`,\n  },\n  {\n    name: 'APR',\n  },\n  {\n    name: 'Total staked',\n  },\n  {\n    name: 'Ends in',\n  },\n];\n\nconst Table: React.FC<ITableProps> = React.memo(({ data }) => {\n  return (\n    <div className=\"pools-table box-shadow box-white box-overflow-v\">\n      <div className=\"pools-table__head t-box-none\">\n        <div />\n        {columns.map(({ name, style = 'default' }) => (\n          <div\n            key={name}\n            className={classNames({\n              'text-ssm text-gray-l-2': style === ColumnStyle.disabled,\n              'text-bold text-yellow': style === ColumnStyle.default,\n            })}\n          >\n            {name}\n          </div>\n        ))}\n      </div>\n      {data.map((pool) => {\n        const farmMode = getFarmMode(pool);\n        return (\n          <PoolTableRow\n            // key={`${rowData.tokenEarn?.address}${rowData.tokenStake.address}`}\n            key={pool.isAutoVault ? 'auto-pool' : pool.id}\n            farmMode={farmMode}\n            pool={pool}\n            columns={columns}\n          />\n        );\n      })}\n    </div>\n  );\n});\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}