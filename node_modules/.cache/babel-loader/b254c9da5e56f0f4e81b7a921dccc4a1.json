{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/from';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nexport function onErrorResumeNext() {\n  var sources = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n\n  var nextSources = argsOrArgArray(sources);\n  return operate(function (source, subscriber) {\n    var remaining = __spreadArray([source], __read(nextSources));\n\n    var subscribeNext = function () {\n      if (!subscriber.closed) {\n        if (remaining.length > 0) {\n          var nextSource = void 0;\n\n          try {\n            nextSource = innerFrom(remaining.shift());\n          } catch (err) {\n            subscribeNext();\n            return;\n          }\n\n          var innerSub = new OperatorSubscriber(subscriber, undefined, noop, noop);\n          subscriber.add(nextSource.subscribe(innerSub));\n          innerSub.add(subscribeNext);\n        } else {\n          subscriber.complete();\n        }\n      }\n    };\n\n    subscribeNext();\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/onErrorResumeNext.ts"],"names":[],"mappings":";AAEA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,SAAT,QAA0B,oBAA1B;AACA,SAAS,cAAT,QAA+B,wBAA/B;AACA,SAAS,kBAAT,QAAmC,sBAAnC;AACA,SAAS,IAAT,QAAqB,cAArB;AA4EA,OAAM,SAAU,iBAAV,GAA2B;AAC/B,MAAA,OAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAyE;AAAzE,IAAA,OAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAMA,MAAM,WAAW,GAAI,cAAc,CAAC,OAAD,CAAnC;AAEA,SAAO,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAmB;AAChC,QAAM,SAAS,GAAA,aAAA,CAAA,CAAI,MAAJ,CAAA,EAAU,MAAA,CAAK,WAAL,CAAV,CAAf;;AACA,QAAM,aAAa,GAAG,YAAA;AACpB,UAAI,CAAC,UAAU,CAAC,MAAhB,EAAwB;AACtB,YAAI,SAAS,CAAC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,cAAI,UAAU,GAAA,KAAA,CAAd;;AACA,cAAI;AACF,YAAA,UAAU,GAAG,SAAS,CAAgB,SAAS,CAAC,KAAV,EAAhB,CAAtB;AACD,WAFD,CAEE,OAAO,GAAP,EAAY;AACZ,YAAA,aAAa;AACb;AACD;;AAMD,cAAM,QAAQ,GAAG,IAAI,kBAAJ,CAAuB,UAAvB,EAAmC,SAAnC,EAA8C,IAA9C,EAAoD,IAApD,CAAjB;AACA,UAAA,UAAU,CAAC,GAAX,CAAe,UAAU,CAAC,SAAX,CAAqB,QAArB,CAAf;AACA,UAAA,QAAQ,CAAC,GAAT,CAAa,aAAb;AACD,SAhBD,MAgBO;AACL,UAAA,UAAU,CAAC,QAAX;AACD;AACF;AACF,KAtBD;;AAwBA,IAAA,aAAa;AACd,GA3Ba,CAAd;AA4BD","sourceRoot":"","sourcesContent":["import { __read, __spreadArray } from \"tslib\";\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/from';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nexport function onErrorResumeNext() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    var nextSources = argsOrArgArray(sources);\n    return operate(function (source, subscriber) {\n        var remaining = __spreadArray([source], __read(nextSources));\n        var subscribeNext = function () {\n            if (!subscriber.closed) {\n                if (remaining.length > 0) {\n                    var nextSource = void 0;\n                    try {\n                        nextSource = innerFrom(remaining.shift());\n                    }\n                    catch (err) {\n                        subscribeNext();\n                        return;\n                    }\n                    var innerSub = new OperatorSubscriber(subscriber, undefined, noop, noop);\n                    subscriber.add(nextSource.subscribe(innerSub));\n                    innerSub.add(subscribeNext);\n                }\n                else {\n                    subscriber.complete();\n                }\n            }\n        };\n        subscribeNext();\n    });\n}\n//# sourceMappingURL=onErrorResumeNext.js.map"]},"metadata":{},"sourceType":"module"}