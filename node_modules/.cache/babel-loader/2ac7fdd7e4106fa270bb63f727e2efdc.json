{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Trade/YourLiquidity/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Scrollbar } from 'react-scrollbars-custom';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { observer } from 'mobx-react-lite';\nimport UnknownImg from \"@/assets/img/currency/unknown.svg\";\nimport { Button } from '@/components/atoms';\nimport { contracts } from '@/config';\nimport { useWalletConnectorContext } from '@/services/MetamaskConnect';\nimport { useMst } from '@/store';\nimport { clogError } from '@/utils/logger';\nimport { LiquidityInfoModal, TradeBox } from '..';\nimport './YourLiquidity.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USER_PAIRS = gql`\n  query User($address: String!) {\n    user(id: $address) {\n      liquidityPositions {\n        pair {\n          id\n          reserve0\n          reserve1\n          token0Price\n          token1Price\n          token0 {\n            symbol\n            decimals\n            id\n          }\n          token1 {\n            symbol\n            decimals\n            id\n          }\n        }\n      }\n    }\n  }\n`;\nconst YourLiquidity = observer(_c = _s(() => {\n  _s();\n\n  const {\n    user\n  } = useMst();\n  const {\n    metamaskService\n  } = useWalletConnectorContext();\n  const [getUserLiquidities, {\n    loading,\n    data: userLiquidities\n  }] = useLazyQuery(USER_PAIRS, {\n    pollInterval: 60000\n  });\n  const [liquidityInfo, setLiquidityInfo] = React.useState(undefined);\n  const [liquidities, setLiquidities] = React.useState([]);\n\n  const handleCloseLiquidityInfoModal = () => {\n    setLiquidityInfo(undefined);\n  };\n\n  const handleOpenLiquidityInfoModal = info => {\n    setLiquidityInfo(info);\n  };\n\n  const handleCheckLiquidity = React.useCallback(data => {\n    if (data.user.liquidityPositions) {\n      for (let i = 0; i < data.user.liquidityPositions.length; i += 1) {\n        metamaskService.callContractMethodFromNewContract(data.user.liquidityPositions[i].pair.id, contracts.PAIR.ABI, 'balanceOf', [user.address]).then(res => {\n          if (+res > 0) {\n            setLiquidities(arr => [...arr, data.user.liquidityPositions[i]]);\n          }\n        }).catch(err => {\n          clogError('check lp balance', err);\n        });\n      }\n    }\n  }, [metamaskService, user.address]);\n  React.useEffect(() => {\n    if (user.address) {\n      getUserLiquidities({\n        variables: {\n          address: user.address\n        }\n      });\n    }\n  }, [user.address, getUserLiquidities]);\n  React.useEffect(() => {\n    if (userLiquidities && userLiquidities.user && !loading) {\n      handleCheckLiquidity(userLiquidities);\n    }\n  }, [userLiquidities, loading, handleCheckLiquidity]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TradeBox, {\n      className: \"y-liquidity\",\n      title: \"Liquidity\",\n      subtitle: \"Add liquidity to receive LP tokens\",\n      settingsLink: \"/trade/liquidity/settings\",\n      recentTxLink: \"/trade/liquidity/history\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"y-liquidity__btn\",\n        link: \"/trade/liquidity/add\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-md text-white text-bold\",\n          children: \"Add liquidity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"y-liquidity__title text-black  text-md\",\n        children: \"Your Liquidity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"y-liquidity__box\",\n        children: [user.address && loading ? 'Loading' : '', user.address && liquidities && liquidities.length ? /*#__PURE__*/_jsxDEV(Scrollbar, {\n          className: \"recent-txs__scroll\",\n          style: {\n            width: '100%',\n            height: liquidities.length > 3 ? '50vh' : `${liquidities.length * 76}px`\n          },\n          children: liquidities.map(liquidity => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"y-liquidity__item box-f-ai-c box-pointer\",\n            onClick: () => handleOpenLiquidityInfoModal({\n              address: liquidity.pair.id,\n              token0: {\n                address: liquidity.pair.token0.id,\n                symbol: liquidity.pair.token0.symbol,\n                balance: liquidity.pair.reserve0,\n                rate: liquidity.pair.token0Price,\n                decimals: liquidity.pair.token0.decimals\n              },\n              token1: {\n                address: liquidity.pair.token1.id,\n                symbol: liquidity.pair.token1.symbol,\n                balance: liquidity.pair.reserve1,\n                rate: liquidity.pair.token1Price,\n                decimals: liquidity.pair.token1.decimals\n              }\n            }),\n            onKeyDown: () => handleOpenLiquidityInfoModal({\n              address: liquidity.pair.id,\n              token0: {\n                address: liquidity.pair.token0.id,\n                symbol: liquidity.pair.token0.symbol,\n                balance: liquidity.pair.reserve0,\n                rate: liquidity.pair.token0Price,\n                decimals: liquidity.pair.token0.decimals\n              },\n              token1: {\n                address: liquidity.pair.token1.id,\n                symbol: liquidity.pair.token1.symbol,\n                balance: liquidity.pair.reserve1,\n                rate: liquidity.pair.token1Price,\n                decimals: liquidity.pair.token1.decimals\n              }\n            }),\n            role: \"button\",\n            tabIndex: 0,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: UnknownImg,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: UnknownImg,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-black text-smd\",\n              children: `${liquidity.pair.token0.symbol}/${liquidity.pair.token1.symbol}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)]\n          }, liquidity.pair.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this) : '', user.address && !loading && !liquidities.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center  text-black box-f-fd-c box-f-ai-c\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"y-liquidity__text\",\n            children: \"No liquidity found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this) : '', !user.address ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center  text-black\",\n          children: \"Connect to a wallet to view your liquidity.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Don\\u2018t see a pool you joined?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"If you staked your LP tokens in a farm, unstake them to see them here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LiquidityInfoModal, {\n      info: liquidityInfo,\n      handleCloseModal: handleCloseLiquidityInfoModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"lKkVX5t9cVKFHtJYt97b6qPBzCQ=\", false, function () {\n  return [useMst, useWalletConnectorContext, useLazyQuery];\n}));\n_c2 = YourLiquidity;\nexport default YourLiquidity;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"YourLiquidity$observer\");\n$RefreshReg$(_c2, \"YourLiquidity\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Trade/YourLiquidity/index.tsx"],"names":["React","Scrollbar","gql","useLazyQuery","observer","Button","contracts","useWalletConnectorContext","useMst","clogError","LiquidityInfoModal","TradeBox","USER_PAIRS","YourLiquidity","user","metamaskService","getUserLiquidities","loading","data","userLiquidities","pollInterval","liquidityInfo","setLiquidityInfo","useState","undefined","liquidities","setLiquidities","handleCloseLiquidityInfoModal","handleOpenLiquidityInfoModal","info","handleCheckLiquidity","useCallback","liquidityPositions","i","length","callContractMethodFromNewContract","pair","id","PAIR","ABI","address","then","res","arr","catch","err","useEffect","variables","width","height","map","liquidity","token0","symbol","balance","reserve0","rate","token0Price","decimals","token1","reserve1","token1Price","UnknownImg"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Scrollbar } from 'react-scrollbars-custom';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { observer } from 'mobx-react-lite';\n\nimport UnknownImg from '@/assets/img/currency/unknown.svg';\nimport { Button } from '@/components/atoms';\nimport { contracts } from '@/config';\nimport { useWalletConnectorContext } from '@/services/MetamaskConnect';\nimport { useMst } from '@/store';\nimport { ILiquidityInfo } from '@/types';\nimport { clogError } from '@/utils/logger';\n\nimport { LiquidityInfoModal, TradeBox } from '..';\n\nimport './YourLiquidity.scss';\n\nconst USER_PAIRS = gql`\n  query User($address: String!) {\n    user(id: $address) {\n      liquidityPositions {\n        pair {\n          id\n          reserve0\n          reserve1\n          token0Price\n          token1Price\n          token0 {\n            symbol\n            decimals\n            id\n          }\n          token1 {\n            symbol\n            decimals\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst YourLiquidity: React.FC = observer(() => {\n  const { user } = useMst();\n  const { metamaskService } = useWalletConnectorContext();\n\n  const [getUserLiquidities, { loading, data: userLiquidities }] = useLazyQuery(USER_PAIRS, {\n    pollInterval: 60000,\n  });\n\n  const [liquidityInfo, setLiquidityInfo] = React.useState<ILiquidityInfo | undefined>(undefined);\n  const [liquidities, setLiquidities] = React.useState<any>([]);\n\n  const handleCloseLiquidityInfoModal = (): void => {\n    setLiquidityInfo(undefined);\n  };\n\n  const handleOpenLiquidityInfoModal = (info: ILiquidityInfo): void => {\n    setLiquidityInfo(info);\n  };\n\n  const handleCheckLiquidity = React.useCallback(\n    (data: any) => {\n      if (data.user.liquidityPositions) {\n        for (let i = 0; i < data.user.liquidityPositions.length; i += 1) {\n          metamaskService\n            .callContractMethodFromNewContract(\n              data.user.liquidityPositions[i].pair.id,\n              contracts.PAIR.ABI,\n              'balanceOf',\n              [user.address],\n            )\n            .then((res: any) => {\n              if (+res > 0) {\n                setLiquidities((arr: any) => [...arr, data.user.liquidityPositions[i]]);\n              }\n            })\n            .catch((err) => {\n              clogError('check lp balance', err);\n            });\n        }\n      }\n    },\n    [metamaskService, user.address],\n  );\n\n  React.useEffect(() => {\n    if (user.address) {\n      getUserLiquidities({\n        variables: {\n          address: user.address,\n        },\n      });\n    }\n  }, [user.address, getUserLiquidities]);\n\n  React.useEffect(() => {\n    if (userLiquidities && userLiquidities.user && !loading) {\n      handleCheckLiquidity(userLiquidities);\n    }\n  }, [userLiquidities, loading, handleCheckLiquidity]);\n\n  return (\n    <>\n      <TradeBox\n        className=\"y-liquidity\"\n        title=\"Liquidity\"\n        subtitle=\"Add liquidity to receive LP tokens\"\n        settingsLink=\"/trade/liquidity/settings\"\n        recentTxLink=\"/trade/liquidity/history\"\n      >\n        <Button className=\"y-liquidity__btn\" link=\"/trade/liquidity/add\">\n          <span className=\"text-md text-white text-bold\">Add liquidity</span>\n        </Button>\n        <div className=\"y-liquidity__title text-black  text-md\">Your Liquidity</div>\n        <div className=\"y-liquidity__box\">\n          {user.address && loading ? 'Loading' : ''}\n\n          {user.address && liquidities && liquidities.length ? (\n            <Scrollbar\n              className=\"recent-txs__scroll\"\n              style={{\n                width: '100%',\n                height: liquidities.length > 3 ? '50vh' : `${liquidities.length * 76}px`,\n              }}\n            >\n              {liquidities.map((liquidity: any) => (\n                <div\n                  key={liquidity.pair.id}\n                  className=\"y-liquidity__item box-f-ai-c box-pointer\"\n                  onClick={() =>\n                    handleOpenLiquidityInfoModal({\n                      address: liquidity.pair.id,\n                      token0: {\n                        address: liquidity.pair.token0.id,\n                        symbol: liquidity.pair.token0.symbol,\n                        balance: liquidity.pair.reserve0,\n                        rate: liquidity.pair.token0Price,\n                        decimals: liquidity.pair.token0.decimals,\n                      },\n                      token1: {\n                        address: liquidity.pair.token1.id,\n                        symbol: liquidity.pair.token1.symbol,\n                        balance: liquidity.pair.reserve1,\n                        rate: liquidity.pair.token1Price,\n                        decimals: liquidity.pair.token1.decimals,\n                      },\n                    })\n                  }\n                  onKeyDown={() =>\n                    handleOpenLiquidityInfoModal({\n                      address: liquidity.pair.id,\n                      token0: {\n                        address: liquidity.pair.token0.id,\n                        symbol: liquidity.pair.token0.symbol,\n                        balance: liquidity.pair.reserve0,\n                        rate: liquidity.pair.token0Price,\n                        decimals: liquidity.pair.token0.decimals,\n                      },\n                      token1: {\n                        address: liquidity.pair.token1.id,\n                        symbol: liquidity.pair.token1.symbol,\n                        balance: liquidity.pair.reserve1,\n                        rate: liquidity.pair.token1Price,\n                        decimals: liquidity.pair.token1.decimals,\n                      },\n                    })\n                  }\n                  role=\"button\"\n                  tabIndex={0}\n                >\n                  <img src={UnknownImg} alt=\"\" />\n                  <img src={UnknownImg} alt=\"\" />\n                  <span className=\"text-black text-smd\">{`${liquidity.pair.token0.symbol}/${liquidity.pair.token1.symbol}`}</span>\n                </div>\n              ))}\n            </Scrollbar>\n          ) : (\n            ''\n          )}\n\n          {user.address && !loading && !liquidities.length ? (\n            <div className=\"text-center  text-black box-f-fd-c box-f-ai-c\">\n              <div className=\"y-liquidity__text\">No liquidity found.</div>\n            </div>\n          ) : (\n            ''\n          )}\n\n          {!user.address ? (\n            <div className=\"text-center  text-black\">\n              Connect to a wallet to view your liquidity.\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n        <div className=\"text-gray\">\n          <p>Don&lsquo;t see a pool you joined?</p>\n          <p>If you staked your LP tokens in a farm, unstake them to see them here.</p>\n        </div>\n      </TradeBox>\n      <LiquidityInfoModal info={liquidityInfo} handleCloseModal={handleCloseLiquidityInfoModal} />\n    </>\n  );\n});\n\nexport default YourLiquidity;\n"]},"metadata":{},"sourceType":"module"}