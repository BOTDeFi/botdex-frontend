{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\nvar ReplaySubject = function (_super) {\n  __extends(ReplaySubject, _super);\n\n  function ReplaySubject(_bufferSize, _windowTime, _timestampProvider) {\n    if (_bufferSize === void 0) {\n      _bufferSize = Infinity;\n    }\n\n    if (_windowTime === void 0) {\n      _windowTime = Infinity;\n    }\n\n    if (_timestampProvider === void 0) {\n      _timestampProvider = dateTimestampProvider;\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this._bufferSize = _bufferSize;\n    _this._windowTime = _windowTime;\n    _this._timestampProvider = _timestampProvider;\n    _this._buffer = [];\n    _this._infiniteTimeWindow = true;\n    _this._infiniteTimeWindow = _windowTime === Infinity;\n    _this._bufferSize = Math.max(1, _bufferSize);\n    _this._windowTime = Math.max(1, _windowTime);\n    return _this;\n  }\n\n  ReplaySubject.prototype.next = function (value) {\n    var _a = this,\n        isStopped = _a.isStopped,\n        _buffer = _a._buffer,\n        _infiniteTimeWindow = _a._infiniteTimeWindow,\n        _timestampProvider = _a._timestampProvider,\n        _windowTime = _a._windowTime;\n\n    if (!isStopped) {\n      _buffer.push(value);\n\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n\n    this._trimBuffer();\n\n    _super.prototype.next.call(this, value);\n  };\n\n  ReplaySubject.prototype._subscribe = function (subscriber) {\n    this._throwIfClosed();\n\n    this._trimBuffer();\n\n    var subscription = this._innerSubscribe(subscriber);\n\n    var _a = this,\n        _infiniteTimeWindow = _a._infiniteTimeWindow,\n        _buffer = _a._buffer;\n\n    var copy = _buffer.slice();\n\n    for (var i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i]);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  };\n\n  ReplaySubject.prototype._trimBuffer = function () {\n    var _a = this,\n        _bufferSize = _a._bufferSize,\n        _timestampProvider = _a._timestampProvider,\n        _buffer = _a._buffer,\n        _infiniteTimeWindow = _a._infiniteTimeWindow;\n\n    var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    if (!_infiniteTimeWindow) {\n      var now = _timestampProvider.now();\n\n      var last = 0;\n\n      for (var i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n        last = i;\n      }\n\n      last && _buffer.splice(0, last + 1);\n    }\n  };\n\n  return ReplaySubject;\n}(Subject);\n\nexport { ReplaySubject };","map":{"version":3,"sources":["../../../src/internal/ReplaySubject.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nvar ReplaySubject = (function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(_bufferSize, _windowTime, _timestampProvider) {\n        if (_bufferSize === void 0) { _bufferSize = Infinity; }\n        if (_windowTime === void 0) { _windowTime = Infinity; }\n        if (_timestampProvider === void 0) { _timestampProvider = dateTimestampProvider; }\n        var _this = _super.call(this) || this;\n        _this._bufferSize = _bufferSize;\n        _this._windowTime = _windowTime;\n        _this._timestampProvider = _timestampProvider;\n        _this._buffer = [];\n        _this._infiniteTimeWindow = true;\n        _this._infiniteTimeWindow = _windowTime === Infinity;\n        _this._bufferSize = Math.max(1, _bufferSize);\n        _this._windowTime = Math.max(1, _windowTime);\n        return _this;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var _a = this, isStopped = _a.isStopped, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow, _timestampProvider = _a._timestampProvider, _windowTime = _a._windowTime;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        var subscription = this._innerSubscribe(subscriber);\n        var _a = this, _infiniteTimeWindow = _a._infiniteTimeWindow, _buffer = _a._buffer;\n        var copy = _buffer.slice();\n        for (var i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    };\n    ReplaySubject.prototype._trimBuffer = function () {\n        var _a = this, _bufferSize = _a._bufferSize, _timestampProvider = _a._timestampProvider, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow;\n        var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            var now = _timestampProvider.now();\n            var last = 0;\n            for (var i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    };\n    return ReplaySubject;\n}(Subject));\nexport { ReplaySubject };\n//# sourceMappingURL=ReplaySubject.js.map"]},"metadata":{},"sourceType":"module"}