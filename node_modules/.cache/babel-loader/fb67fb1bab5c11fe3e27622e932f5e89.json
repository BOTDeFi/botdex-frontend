{"ast":null,"code":"import { types } from 'mobx-state-tree';\nconst PoolsCollectOptions = types.model({\n  poolId: types.identifierNumber,\n  earnings: types.string,\n  farmMode: types.string,\n  earningTokenSymbol: types.string,\n  fullBalance: types.string,\n  earningTokenDecimals: types.number\n});\nconst PoolsCollectModal = types.model({\n  options: types.maybeNull(PoolsCollectOptions)\n}).views(self => ({\n  get isOpen() {\n    return Boolean(self.options);\n  }\n\n})).actions(_c = self => ({\n  close() {\n    self.options = null;\n  },\n\n  open(options) {\n    self.options = options;\n  }\n\n}));\n_c2 = PoolsCollectModal;\nexport default PoolsCollectModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PoolsCollectModal$types\\n  .model({\\n    options: types.maybeNull(PoolsCollectOptions),\\n  })\\n  .views((self) => ({\\n    get isOpen() {\\n      return Boolean(self.options);\\n    },\\n  }))\\n  .actions\");\n$RefreshReg$(_c2, \"PoolsCollectModal\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/store/Models/Modals/PoolsCollectModal.ts"],"names":["types","PoolsCollectOptions","model","poolId","identifierNumber","earnings","string","farmMode","earningTokenSymbol","fullBalance","earningTokenDecimals","number","PoolsCollectModal","options","maybeNull","views","self","isOpen","Boolean","actions","close","open"],"mappings":"AAAA,SAAmBA,KAAnB,QAAgC,iBAAhC;AAEA,MAAMC,mBAAmB,GAAGD,KAAK,CAACE,KAAN,CAAY;AACtCC,EAAAA,MAAM,EAAEH,KAAK,CAACI,gBADwB;AAEtCC,EAAAA,QAAQ,EAAEL,KAAK,CAACM,MAFsB;AAGtCC,EAAAA,QAAQ,EAAEP,KAAK,CAACM,MAHsB;AAItCE,EAAAA,kBAAkB,EAAER,KAAK,CAACM,MAJY;AAKtCG,EAAAA,WAAW,EAAET,KAAK,CAACM,MALmB;AAMtCI,EAAAA,oBAAoB,EAAEV,KAAK,CAACW;AANU,CAAZ,CAA5B;AASA,MAAMC,iBAAiB,GAAGZ,KAAK,CAC5BE,KADuB,CACjB;AACLW,EAAAA,OAAO,EAAEb,KAAK,CAACc,SAAN,CAAgBb,mBAAhB;AADJ,CADiB,EAIvBc,KAJuB,CAIhBC,IAAD,KAAW;AAChB,MAAIC,MAAJ,GAAa;AACX,WAAOC,OAAO,CAACF,IAAI,CAACH,OAAN,CAAd;AACD;;AAHe,CAAX,CAJiB,EASvBM,OATuB,MASdH,IAAD,KAAW;AAClBI,EAAAA,KAAK,GAAG;AACNJ,IAAAA,IAAI,CAACH,OAAL,GAAe,IAAf;AACD,GAHiB;;AAIlBQ,EAAAA,IAAI,CAACR,OAAD,EAAgD;AAClDG,IAAAA,IAAI,CAACH,OAAL,GAAeA,OAAf;AACD;;AANiB,CAAX,CATe,CAA1B;MAAMD,iB;AAkBN,eAAeA,iBAAf","sourcesContent":["import { Instance, types } from 'mobx-state-tree';\n\nconst PoolsCollectOptions = types.model({\n  poolId: types.identifierNumber,\n  earnings: types.string,\n  farmMode: types.string,\n  earningTokenSymbol: types.string,\n  fullBalance: types.string,\n  earningTokenDecimals: types.number,\n});\n\nconst PoolsCollectModal = types\n  .model({\n    options: types.maybeNull(PoolsCollectOptions),\n  })\n  .views((self) => ({\n    get isOpen() {\n      return Boolean(self.options);\n    },\n  }))\n  .actions((self) => ({\n    close() {\n      self.options = null;\n    },\n    open(options: Instance<typeof PoolsCollectOptions>) {\n      self.options = options;\n    },\n  }));\n\nexport default PoolsCollectModal;\n"]},"metadata":{},"sourceType":"module"}