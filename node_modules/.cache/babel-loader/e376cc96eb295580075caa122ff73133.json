{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Trade/Swap/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { observer } from 'mobx-react-lite';\nimport moment from 'moment';\nimport TradeWrapper from '../../../../HOC/TradeWrapper';\nimport { useMst } from '../../../../store';\nimport Exchange from '../Exchange';\nimport { ExchangeSettings, RecentTxs } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_USER_TRX = gql`\n  query Swap($address: String!) {\n    swaps(where: { from: $address }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n      }\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n    }\n  }\n`;\nconst ExchangeComp = TradeWrapper(Exchange, 'getAmountOut');\n_c = ExchangeComp;\nconst Swap = observer(_c2 = _s(() => {\n  _s();\n\n  const {\n    user\n  } = useMst();\n  const [getUserTrx, {\n    error,\n    data: userTrx\n  }] = useLazyQuery(GET_USER_TRX, {\n    pollInterval: 60000\n  });\n  const [trx, setTrx] = React.useState(undefined);\n  const [settings, setSettings] = React.useState({\n    slippage: {\n      type: 'btn',\n      value: 0.1\n    },\n    txDeadline: 20,\n    txDeadlineUtc: moment.utc().add(20, 'm').valueOf()\n  });\n\n  const handleSaveSettings = settingsObj => {\n    setSettings(settingsObj);\n  };\n\n  React.useEffect(() => {\n    if (user.address) {\n      getUserTrx({\n        variables: {\n          address: user.address\n        }\n      });\n    }\n  }, [user.address, getUserTrx]);\n  React.useEffect(() => {\n    if (!error && userTrx && userTrx.swaps) {\n      const trxData = [];\n      userTrx.swaps.forEach(swapObj => {\n        const dataItem = {\n          type: 'Swap',\n          address: swapObj.transaction.id,\n          from: {\n            symbol: '',\n            value: 0\n          },\n          to: {\n            symbol: '',\n            value: 0\n          }\n        };\n\n        if (+swapObj.amount1In && +swapObj.amount0Out) {\n          dataItem.from = {\n            symbol: swapObj.pair.token1.symbol,\n            value: swapObj.amount1In\n          };\n          dataItem.to = {\n            symbol: swapObj.pair.token0.symbol,\n            value: swapObj.amount0Out\n          };\n        } else if (+swapObj.amount0In && +swapObj.amount1Out) {\n          dataItem.from = {\n            symbol: swapObj.pair.token0.symbol,\n            value: swapObj.amount0In\n          };\n          dataItem.to = {\n            symbol: swapObj.pair.token1.symbol,\n            value: swapObj.amount1Out\n          };\n        }\n\n        trxData.push(dataItem);\n      });\n      setTrx(trxData);\n    }\n  }, [userTrx, error]);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/trade/swap\",\n      render: () => /*#__PURE__*/_jsxDEV(ExchangeComp, {\n        settings: settings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/trade/swap/settings\",\n      render: () => /*#__PURE__*/_jsxDEV(ExchangeSettings, {\n        savedSettings: settings,\n        handleSave: handleSaveSettings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/trade/swap/history\",\n      render: () => /*#__PURE__*/_jsxDEV(RecentTxs, {\n        items: trx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}, \"k7HPewFiR6mrSOFhpzHlyrnGOsc=\", false, function () {\n  return [useMst, useLazyQuery];\n}));\n_c3 = Swap;\nexport default Swap;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ExchangeComp\");\n$RefreshReg$(_c2, \"Swap$observer\");\n$RefreshReg$(_c3, \"Swap\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Trade/Swap/index.tsx"],"names":["React","Route","Switch","gql","useLazyQuery","observer","moment","TradeWrapper","useMst","Exchange","ExchangeSettings","RecentTxs","GET_USER_TRX","ExchangeComp","Swap","user","getUserTrx","error","data","userTrx","pollInterval","trx","setTrx","useState","undefined","settings","setSettings","slippage","type","value","txDeadline","txDeadlineUtc","utc","add","valueOf","handleSaveSettings","settingsObj","useEffect","address","variables","swaps","trxData","forEach","swapObj","dataItem","transaction","id","from","symbol","to","amount1In","amount0Out","pair","token1","token0","amount0In","amount1Out","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { observer } from 'mobx-react-lite';\nimport moment from 'moment';\n\nimport TradeWrapper from '../../../../HOC/TradeWrapper';\nimport { useMst } from '../../../../store';\nimport { IRecentTx, ISettings } from '../../../../types';\nimport Exchange from '../Exchange';\nimport { ExchangeSettings, RecentTxs } from '..';\n\nconst GET_USER_TRX = gql`\n  query Swap($address: String!) {\n    swaps(where: { from: $address }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n      }\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n    }\n  }\n`;\n\nconst ExchangeComp = TradeWrapper(Exchange, 'getAmountOut');\n\nconst Swap: React.FC = observer(() => {\n  const { user } = useMst();\n\n  const [getUserTrx, { error, data: userTrx }] = useLazyQuery(GET_USER_TRX, {\n    pollInterval: 60000,\n  });\n\n  const [trx, setTrx] = React.useState<IRecentTx[] | undefined>(undefined);\n\n  const [settings, setSettings] = React.useState<ISettings>({\n    slippage: {\n      type: 'btn',\n      value: 0.1,\n    },\n    txDeadline: 20,\n    txDeadlineUtc: moment.utc().add(20, 'm').valueOf(),\n  });\n\n  const handleSaveSettings = (settingsObj: ISettings): void => {\n    setSettings(settingsObj);\n  };\n\n  React.useEffect(() => {\n    if (user.address) {\n      getUserTrx({\n        variables: {\n          address: user.address,\n        },\n      });\n    }\n  }, [user.address, getUserTrx]);\n\n  React.useEffect(() => {\n    if (!error && userTrx && userTrx.swaps) {\n      const trxData: IRecentTx[] = [];\n\n      userTrx.swaps.forEach((swapObj: any) => {\n        const dataItem: IRecentTx = {\n          type: 'Swap',\n          address: swapObj.transaction.id,\n          from: {\n            symbol: '',\n            value: 0,\n          },\n          to: {\n            symbol: '',\n            value: 0,\n          },\n        };\n\n        if (+swapObj.amount1In && +swapObj.amount0Out) {\n          dataItem.from = {\n            symbol: swapObj.pair.token1.symbol,\n            value: swapObj.amount1In,\n          };\n          dataItem.to = {\n            symbol: swapObj.pair.token0.symbol,\n            value: swapObj.amount0Out,\n          };\n        } else if (+swapObj.amount0In && +swapObj.amount1Out) {\n          dataItem.from = {\n            symbol: swapObj.pair.token0.symbol,\n            value: swapObj.amount0In,\n          };\n          dataItem.to = {\n            symbol: swapObj.pair.token1.symbol,\n            value: swapObj.amount1Out,\n          };\n        }\n        trxData.push(dataItem);\n      });\n      setTrx(trxData);\n    }\n  }, [userTrx, error]);\n\n  return (\n    <Switch>\n      <Route exact path=\"/trade/swap\" render={() => <ExchangeComp settings={settings} />} />\n      <Route\n        exact\n        path=\"/trade/swap/settings\"\n        render={() => <ExchangeSettings savedSettings={settings} handleSave={handleSaveSettings} />}\n      />\n      <Route exact path=\"/trade/swap/history\" render={() => <RecentTxs items={trx} />} />\n    </Switch>\n  );\n});\n\nexport default Swap;\n"]},"metadata":{},"sourceType":"module"}