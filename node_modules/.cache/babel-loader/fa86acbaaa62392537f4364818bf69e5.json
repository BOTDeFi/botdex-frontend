{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Trade/ChooseTokens/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport UnknownImg from \"@/assets/img/currency/unknown.svg\";\nimport ArrowCImg from \"@/assets/img/icons/arrow-down-light-white.svg\";\nimport ArrowImg from \"@/assets/img/icons/arrow-down-white.svg\";\nimport { Button, InputNumber } from '@/components/atoms';\nimport { contracts } from '@/config';\nimport { useWalletConnectorContext } from '@/services/MetamaskConnect';\nimport MetamaskService from '@/services/web3';\nimport { useMst } from '@/store';\nimport { clog, clogError } from '@/utils/logger';\nimport { SelectTokenModal } from '..';\nimport './ChooseTokens.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChooseTokens = observer(_c = _s(({\n  handleChangeTokens,\n  initialTokenData,\n  textFrom,\n  textTo,\n  changeTokenFromAllowance,\n  changeTokenToAllowance,\n  maxFrom,\n  maxTo\n}) => {\n  _s();\n\n  const {\n    user\n  } = useMst();\n  const {\n    metamaskService\n  } = useWalletConnectorContext();\n  const [time, setTime] = React.useState(null);\n  const [tokenFrom, setTokenFrom] = React.useState(initialTokenData ? initialTokenData.from.token : undefined);\n  const [tokenFromQuantity, setTokenFromQuantity] = React.useState(initialTokenData ? initialTokenData.from.amount : NaN);\n  const [tokenTo, setTokenTo] = React.useState(initialTokenData ? initialTokenData.to.token : undefined);\n  const [tokenToQuantity, setTokenToQuantity] = React.useState(initialTokenData ? initialTokenData.to.amount : NaN);\n  const [isModalVisible, setModalVisible] = React.useState(false);\n  const [tokenType, setTokenType] = React.useState('from');\n  const [balanceFrom, setBalanceFrom] = React.useState('');\n  const [balanceTo, setBalanceTo] = React.useState('');\n  const balanceInterval = React.useRef(null);\n\n  const handleCloseSelectTokenModal = () => {\n    setModalVisible(false);\n  };\n\n  const handleOpenSelectTokenModal = type => {\n    setModalVisible(true);\n    setTokenType(type);\n  };\n\n  const handleChangeTokenFrom = async token => {\n    if (token) {\n      if (tokenTo && token.address === tokenTo.address) {\n        setTokenTo(tokenFrom);\n        setTokenToQuantity(tokenFromQuantity);\n        setTokenFromQuantity(tokenToQuantity);\n        setTokenFrom(token);\n        handleChangeTokens({\n          from: {\n            token,\n            amount: (initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.to.amount) || NaN\n          },\n          to: {\n            token: initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.from.token,\n            amount: (initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.from.amount) || NaN\n          }\n        }, 'from');\n        return;\n      }\n\n      handleChangeTokens({\n        from: {\n          token,\n          amount: (initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.from.amount) || NaN\n        },\n        to: {\n          token: initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.to.token,\n          amount: (initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.to.amount) || NaN\n        }\n      }, 'from');\n      setTokenFrom(token);\n    }\n  };\n\n  const handleChangeTokenTo = token => {\n    if (token) {\n      if (tokenFrom && token.address === tokenFrom.address) {\n        setTokenFrom(tokenTo);\n        setTokenFromQuantity(tokenToQuantity);\n        setTokenToQuantity(tokenFromQuantity);\n        setTokenTo(token);\n        handleChangeTokens({\n          from: {\n            token: initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.to.token,\n            amount: (initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.to.amount) || NaN\n          },\n          to: {\n            token,\n            amount: (initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.from.amount) || NaN\n          }\n        }, 'to');\n        return;\n      }\n\n      handleChangeTokens({\n        from: {\n          token: tokenFrom,\n          amount: tokenFromQuantity\n        },\n        to: {\n          token,\n          amount: tokenToQuantity\n        }\n      }, 'to');\n      setTokenTo(token);\n    }\n  };\n\n  const handleChangeToken = (type, token) => {\n    if (type === 'from') {\n      handleChangeTokenFrom(token);\n    }\n\n    if (type === 'to') {\n      handleChangeTokenTo(token);\n    }\n  };\n\n  const handleSwapPositions = () => {\n    if (initialTokenData) {\n      setTokenFrom(initialTokenData.to.token);\n      setTokenTo(initialTokenData.from.token);\n      handleChangeTokens({\n        from: initialTokenData.to,\n        to: initialTokenData.from\n      }, 'from');\n    }\n  };\n\n  const handleCheckAllowance = React.useCallback(async inputValue => {\n    try {\n      const promises = [];\n\n      if ((tokenFrom === null || tokenFrom === void 0 ? void 0 : tokenFrom.address) && tokenFrom.symbol.toLowerCase() !== 'bnb') {\n        promises.push(metamaskService.checkTokenAllowance({\n          contractName: 'ERC20',\n          approvedAddress: contracts.ROUTER.ADDRESS,\n          tokenAddress: tokenFrom === null || tokenFrom === void 0 ? void 0 : tokenFrom.address,\n          approveSum: inputValue ? +inputValue : +initialTokenData.from.amount\n        }));\n      }\n\n      if ((tokenTo === null || tokenTo === void 0 ? void 0 : tokenTo.address) && tokenTo.symbol.toLowerCase() !== 'bnb') {\n        promises.push(metamaskService.checkTokenAllowance({\n          contractName: 'ERC20',\n          approvedAddress: contracts.ROUTER.ADDRESS,\n          tokenAddress: tokenTo === null || tokenTo === void 0 ? void 0 : tokenTo.address,\n          approveSum: inputValue ? +inputValue : +initialTokenData.to.amount\n        }));\n      }\n\n      const result = await Promise.all(promises);\n\n      if (changeTokenFromAllowance && (tokenFrom === null || tokenFrom === void 0 ? void 0 : tokenFrom.symbol) && tokenFrom.symbol.toLowerCase() !== 'bnb') {\n        changeTokenFromAllowance(!!result[0]);\n      }\n\n      if (changeTokenToAllowance && (tokenTo === null || tokenTo === void 0 ? void 0 : tokenTo.symbol) && tokenTo.symbol.toLowerCase() !== 'bnb') {\n        changeTokenToAllowance(!!result[1]);\n      }\n\n      if ((tokenFrom === null || tokenFrom === void 0 ? void 0 : tokenFrom.symbol) && tokenFrom.symbol.toLowerCase() === 'bnb' && changeTokenFromAllowance) {\n        changeTokenFromAllowance(true);\n      }\n\n      if ((tokenTo === null || tokenTo === void 0 ? void 0 : tokenTo.symbol) && tokenTo.symbol.toLowerCase() === 'bnb' && changeTokenToAllowance) {\n        changeTokenToAllowance(true);\n      }\n\n      return result;\n    } catch (err) {\n      clogError(err, 'err check token allowance');\n\n      if (changeTokenFromAllowance) {\n        changeTokenFromAllowance(false);\n      }\n\n      if (changeTokenToAllowance) {\n        changeTokenToAllowance(false);\n      }\n\n      return '';\n    }\n  }, [changeTokenFromAllowance, changeTokenToAllowance, initialTokenData.from.amount, initialTokenData.to.amount, metamaskService, tokenFrom === null || tokenFrom === void 0 ? void 0 : tokenFrom.address, tokenTo === null || tokenTo === void 0 ? void 0 : tokenTo.address, tokenTo === null || tokenTo === void 0 ? void 0 : tokenTo.symbol, tokenFrom === null || tokenFrom === void 0 ? void 0 : tokenFrom.symbol]);\n\n  const handleChangeTokensQuantity = async (type, quantity) => {\n    if (type === 'from') {\n      setTokenFromQuantity(quantity);\n\n      if (time) {\n        clearTimeout(time);\n        setTime(setTimeout(() => {\n          handleCheckAllowance(quantity);\n          handleChangeTokens({\n            from: {\n              token: tokenFrom,\n              amount: quantity\n            },\n            to: {\n              token: tokenTo,\n              amount: (initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.to.amount) || NaN\n            }\n          }, 'from');\n        }, 500));\n      } else {\n        setTime(setTimeout(() => {\n          handleCheckAllowance(quantity);\n          handleChangeTokens({\n            from: {\n              token: tokenFrom,\n              amount: quantity\n            },\n            to: {\n              token: tokenTo,\n              amount: (initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.to.amount) || NaN\n            }\n          }, 'from');\n        }, 500));\n      }\n    }\n\n    if (type === 'to') {\n      setTokenToQuantity(quantity);\n\n      if (time) {\n        clearTimeout(time);\n        setTime(setTimeout(() => {\n          handleCheckAllowance(quantity);\n          handleChangeTokens({\n            from: {\n              token: tokenFrom,\n              amount: (initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.from.amount) || NaN\n            },\n            to: {\n              token: tokenTo,\n              amount: quantity\n            }\n          }, 'to');\n        }, 500));\n      } else {\n        setTime(setTimeout(() => {\n          handleCheckAllowance(quantity);\n          handleChangeTokens({\n            from: {\n              token: tokenFrom,\n              amount: (initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.from.amount) || NaN\n            },\n            to: {\n              token: tokenTo,\n              amount: quantity\n            }\n          }, 'to');\n        }, 500));\n      }\n    }\n  };\n\n  const handleGetBalance = React.useCallback(async type => {\n    try {\n      if (initialTokenData[type] && initialTokenData[type].token && user.address) {\n        var _initialTokenData$typ, _initialTokenData$typ3;\n\n        let balance = '0';\n\n        if (((_initialTokenData$typ = initialTokenData[type].token) === null || _initialTokenData$typ === void 0 ? void 0 : _initialTokenData$typ.symbol.toLowerCase()) === 'bnb') {\n          balance = await metamaskService.getEthBalance();\n        } else {\n          var _initialTokenData$typ2;\n\n          balance = await metamaskService.callContractMethodFromNewContract(((_initialTokenData$typ2 = initialTokenData[type].token) === null || _initialTokenData$typ2 === void 0 ? void 0 : _initialTokenData$typ2.address) || '', contracts.ERC20.ABI, 'balanceOf', [user.address]);\n        }\n\n        balance = MetamaskService.amountFromGwei(balance, +(((_initialTokenData$typ3 = initialTokenData[type].token) === null || _initialTokenData$typ3 === void 0 ? void 0 : _initialTokenData$typ3.decimals) || 8));\n\n        if (type === 'from') {\n          setBalanceFrom(balance);\n        } else {\n          setBalanceTo(balance);\n        }\n      }\n    } catch (err) {\n      clogError(`get balance ${type}`, err);\n    }\n  }, [initialTokenData, metamaskService, user.address]);\n  React.useEffect(() => {\n    setTokenFromQuantity((initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.from.amount) || NaN);\n    setTokenToQuantity((initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.to.amount) || NaN);\n  }, [initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.from.amount, initialTokenData === null || initialTokenData === void 0 ? void 0 : initialTokenData.to.amount]);\n  React.useEffect(() => {\n    setTokenFrom(initialTokenData.from.token);\n    setTokenTo(initialTokenData.to.token);\n  }, [initialTokenData.from.token, initialTokenData.to.token]);\n  React.useEffect(() => {\n    handleGetBalance('from');\n    handleGetBalance('to');\n  }, [handleGetBalance, initialTokenData.from.token, initialTokenData.to.token]);\n  React.useEffect(() => {\n    handleCheckAllowance();\n  }, [handleCheckAllowance]);\n  React.useEffect(() => {\n    if (!balanceInterval.current) {\n      balanceInterval.current = setInterval(() => {\n        handleGetBalance('from');\n        handleGetBalance('to');\n      }, 30000);\n    }\n\n    return () => {\n      if (balanceInterval.current) {\n        clearInterval(balanceInterval.current);\n      }\n    };\n  }, [handleGetBalance, balanceInterval]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"choose-tokens\",\n      children: [tokenFrom ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-f-jc-sb box-f choose-tokens__box-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-upper text-white\",\n            children: tokenFrom.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray\",\n            children: textFrom || 'From'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-f box-f-jc-sb\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"choose-tokens__currency box-f-ai-c\",\n            onClick: () => handleOpenSelectTokenModal('from'),\n            onKeyDown: () => {},\n            tabIndex: -1,\n            role: \"button\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: tokenFrom.logoURI || UnknownImg,\n              alt: \"\",\n              className: \"choose-tokens__currency-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: ArrowImg,\n              alt: \"\",\n              className: \"choose-tokens__currency-arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"choose-tokens__err-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(InputNumber, {\n              value: tokenFromQuantity,\n              placeholder: \"0\",\n              max: maxFrom && maxFrom < balanceFrom ? maxFrom : balanceFrom,\n              onChange: value => handleChangeTokensQuantity('from', +value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 19\n            }, this), balanceFrom ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"choose-tokens__balance text-sm text-gray text-address\",\n              children: `Balance: ${balanceFrom}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 21\n            }, this) : '', maxFrom && +tokenFromQuantity > maxFrom ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"choose-tokens__err text-red text-right\",\n              children: `Maximum value is ${maxFrom}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 21\n            }, this) : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n        className: \"choose-tokens__select\",\n        onClick: () => handleOpenSelectTokenModal('from'),\n        colorScheme: \"gray\",\n        size: \"lmd\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-center text-white text-med\",\n          children: \"Select a Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"choose-tokens__line box-f-ai-c\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-circle box-f-c\",\n          onClick: handleSwapPositions,\n          onKeyDown: () => {\n            clog(1);\n          },\n          role: \"button\",\n          tabIndex: -1,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ArrowCImg,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this), tokenTo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-f-jc-sb box-f choose-tokens__box-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-upper text-white\",\n            children: tokenTo.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray\",\n            children: textTo || 'To'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-f box-f-jc-sb\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"choose-tokens__currency box-f-ai-c\",\n            onClick: () => handleOpenSelectTokenModal('to'),\n            onKeyDown: () => {},\n            tabIndex: -1,\n            role: \"button\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: tokenTo.logoURI || UnknownImg,\n              alt: \"\",\n              className: \"choose-tokens__currency-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: ArrowImg,\n              alt: \"\",\n              className: \"choose-tokens__currency-arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"choose-tokens__err-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(InputNumber, {\n              value: tokenToQuantity,\n              placeholder: \"0\",\n              onChange: value => handleChangeTokensQuantity('to', +value),\n              max: maxTo && maxTo < balanceTo ? maxTo : balanceTo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 19\n            }, this), balanceTo ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"choose-tokens__balance text-sm text-gray text-address\",\n              children: `Balance: ${balanceTo}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 21\n            }, this) : '', maxTo && +tokenToQuantity > maxTo ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"choose-tokens__err text-red text-right\",\n              children: `Maximum value is ${maxTo}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 21\n            }, this) : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 15\n        }, this), ' ']\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n        className: \"choose-tokens__select\",\n        onClick: () => handleOpenSelectTokenModal('to'),\n        colorScheme: \"gray\",\n        size: \"lmd\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-center text-white text-med\",\n          children: \"Select a Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SelectTokenModal, {\n      isVisible: isModalVisible,\n      handleClose: handleCloseSelectTokenModal,\n      handleOpen: () => handleOpenSelectTokenModal(tokenType),\n      handleChangeToken: handleChangeToken,\n      tokenType: tokenType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}, \"P6+Z1Ozhx8U970cZ3c9FfoANhOM=\", false, function () {\n  return [useMst, useWalletConnectorContext];\n}));\n_c2 = ChooseTokens;\nexport default ChooseTokens;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChooseTokens$observer\");\n$RefreshReg$(_c2, \"ChooseTokens\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Trade/ChooseTokens/index.tsx"],"names":["React","observer","Button","InputNumber","contracts","useWalletConnectorContext","MetamaskService","useMst","clog","clogError","SelectTokenModal","ChooseTokens","handleChangeTokens","initialTokenData","textFrom","textTo","changeTokenFromAllowance","changeTokenToAllowance","maxFrom","maxTo","user","metamaskService","time","setTime","useState","tokenFrom","setTokenFrom","from","token","undefined","tokenFromQuantity","setTokenFromQuantity","amount","NaN","tokenTo","setTokenTo","to","tokenToQuantity","setTokenToQuantity","isModalVisible","setModalVisible","tokenType","setTokenType","balanceFrom","setBalanceFrom","balanceTo","setBalanceTo","balanceInterval","useRef","handleCloseSelectTokenModal","handleOpenSelectTokenModal","type","handleChangeTokenFrom","address","handleChangeTokenTo","handleChangeToken","handleSwapPositions","handleCheckAllowance","useCallback","inputValue","promises","symbol","toLowerCase","push","checkTokenAllowance","contractName","approvedAddress","ROUTER","ADDRESS","tokenAddress","approveSum","result","Promise","all","err","handleChangeTokensQuantity","quantity","clearTimeout","setTimeout","handleGetBalance","balance","getEthBalance","callContractMethodFromNewContract","ERC20","ABI","amountFromGwei","decimals","useEffect","current","setInterval","clearInterval","logoURI","UnknownImg","ArrowImg","value","ArrowCImg"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport UnknownImg from '@/assets/img/currency/unknown.svg';\nimport ArrowCImg from '@/assets/img/icons/arrow-down-light-white.svg';\nimport ArrowImg from '@/assets/img/icons/arrow-down-white.svg';\nimport { Button, InputNumber } from '@/components/atoms';\nimport { contracts } from '@/config';\nimport { useWalletConnectorContext } from '@/services/MetamaskConnect';\nimport MetamaskService from '@/services/web3';\nimport { useMst } from '@/store';\nimport { IToken, ITokens } from '@/types';\nimport { clog, clogError } from '@/utils/logger';\n\nimport { SelectTokenModal } from '..';\n\nimport './ChooseTokens.scss';\n\nexport interface IChooseTokens {\n  handleChangeTokens: (tokens: ITokens, type?: 'from' | 'to') => void;\n  initialTokenData: ITokens;\n  textFrom?: string;\n  textTo?: string;\n  changeTokenFromAllowance?: (value: boolean) => void;\n  changeTokenToAllowance?: (value: boolean) => void;\n  maxFrom?: number | string;\n  maxTo?: number | string;\n}\n\nconst ChooseTokens: React.FC<IChooseTokens> = observer(\n  ({\n    handleChangeTokens,\n    initialTokenData,\n    textFrom,\n    textTo,\n    changeTokenFromAllowance,\n    changeTokenToAllowance,\n    maxFrom,\n    maxTo,\n  }) => {\n    const { user } = useMst();\n    const { metamaskService } = useWalletConnectorContext();\n\n    const [time, setTime] = React.useState<any>(null);\n\n    const [tokenFrom, setTokenFrom] = React.useState<IToken | undefined>(\n      initialTokenData ? initialTokenData.from.token : undefined,\n    );\n    const [tokenFromQuantity, setTokenFromQuantity] = React.useState<number | string>(\n      initialTokenData ? initialTokenData.from.amount : NaN,\n    );\n\n    const [tokenTo, setTokenTo] = React.useState<IToken | undefined>(\n      initialTokenData ? initialTokenData.to.token : undefined,\n    );\n    const [tokenToQuantity, setTokenToQuantity] = React.useState<number | string>(\n      initialTokenData ? initialTokenData.to.amount : NaN,\n    );\n\n    const [isModalVisible, setModalVisible] = React.useState<boolean>(false);\n    const [tokenType, setTokenType] = React.useState<'from' | 'to'>('from');\n\n    const [balanceFrom, setBalanceFrom] = React.useState<string>('');\n    const [balanceTo, setBalanceTo] = React.useState<string>('');\n\n    const balanceInterval = React.useRef<any>(null);\n\n    const handleCloseSelectTokenModal = (): void => {\n      setModalVisible(false);\n    };\n\n    const handleOpenSelectTokenModal = (type: 'from' | 'to'): void => {\n      setModalVisible(true);\n      setTokenType(type);\n    };\n\n    const handleChangeTokenFrom = async (token: IToken | undefined) => {\n      if (token) {\n        if (tokenTo && token.address === tokenTo.address) {\n          setTokenTo(tokenFrom);\n          setTokenToQuantity(tokenFromQuantity);\n          setTokenFromQuantity(tokenToQuantity);\n          setTokenFrom(token);\n\n          handleChangeTokens(\n            {\n              from: {\n                token,\n                amount: initialTokenData?.to.amount || NaN,\n              },\n              to: {\n                token: initialTokenData?.from.token,\n                amount: initialTokenData?.from.amount || NaN,\n              },\n            },\n            'from',\n          );\n          return;\n        }\n\n        handleChangeTokens(\n          {\n            from: {\n              token,\n              amount: initialTokenData?.from.amount || NaN,\n            },\n            to: {\n              token: initialTokenData?.to.token,\n              amount: initialTokenData?.to.amount || NaN,\n            },\n          },\n          'from',\n        );\n        setTokenFrom(token);\n      }\n    };\n\n    const handleChangeTokenTo = (token: IToken | undefined): void => {\n      if (token) {\n        if (tokenFrom && token.address === tokenFrom.address) {\n          setTokenFrom(tokenTo);\n          setTokenFromQuantity(tokenToQuantity);\n          setTokenToQuantity(tokenFromQuantity);\n          setTokenTo(token);\n\n          handleChangeTokens(\n            {\n              from: {\n                token: initialTokenData?.to.token,\n                amount: initialTokenData?.to.amount || NaN,\n              },\n              to: {\n                token,\n                amount: initialTokenData?.from.amount || NaN,\n              },\n            },\n            'to',\n          );\n          return;\n        }\n\n        handleChangeTokens(\n          {\n            from: {\n              token: tokenFrom,\n              amount: tokenFromQuantity,\n            },\n            to: {\n              token,\n              amount: tokenToQuantity,\n            },\n          },\n          'to',\n        );\n        setTokenTo(token);\n      }\n    };\n\n    const handleChangeToken = (type: 'from' | 'to', token: IToken | undefined) => {\n      if (type === 'from') {\n        handleChangeTokenFrom(token);\n      }\n      if (type === 'to') {\n        handleChangeTokenTo(token);\n      }\n    };\n\n    const handleSwapPositions = () => {\n      if (initialTokenData) {\n        setTokenFrom(initialTokenData.to.token);\n        setTokenTo(initialTokenData.from.token);\n        handleChangeTokens(\n          {\n            from: initialTokenData.to,\n            to: initialTokenData.from,\n          },\n          'from',\n        );\n      }\n    };\n\n    const handleCheckAllowance = React.useCallback(\n      async (inputValue?: number | string) => {\n        try {\n          const promises: any[] = [];\n          if (tokenFrom?.address && tokenFrom.symbol.toLowerCase() !== 'bnb') {\n            promises.push(\n              metamaskService.checkTokenAllowance({\n                contractName: 'ERC20',\n                approvedAddress: contracts.ROUTER.ADDRESS,\n                tokenAddress: tokenFrom?.address,\n                approveSum: inputValue ? +inputValue : +initialTokenData.from.amount,\n              }),\n            );\n          }\n          if (tokenTo?.address && tokenTo.symbol.toLowerCase() !== 'bnb') {\n            promises.push(\n              metamaskService.checkTokenAllowance({\n                contractName: 'ERC20',\n                approvedAddress: contracts.ROUTER.ADDRESS,\n                tokenAddress: tokenTo?.address,\n                approveSum: inputValue ? +inputValue : +initialTokenData.to.amount,\n              }),\n            );\n          }\n          const result = await Promise.all(promises);\n\n          if (\n            changeTokenFromAllowance &&\n            tokenFrom?.symbol &&\n            tokenFrom.symbol.toLowerCase() !== 'bnb'\n          ) {\n            changeTokenFromAllowance(!!result[0]);\n          }\n          if (changeTokenToAllowance && tokenTo?.symbol && tokenTo.symbol.toLowerCase() !== 'bnb') {\n            changeTokenToAllowance(!!result[1]);\n          }\n          if (\n            tokenFrom?.symbol &&\n            tokenFrom.symbol.toLowerCase() === 'bnb' &&\n            changeTokenFromAllowance\n          ) {\n            changeTokenFromAllowance(true);\n          }\n          if (tokenTo?.symbol && tokenTo.symbol.toLowerCase() === 'bnb' && changeTokenToAllowance) {\n            changeTokenToAllowance(true);\n          }\n          return result;\n        } catch (err) {\n          clogError(err, 'err check token allowance');\n\n          if (changeTokenFromAllowance) {\n            changeTokenFromAllowance(false);\n          }\n          if (changeTokenToAllowance) {\n            changeTokenToAllowance(false);\n          }\n          return '';\n        }\n      },\n      [\n        changeTokenFromAllowance,\n        changeTokenToAllowance,\n        initialTokenData.from.amount,\n        initialTokenData.to.amount,\n        metamaskService,\n        tokenFrom?.address,\n        tokenTo?.address,\n        tokenTo?.symbol,\n        tokenFrom?.symbol,\n      ],\n    );\n\n    const handleChangeTokensQuantity = async (type: 'from' | 'to', quantity: number) => {\n      if (type === 'from') {\n        setTokenFromQuantity(quantity);\n        if (time) {\n          clearTimeout(time);\n          setTime(\n            setTimeout(() => {\n              handleCheckAllowance(quantity);\n              handleChangeTokens(\n                {\n                  from: {\n                    token: tokenFrom,\n                    amount: quantity,\n                  },\n                  to: {\n                    token: tokenTo,\n                    amount: initialTokenData?.to.amount || NaN,\n                  },\n                },\n                'from',\n              );\n            }, 500),\n          );\n        } else {\n          setTime(\n            setTimeout(() => {\n              handleCheckAllowance(quantity);\n              handleChangeTokens(\n                {\n                  from: {\n                    token: tokenFrom,\n                    amount: quantity,\n                  },\n                  to: {\n                    token: tokenTo,\n                    amount: initialTokenData?.to.amount || NaN,\n                  },\n                },\n                'from',\n              );\n            }, 500),\n          );\n        }\n      }\n      if (type === 'to') {\n        setTokenToQuantity(quantity);\n        if (time) {\n          clearTimeout(time);\n          setTime(\n            setTimeout(() => {\n              handleCheckAllowance(quantity);\n              handleChangeTokens(\n                {\n                  from: {\n                    token: tokenFrom,\n                    amount: initialTokenData?.from.amount || NaN,\n                  },\n                  to: {\n                    token: tokenTo,\n                    amount: quantity,\n                  },\n                },\n                'to',\n              );\n            }, 500),\n          );\n        } else {\n          setTime(\n            setTimeout(() => {\n              handleCheckAllowance(quantity);\n              handleChangeTokens(\n                {\n                  from: {\n                    token: tokenFrom,\n                    amount: initialTokenData?.from.amount || NaN,\n                  },\n                  to: {\n                    token: tokenTo,\n                    amount: quantity,\n                  },\n                },\n                'to',\n              );\n            }, 500),\n          );\n        }\n      }\n    };\n\n    const handleGetBalance = React.useCallback(\n      async (type: 'from' | 'to') => {\n        try {\n          if (initialTokenData[type] && initialTokenData[type].token && user.address) {\n            let balance = '0';\n            if (initialTokenData[type].token?.symbol.toLowerCase() === 'bnb') {\n              balance = await metamaskService.getEthBalance();\n            } else {\n              balance = await metamaskService.callContractMethodFromNewContract(\n                initialTokenData[type].token?.address || '',\n                contracts.ERC20.ABI,\n                'balanceOf',\n                [user.address],\n              );\n            }\n\n            balance = MetamaskService.amountFromGwei(\n              balance,\n              +(initialTokenData[type].token?.decimals || 8),\n            );\n\n            if (type === 'from') {\n              setBalanceFrom(balance);\n            } else {\n              setBalanceTo(balance);\n            }\n          }\n        } catch (err) {\n          clogError(`get balance ${type}`, err);\n        }\n      },\n      [initialTokenData, metamaskService, user.address],\n    );\n\n    React.useEffect(() => {\n      setTokenFromQuantity(initialTokenData?.from.amount || NaN);\n      setTokenToQuantity(initialTokenData?.to.amount || NaN);\n    }, [initialTokenData?.from.amount, initialTokenData?.to.amount]);\n\n    React.useEffect(() => {\n      setTokenFrom(initialTokenData.from.token);\n      setTokenTo(initialTokenData.to.token);\n    }, [initialTokenData.from.token, initialTokenData.to.token]);\n\n    React.useEffect(() => {\n      handleGetBalance('from');\n      handleGetBalance('to');\n    }, [handleGetBalance, initialTokenData.from.token, initialTokenData.to.token]);\n\n    React.useEffect(() => {\n      handleCheckAllowance();\n    }, [handleCheckAllowance]);\n\n    React.useEffect(() => {\n      if (!balanceInterval.current) {\n        balanceInterval.current = setInterval(() => {\n          handleGetBalance('from');\n          handleGetBalance('to');\n        }, 30000);\n      }\n\n      return () => {\n        if (balanceInterval.current) {\n          clearInterval(balanceInterval.current);\n        }\n      };\n    }, [handleGetBalance, balanceInterval]);\n\n    return (\n      <>\n        <div className=\"choose-tokens\">\n          {tokenFrom ? (\n            <>\n              <div className=\"box-f-jc-sb box-f choose-tokens__box-title\">\n                <div className=\"text-upper text-white\">{tokenFrom.symbol}</div>\n                <div className=\"text-sm text-gray\">{textFrom || 'From'}</div>\n              </div>\n              <div className=\"box-f box-f-jc-sb\">\n                <div\n                  className=\"choose-tokens__currency box-f-ai-c\"\n                  onClick={() => handleOpenSelectTokenModal('from')}\n                  onKeyDown={() => {}}\n                  tabIndex={-1}\n                  role=\"button\"\n                >\n                  <img\n                    src={tokenFrom.logoURI || UnknownImg}\n                    alt=\"\"\n                    className=\"choose-tokens__currency-img\"\n                  />\n                  <img src={ArrowImg} alt=\"\" className=\"choose-tokens__currency-arrow\" />\n                </div>\n                <div className=\"choose-tokens__err-wrapper\">\n                  <InputNumber\n                    value={tokenFromQuantity}\n                    placeholder=\"0\"\n                    max={maxFrom && maxFrom < balanceFrom ? maxFrom : balanceFrom}\n                    onChange={(value: number | string) =>\n                      handleChangeTokensQuantity('from', +value)\n                    }\n                  />\n                  {balanceFrom ? (\n                    <div className=\"choose-tokens__balance text-sm text-gray text-address\">{`Balance: ${balanceFrom}`}</div>\n                  ) : (\n                    ''\n                  )}\n                  {maxFrom && +tokenFromQuantity > maxFrom ? (\n                    <div className=\"choose-tokens__err text-red text-right\">{`Maximum value is ${maxFrom}`}</div>\n                  ) : (\n                    ''\n                  )}\n                </div>\n              </div>\n            </>\n          ) : (\n            <Button\n              className=\"choose-tokens__select\"\n              onClick={() => handleOpenSelectTokenModal('from')}\n              colorScheme=\"gray\"\n              size=\"lmd\"\n            >\n              <span className=\"text-center text-white text-med\">Select a Token</span>\n            </Button>\n          )}\n          <div className=\"choose-tokens__line box-f-ai-c\">\n            <div\n              className=\"box-circle box-f-c\"\n              onClick={handleSwapPositions}\n              onKeyDown={() => {\n                clog(1);\n              }}\n              role=\"button\"\n              tabIndex={-1}\n            >\n              <img src={ArrowCImg} alt=\"\" />\n            </div>\n          </div>\n          {tokenTo ? (\n            <>\n              <div className=\"box-f-jc-sb box-f choose-tokens__box-title\">\n                <div className=\"text-upper text-white\">{tokenTo.symbol}</div>\n                <div className=\"text-sm text-gray\">{textTo || 'To'}</div>\n              </div>\n              <div className=\"box-f box-f-jc-sb\">\n                <div\n                  className=\"choose-tokens__currency box-f-ai-c\"\n                  onClick={() => handleOpenSelectTokenModal('to')}\n                  onKeyDown={() => {}}\n                  tabIndex={-1}\n                  role=\"button\"\n                >\n                  <img\n                    src={tokenTo.logoURI || UnknownImg}\n                    alt=\"\"\n                    className=\"choose-tokens__currency-img\"\n                  />\n                  <img src={ArrowImg} alt=\"\" className=\"choose-tokens__currency-arrow\" />\n                </div>\n                <div className=\"choose-tokens__err-wrapper\">\n                  <InputNumber\n                    value={tokenToQuantity}\n                    placeholder=\"0\"\n                    onChange={(value: number | string) => handleChangeTokensQuantity('to', +value)}\n                    max={maxTo && maxTo < balanceTo ? maxTo : balanceTo}\n                  />\n                  {balanceTo ? (\n                    <div className=\"choose-tokens__balance text-sm text-gray text-address\">{`Balance: ${balanceTo}`}</div>\n                  ) : (\n                    ''\n                  )}\n                  {maxTo && +tokenToQuantity > maxTo ? (\n                    <div className=\"choose-tokens__err text-red text-right\">{`Maximum value is ${maxTo}`}</div>\n                  ) : (\n                    ''\n                  )}\n                </div>\n              </div>{' '}\n            </>\n          ) : (\n            <Button\n              className=\"choose-tokens__select\"\n              onClick={() => handleOpenSelectTokenModal('to')}\n              colorScheme=\"gray\"\n              size=\"lmd\"\n            >\n              <span className=\"text-center text-white text-med\">Select a Token</span>\n            </Button>\n          )}\n        </div>\n        <SelectTokenModal\n          isVisible={isModalVisible}\n          handleClose={handleCloseSelectTokenModal}\n          handleOpen={() => handleOpenSelectTokenModal(tokenType)}\n          handleChangeToken={handleChangeToken}\n          tokenType={tokenType}\n        />\n      </>\n    );\n  },\n);\n\nexport default ChooseTokens;\n"]},"metadata":{},"sourceType":"module"}