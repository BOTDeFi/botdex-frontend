{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Trade/ExchangeSettings/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport nextId from 'react-id-generator';\nimport { useHistory } from 'react-router-dom';\nimport cn from 'classnames';\nimport moment from 'moment';\nimport CrossImg from \"../../../../assets/img/icons/close-white.svg\";\nimport { Button, InputNumber, Switch } from '../../../atoms';\nimport './ExchangeSettings.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExchangeSettings = /*#__PURE__*/React.memo(_c = _s(({\n  savedSettings,\n  handleSave,\n  isSlippage = true\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [slippage, setSlippage] = React.useState(savedSettings.slippage);\n  const [txDeadline, setTxDeadline] = React.useState(savedSettings.txDeadline);\n  const [txDeadlineUtc, setTxDeadlineUtc] = React.useState(savedSettings.txDeadlineUtc);\n  const [slippageInputValue, setSlippageInputValue] = React.useState(savedSettings.slippage.type === 'input' ? savedSettings.slippage.value : NaN);\n  const btns = [0.1, 0.5, 1];\n\n  const handleSaveSettings = () => {\n    handleSave({\n      slippage,\n      txDeadline,\n      txDeadlineUtc\n    });\n    history.goBack();\n  };\n\n  const handleChangeSlippage = data => {\n    setSlippage(data);\n  };\n\n  const handleChangeTxDeadline = value => {\n    setTxDeadlineUtc(moment.utc().add(value, 'm').unix());\n    setTxDeadline(+value);\n  };\n\n  const handleFocusSlippageInput = () => {\n    if (+slippageInputValue) {\n      handleChangeSlippage({\n        type: 'input',\n        value: slippageInputValue\n      });\n    }\n  };\n\n  const handleChangeSlippageInput = value => {\n    setSlippageInputValue(+value);\n\n    if (+value) {\n      handleChangeSlippage({\n        type: 'input',\n        value: +value\n      });\n    } else {\n      handleChangeSlippage({\n        type: 'btn',\n        value: 0.1\n      });\n    }\n  };\n\n  const handleClose = () => {\n    history.goBack();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exchange exch-settings box-shadow box-dark-grey\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-f-jc-sb box-f-ai-c exch-settings__box-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white text-md\",\n        children: \"Advanced Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exch-settings__close\",\n        onClick: handleClose,\n        onKeyDown: handleClose,\n        role: \"link\",\n        tabIndex: 0,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: CrossImg,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), isSlippage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exch-settings__section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exch-settings__section-title text-white\",\n        children: \"Slippage tolerance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box-f box-f-jc-sb\",\n        children: [btns.map(btn => /*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          colorScheme: \"outline\",\n          onClick: () => handleChangeSlippage({\n            type: 'btn',\n            value: btn\n          }),\n          className: cn('exch-settings__slippage-btn', {\n            active: slippage.type === 'btn' && slippage.value === btn\n          }),\n          children: [btn, \"%\"]\n        }, nextId(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(InputNumber, {\n          value: slippageInputValue,\n          colorScheme: \"outline\",\n          inputSize: \"sm\",\n          max: 100,\n          inputPrefix: \"%\",\n          onFocus: handleFocusSlippageInput,\n          onChange: handleChangeSlippageInput,\n          className: cn('exch-settings__slippage-input', {\n            active: slippage.type === 'input' && slippage.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exch-settings__section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exch-settings__section-title text-white\",\n        children: \"Transaction deadline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box-f-ai-c\",\n        children: [/*#__PURE__*/_jsxDEV(InputNumber, {\n          colorScheme: \"outline\",\n          inputSize: \"sm\",\n          value: txDeadline,\n          onChange: handleChangeTxDeadline,\n          className: \"exch-settings__txdeadline-input\",\n          placeholder: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-med text-white\",\n          children: \"Minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exch-settings__section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exch-settings__section-title text-white\",\n        children: \"Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        colorScheme: \"purple\",\n        switchSize: \"bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"exch-settings__btn\",\n      onClick: handleSaveSettings,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-smd text-white\",\n        children: \"Save and close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }, this);\n}, \"Dj+/lmhYxTG2ODPMv49tkiLgGdM=\", false, function () {\n  return [useHistory];\n}));\n_c2 = ExchangeSettings;\nexport default ExchangeSettings;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ExchangeSettings$React.memo\");\n$RefreshReg$(_c2, \"ExchangeSettings\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Trade/ExchangeSettings/index.tsx"],"names":["React","nextId","useHistory","cn","moment","Button","InputNumber","Switch","ExchangeSettings","memo","savedSettings","handleSave","isSlippage","history","slippage","setSlippage","useState","txDeadline","setTxDeadline","txDeadlineUtc","setTxDeadlineUtc","slippageInputValue","setSlippageInputValue","type","value","NaN","btns","handleSaveSettings","goBack","handleChangeSlippage","data","handleChangeTxDeadline","utc","add","unix","handleFocusSlippageInput","handleChangeSlippageInput","handleClose","CrossImg","map","btn","active"],"mappings":"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","sourcesContent":["import React from 'react';\nimport nextId from 'react-id-generator';\nimport { useHistory } from 'react-router-dom';\nimport cn from 'classnames';\nimport moment from 'moment';\n\nimport { ISettings } from '@/types';\n\nimport CrossImg from '../../../../assets/img/icons/close-white.svg';\nimport { Button, InputNumber, Switch } from '../../../atoms';\n\nimport './ExchangeSettings.scss';\n\nexport interface IActiveSlippage {\n  type: 'btn' | 'input';\n  value: number;\n}\n\ninterface IExchangeSettings {\n  savedSettings: ISettings;\n  handleSave: (settings: ISettings) => void;\n  isSlippage?: boolean;\n}\n\nconst ExchangeSettings: React.FC<IExchangeSettings> = React.memo(\n  ({ savedSettings, handleSave, isSlippage = true }) => {\n    const history = useHistory();\n    const [slippage, setSlippage] = React.useState<IActiveSlippage>(savedSettings.slippage);\n    const [txDeadline, setTxDeadline] = React.useState<number>(savedSettings.txDeadline);\n    const [txDeadlineUtc, setTxDeadlineUtc] = React.useState<number>(savedSettings.txDeadlineUtc);\n\n    const [slippageInputValue, setSlippageInputValue] = React.useState<number>(\n      savedSettings.slippage.type === 'input' ? savedSettings.slippage.value : NaN,\n    );\n    const btns = [0.1, 0.5, 1];\n\n    const handleSaveSettings = () => {\n      handleSave({\n        slippage,\n        txDeadline,\n        txDeadlineUtc,\n      });\n      history.goBack();\n    };\n\n    const handleChangeSlippage = (data: IActiveSlippage): void => {\n      setSlippage(data);\n    };\n\n    const handleChangeTxDeadline = (value: number | string): void => {\n      setTxDeadlineUtc(moment.utc().add(value, 'm').unix());\n      setTxDeadline(+value);\n    };\n\n    const handleFocusSlippageInput = () => {\n      if (+slippageInputValue) {\n        handleChangeSlippage({\n          type: 'input',\n          value: slippageInputValue,\n        });\n      }\n    };\n\n    const handleChangeSlippageInput = (value: number | string) => {\n      setSlippageInputValue(+value);\n      if (+value) {\n        handleChangeSlippage({\n          type: 'input',\n          value: +value,\n        });\n      } else {\n        handleChangeSlippage({ type: 'btn', value: 0.1 });\n      }\n    };\n\n    const handleClose = (): void => {\n      history.goBack();\n    };\n\n    return (\n      <div className=\"exchange exch-settings box-shadow box-dark-grey\">\n        <div className=\"box-f-jc-sb box-f-ai-c exch-settings__box-title\">\n          <div className=\"text-white text-md\">Advanced Settings</div>\n          <div\n            className=\"exch-settings__close\"\n            onClick={handleClose}\n            onKeyDown={handleClose}\n            role=\"link\"\n            tabIndex={0}\n          >\n            <img src={CrossImg} alt=\"\" />\n          </div>\n        </div>\n        {isSlippage ? (\n          <div className=\"exch-settings__section\">\n            <div className=\"exch-settings__section-title text-white\">Slippage tolerance</div>\n            <div className=\"box-f box-f-jc-sb\">\n              {btns.map((btn) => (\n                <Button\n                  key={nextId()}\n                  size=\"sm\"\n                  colorScheme=\"outline\"\n                  onClick={() => handleChangeSlippage({ type: 'btn', value: btn })}\n                  className={cn('exch-settings__slippage-btn', {\n                    active: slippage.type === 'btn' && slippage.value === btn,\n                  })}\n                >\n                  {btn}%\n                </Button>\n              ))}\n              <InputNumber\n                value={slippageInputValue}\n                colorScheme=\"outline\"\n                inputSize=\"sm\"\n                max={100}\n                inputPrefix=\"%\"\n                onFocus={handleFocusSlippageInput}\n                onChange={handleChangeSlippageInput}\n                className={cn('exch-settings__slippage-input', {\n                  active: slippage.type === 'input' && slippage.value,\n                })}\n              />\n            </div>\n          </div>\n        ) : (\n          ''\n        )}\n        <div className=\"exch-settings__section\">\n          <div className=\"exch-settings__section-title text-white\">Transaction deadline</div>\n          <div className=\"box-f-ai-c\">\n            <InputNumber\n              colorScheme=\"outline\"\n              inputSize=\"sm\"\n              value={txDeadline}\n              onChange={handleChangeTxDeadline}\n              className=\"exch-settings__txdeadline-input\"\n              placeholder=\"0\"\n            />\n            <span className=\"text-med text-white\">Minutes</span>\n          </div>\n        </div>\n        <div className=\"exch-settings__section\">\n          <div className=\"exch-settings__section-title text-white\">Audio</div>\n          <Switch colorScheme=\"purple\" switchSize=\"bg\" />\n        </div>\n        <Button className=\"exch-settings__btn\" onClick={handleSaveSettings}>\n          <span className=\"text-smd text-white\">Save and close</span>\n        </Button>\n      </div>\n    );\n  },\n);\n\nexport default ExchangeSettings;\n"]},"metadata":{},"sourceType":"module"}