{"ast":null,"code":"import { __generator } from \"tslib\";\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nimport { defer } from './defer';\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrScheduler, scheduler) {\n  var _a, _b;\n\n  var resultSelector;\n  var initialState;\n\n  if (arguments.length === 1) {\n    _a = initialStateOrOptions, initialState = _a.initialState, condition = _a.condition, iterate = _a.iterate, _b = _a.resultSelector, resultSelector = _b === void 0 ? identity : _b, scheduler = _a.scheduler;\n  } else {\n    initialState = initialStateOrOptions;\n\n    if (!resultSelectorOrScheduler || isScheduler(resultSelectorOrScheduler)) {\n      resultSelector = identity;\n      scheduler = resultSelectorOrScheduler;\n    } else {\n      resultSelector = resultSelectorOrScheduler;\n    }\n  }\n\n  function gen() {\n    var state;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          state = initialState;\n          _a.label = 1;\n\n        case 1:\n          if (!(!condition || condition(state))) return [3, 4];\n          return [4, resultSelector(state)];\n\n        case 2:\n          _a.sent();\n\n          _a.label = 3;\n\n        case 3:\n          state = iterate(state);\n          return [3, 1];\n\n        case 4:\n          return [2];\n      }\n    });\n  }\n\n  return defer(scheduler ? function () {\n    return scheduleIterable(gen(), scheduler);\n  } : gen);\n}","map":{"version":3,"sources":["../../../../src/internal/observable/generate.ts"],"names":[],"mappings":";AACA,SAAS,QAAT,QAAyB,kBAAzB;AAEA,SAAS,WAAT,QAA4B,qBAA5B;AACA,SAAS,KAAT,QAAsB,SAAtB;AACA,SAAS,gBAAT,QAAiC,+BAAjC;AAwUA,OAAM,SAAU,QAAV,CACJ,qBADI,EAEJ,SAFI,EAGJ,OAHI,EAIJ,yBAJI,EAKJ,SALI,EAKqB;;;AAEzB,MAAI,cAAJ;AACA,MAAI,YAAJ;;AAIA,MAAI,SAAS,CAAC,MAAV,KAAqB,CAAzB,EAA4B;AAGzB,IAAA,EAAA,GAMG,qBANH,EACC,YAAY,GAAA,EAAA,CAAA,YADb,EAEC,SAAS,GAAA,EAAA,CAAA,SAFV,EAGC,OAAO,GAAA,EAAA,CAAA,OAHR,EAIC,EAAA,GAAA,EAAA,CAAA,cAJD,EAIC,cAAc,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,QAAH,GAA+B,EAJ9C,EAKC,SAAS,GAAA,EAAA,CAAA,SALX;AAOD,GAVD,MAUO;AAGL,IAAA,YAAY,GAAG,qBAAf;;AACA,QAAI,CAAC,yBAAD,IAA8B,WAAW,CAAC,yBAAD,CAA7C,EAA0E;AACxE,MAAA,cAAc,GAAG,QAAjB;AACA,MAAA,SAAS,GAAG,yBAAZ;AACD,KAHD,MAGO;AACL,MAAA,cAAc,GAAG,yBAAjB;AACD;AACF;;AAGD,WAAU,GAAV,GAAa;;;;;AACF,UAAA,KAAK,GAAG,YAAR;;;;cAAsB,EAAA,CAAC,SAAD,IAAc,SAAS,CAAC,KAAD,CAAvB,C,EAA8B,OAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAC3D,iBAAA,CAAA,CAAA,EAAM,cAAc,CAAC,KAAD,CAApB,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;;;;AAD6D,UAAA,KAAK,GAAG,OAAQ,CAAC,KAAD,CAAhB;;;;;;;AAGhE;;AAGD,SAAO,KAAK,CACT,SAAS,GAGN,YAAA;AAAM,WAAA,gBAAgB,CAAC,GAAG,EAAJ,EAAhB,SAAgB,CAAhB;AAAmC,GAHnC,GAMN,GAPM,CAAZ;AASD","sourceRoot":"","sourcesContent":["import { __generator } from \"tslib\";\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nimport { defer } from './defer';\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrScheduler, scheduler) {\n    var _a, _b;\n    var resultSelector;\n    var initialState;\n    if (arguments.length === 1) {\n        (_a = initialStateOrOptions, initialState = _a.initialState, condition = _a.condition, iterate = _a.iterate, _b = _a.resultSelector, resultSelector = _b === void 0 ? identity : _b, scheduler = _a.scheduler);\n    }\n    else {\n        initialState = initialStateOrOptions;\n        if (!resultSelectorOrScheduler || isScheduler(resultSelectorOrScheduler)) {\n            resultSelector = identity;\n            scheduler = resultSelectorOrScheduler;\n        }\n        else {\n            resultSelector = resultSelectorOrScheduler;\n        }\n    }\n    function gen() {\n        var state;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    state = initialState;\n                    _a.label = 1;\n                case 1:\n                    if (!(!condition || condition(state))) return [3, 4];\n                    return [4, resultSelector(state)];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3:\n                    state = iterate(state);\n                    return [3, 1];\n                case 4: return [2];\n            }\n        });\n    }\n    return defer((scheduler\n        ?\n            function () { return scheduleIterable(gen(), scheduler); }\n        :\n            gen));\n}\n//# sourceMappingURL=generate.js.map"]},"metadata":{},"sourceType":"module"}