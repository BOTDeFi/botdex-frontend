{"ast":null,"code":"import identity from './identity.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport matcher from './matcher.js';\nimport property from './property.js';\nimport optimizeCb from './_optimizeCb.js'; // An internal function to generate callbacks that can be applied to each\n// element in a collection, returning the desired result — either `_.identity`,\n// an arbitrary callback, a property matcher, or a property accessor.\n\nexport default function baseIteratee(value, context, argCount) {\n  if (value == null) return identity;\n  if (isFunction(value)) return optimizeCb(value, context, argCount);\n  if (isObject(value) && !isArray(value)) return matcher(value);\n  return property(value);\n}","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/node_modules/underscore/modules/_baseIteratee.js"],"names":["identity","isFunction","isObject","isArray","matcher","property","optimizeCb","baseIteratee","value","context","argCount"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB,C,CAEA;AACA;AACA;;AACA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,OAA7B,EAAsCC,QAAtC,EAAgD;AAC7D,MAAIF,KAAK,IAAI,IAAb,EAAmB,OAAOR,QAAP;AACnB,MAAIC,UAAU,CAACO,KAAD,CAAd,EAAuB,OAAOF,UAAU,CAACE,KAAD,EAAQC,OAAR,EAAiBC,QAAjB,CAAjB;AACvB,MAAIR,QAAQ,CAACM,KAAD,CAAR,IAAmB,CAACL,OAAO,CAACK,KAAD,CAA/B,EAAwC,OAAOJ,OAAO,CAACI,KAAD,CAAd;AACxC,SAAOH,QAAQ,CAACG,KAAD,CAAf;AACD","sourcesContent":["import identity from './identity.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport matcher from './matcher.js';\nimport property from './property.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// An internal function to generate callbacks that can be applied to each\n// element in a collection, returning the desired result — either `_.identity`,\n// an arbitrary callback, a property matcher, or a property accessor.\nexport default function baseIteratee(value, context, argCount) {\n  if (value == null) return identity;\n  if (isFunction(value)) return optimizeCb(value, context, argCount);\n  if (isObject(value) && !isArray(value)) return matcher(value);\n  return property(value);\n}\n"]},"metadata":{},"sourceType":"module"}