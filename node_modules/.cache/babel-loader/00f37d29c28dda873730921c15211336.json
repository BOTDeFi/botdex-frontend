{"ast":null,"code":"import cb from './_cb.js';\nimport pluck from './pluck.js';\nimport map from './map.js'; // Sort the object's values by a criterion produced by an iteratee.\n\nexport default function sortBy(obj, iteratee, context) {\n  var index = 0;\n  iteratee = cb(iteratee, context);\n  return pluck(map(obj, function (value, key, list) {\n    return {\n      value: value,\n      index: index++,\n      criteria: iteratee(value, key, list)\n    };\n  }).sort(function (left, right) {\n    var a = left.criteria;\n    var b = right.criteria;\n\n    if (a !== b) {\n      if (a > b || a === void 0) return 1;\n      if (a < b || b === void 0) return -1;\n    }\n\n    return left.index - right.index;\n  }), 'value');\n}","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/node_modules/underscore/modules/sortBy.js"],"names":["cb","pluck","map","sortBy","obj","iteratee","context","index","value","key","list","criteria","sort","left","right","a","b"],"mappings":"AAAA,OAAOA,EAAP,MAAe,UAAf;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB,C,CAEA;;AACA,eAAe,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,QAArB,EAA+BC,OAA/B,EAAwC;AACrD,MAAIC,KAAK,GAAG,CAAZ;AACAF,EAAAA,QAAQ,GAAGL,EAAE,CAACK,QAAD,EAAWC,OAAX,CAAb;AACA,SAAOL,KAAK,CAACC,GAAG,CAACE,GAAD,EAAM,UAASI,KAAT,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2B;AAC/C,WAAO;AACLF,MAAAA,KAAK,EAAEA,KADF;AAELD,MAAAA,KAAK,EAAEA,KAAK,EAFP;AAGLI,MAAAA,QAAQ,EAAEN,QAAQ,CAACG,KAAD,EAAQC,GAAR,EAAaC,IAAb;AAHb,KAAP;AAKD,GANe,CAAH,CAMVE,IANU,CAML,UAASC,IAAT,EAAeC,KAAf,EAAsB;AAC5B,QAAIC,CAAC,GAAGF,IAAI,CAACF,QAAb;AACA,QAAIK,CAAC,GAAGF,KAAK,CAACH,QAAd;;AACA,QAAII,CAAC,KAAKC,CAAV,EAAa;AACX,UAAID,CAAC,GAAGC,CAAJ,IAASD,CAAC,KAAK,KAAK,CAAxB,EAA2B,OAAO,CAAP;AAC3B,UAAIA,CAAC,GAAGC,CAAJ,IAASA,CAAC,KAAK,KAAK,CAAxB,EAA2B,OAAO,CAAC,CAAR;AAC5B;;AACD,WAAOH,IAAI,CAACN,KAAL,GAAaO,KAAK,CAACP,KAA1B;AACD,GAdY,CAAD,EAcR,OAdQ,CAAZ;AAeD","sourcesContent":["import cb from './_cb.js';\nimport pluck from './pluck.js';\nimport map from './map.js';\n\n// Sort the object's values by a criterion produced by an iteratee.\nexport default function sortBy(obj, iteratee, context) {\n  var index = 0;\n  iteratee = cb(iteratee, context);\n  return pluck(map(obj, function(value, key, list) {\n    return {\n      value: value,\n      index: index++,\n      criteria: iteratee(value, key, list)\n    };\n  }).sort(function(left, right) {\n    var a = left.criteria;\n    var b = right.criteria;\n    if (a !== b) {\n      if (a > b || a === void 0) return 1;\n      if (a < b || b === void 0) return -1;\n    }\n    return left.index - right.index;\n  }), 'value');\n}\n"]},"metadata":{},"sourceType":"module"}