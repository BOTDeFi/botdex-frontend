{"ast":null,"code":"/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n};\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n};\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break;\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start; // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start; // Remove the line prefix.\n\n    events.splice(index - 2, 2);\n  }\n\n  return events;\n}\n/** @type {Tokenizer} */\n\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n\n  let kind;\n  /** @type {boolean} */\n\n  let startTag;\n  /** @type {string} */\n\n  let buffer;\n  /** @type {number} */\n\n  let index;\n  /** @type {Code} */\n\n  let marker;\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow');\n    effects.enter('htmlFlowData');\n    effects.consume(code);\n    return open;\n  }\n  /** @type {State} */\n\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationStart;\n    }\n\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n\n    if (code === 63) {\n      effects.consume(code);\n      kind = 3; // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      startTag = true;\n      return tagName;\n    }\n\n    return nok(code);\n  }\n  /** @type {State} */\n\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code);\n      kind = 2;\n      return commentOpenInside;\n    }\n\n    if (code === 91) {\n      effects.consume(code);\n      kind = 5;\n      buffer = 'CDATA[';\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      kind = 4;\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    return nok(code);\n  }\n  /** @type {State} */\n\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    return nok(code);\n  }\n  /** @type {State} */\n\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === buffer.length ? self.interrupt ? ok : continuation : cdataOpenInside;\n    }\n\n    return nok(code);\n  }\n  /** @type {State} */\n\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n\n    return nok(code);\n  }\n  /** @type {State} */\n\n\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      if (code !== 47 && startTag && htmlRawNames.includes(buffer.toLowerCase())) {\n        kind = 1;\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6;\n\n        if (code === 47) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n\n      kind = 7; // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : startTag ? completeAttributeNameBefore(code) : completeClosingTagAfter(code);\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n\n    return nok(code);\n  }\n  /** @type {State} */\n\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return self.interrupt ? ok : continuation;\n    }\n\n    return nok(code);\n  }\n  /** @type {State} */\n\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n\n    return completeEnd(code);\n  }\n  /** @type {State} */\n\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n\n    return completeEnd(code);\n  }\n  /** @type {State} */\n\n\n  function completeAttributeName(code) {\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n\n    return completeAttributeNameAfter(code);\n  }\n  /** @type {State} */\n\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n\n    return completeAttributeNameBefore(code);\n  }\n  /** @type {State} */\n\n\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return completeAttributeValueQuoted;\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n\n    marker = null;\n    return completeAttributeValueUnquoted(code);\n  }\n  /** @type {State} */\n\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    if (code === marker) {\n      effects.consume(code);\n      return completeAttributeValueQuotedAfter;\n    }\n\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n  /** @type {State} */\n\n\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n  /** @type {State} */\n\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n\n    return nok(code);\n  }\n  /** @type {State} */\n\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n\n    return nok(code);\n  }\n  /** @type {State} */\n\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n\n    return code === null || markdownLineEnding(code) ? continuation(code) : nok(code);\n  }\n  /** @type {State} */\n\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code);\n      return continuationCharacterDataInside;\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(nextBlankConstruct, continuationClose, continuationAtLineEnding)(code);\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code);\n    }\n\n    effects.consume(code);\n    return continuation;\n  }\n  /** @type {State} */\n\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData');\n    return htmlContinueStart(code);\n  }\n  /** @type {State} */\n\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code);\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt({\n        tokenize: htmlLineEnd,\n        partial: true\n      }, htmlContinueStart, done)(code);\n    }\n\n    effects.enter('htmlFlowData');\n    return continuation(code);\n  }\n  /** @type {Tokenizer} */\n\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start;\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      return lineStart;\n    }\n    /** @type {State} */\n\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n    }\n  }\n  /** @type {State} */\n\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n\n    return continuation(code);\n  }\n  /** @type {State} */\n\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n\n    return continuation(code);\n  }\n  /** @type {State} */\n\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n\n    return continuation(code);\n  }\n  /** @type {State} */\n\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n\n    return continuation(code);\n  }\n  /** @type {State} */\n\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    return continuation(code);\n  }\n  /** @type {State} */\n\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData');\n      return done(code);\n    }\n\n    effects.consume(code);\n    return continuationClose;\n  }\n  /** @type {State} */\n\n\n  function done(code) {\n    effects.exit('htmlFlow');\n    return ok(code);\n  }\n}\n/** @type {Tokenizer} */\n\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData');\n    effects.enter('lineEndingBlank');\n    effects.consume(code);\n    effects.exit('lineEndingBlank');\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/node_modules/micromark-core-commonmark/lib/html-flow.js"],"names":["asciiAlpha","asciiAlphanumeric","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","htmlBlockNames","htmlRawNames","blankLine","htmlFlow","name","tokenize","tokenizeHtmlFlow","resolveTo","resolveToHtmlFlow","concrete","nextBlankConstruct","tokenizeNextBlank","partial","events","index","length","type","start","splice","effects","ok","nok","self","kind","startTag","buffer","marker","code","enter","consume","open","declarationStart","tagCloseStart","interrupt","continuationDeclarationInside","String","fromCharCode","tagName","commentOpenInside","cdataOpenInside","charCodeAt","continuation","includes","toLowerCase","basicSelfClosing","parser","lazy","now","line","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","check","continuationAtLineEnding","exit","htmlContinueStart","done","attempt","htmlLineEnd","lineStart","continuationRawEndTag"],"mappings":"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","sourcesContent":["/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}