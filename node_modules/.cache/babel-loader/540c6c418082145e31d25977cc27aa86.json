{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { metamaskService as metamaskServiceModule, useWalletConnectorContext } from '@/services/MetamaskConnect';\nimport { getBaseScannerUrl } from '@/utils/urlConstructors';\n/**\n * @param postfix like 'block/131231231' or etc (WITHOUT SLASH)\n * @returns URL like `https://kovan.etherscan.io/${postfix}`\n */\n\nexport const useScannerUrl = postfix => {\n  _s();\n\n  const {\n    metamaskService\n  } = useWalletConnectorContext();\n  const baseScannerUrl = getBaseScannerUrl(metamaskService.usedChain);\n  return `${baseScannerUrl}/${postfix}`;\n};\n\n_s(useScannerUrl, \"2LlBmNjF4vgIIf+cijAi4IBxyUg=\", false, function () {\n  return [useWalletConnectorContext];\n});\n\nexport const getScannerUrl = postfix => {\n  const baseScannerUrl = getBaseScannerUrl(metamaskServiceModule.usedChain);\n  return `${baseScannerUrl}/${postfix}`;\n};","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/hooks/useScannerUrl.ts"],"names":["metamaskService","metamaskServiceModule","useWalletConnectorContext","getBaseScannerUrl","useScannerUrl","postfix","baseScannerUrl","usedChain","getScannerUrl"],"mappings":";;AAAA,SACEA,eAAe,IAAIC,qBADrB,EAEEC,yBAFF,QAGO,4BAHP;AAIA,SAASC,iBAAT,QAAkC,yBAAlC;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAA6B;AAAA;;AACxD,QAAM;AAAEL,IAAAA;AAAF,MAAsBE,yBAAyB,EAArD;AACA,QAAMI,cAAc,GAAGH,iBAAiB,CAACH,eAAe,CAACO,SAAjB,CAAxC;AACA,SAAQ,GAAED,cAAe,IAAGD,OAAQ,EAApC;AACD,CAJM;;GAAMD,a;UACiBF,yB;;;AAK9B,OAAO,MAAMM,aAAa,GAAIH,OAAD,IAA6B;AACxD,QAAMC,cAAc,GAAGH,iBAAiB,CAACF,qBAAqB,CAACM,SAAvB,CAAxC;AACA,SAAQ,GAAED,cAAe,IAAGD,OAAQ,EAApC;AACD,CAHM","sourcesContent":["import {\n  metamaskService as metamaskServiceModule,\n  useWalletConnectorContext,\n} from '@/services/MetamaskConnect';\nimport { getBaseScannerUrl } from '@/utils/urlConstructors';\n\n/**\n * @param postfix like 'block/131231231' or etc (WITHOUT SLASH)\n * @returns URL like `https://kovan.etherscan.io/${postfix}`\n */\nexport const useScannerUrl = (postfix: string): string => {\n  const { metamaskService } = useWalletConnectorContext();\n  const baseScannerUrl = getBaseScannerUrl(metamaskService.usedChain);\n  return `${baseScannerUrl}/${postfix}`;\n};\n\nexport const getScannerUrl = (postfix: string): string => {\n  const baseScannerUrl = getBaseScannerUrl(metamaskServiceModule.usedChain);\n  return `${baseScannerUrl}/${postfix}`;\n};\n"]},"metadata":{},"sourceType":"module"}