{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Farms/FarmsStakeUnstakeButtons/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react-lite';\nimport { Button } from '@/components/atoms';\nimport { useLpTokenPrice } from '@/hooks/farms/useFarmsPrices';\nimport { useMst } from '@/store';\nimport { useFarmUserData } from '@/store/farms/hooks';\nimport { getAddLiquidityUrl } from '@/utils/urlConstructors';\nimport './FarmsStakeUnstakeButtons.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FarmsStakeUnstakeButtons = observer(_c = _s(({\n  className,\n  farm\n}) => {\n  _s();\n\n  const {\n    pid,\n    lpSymbol,\n    quoteToken,\n    token\n  } = farm;\n  const {\n    tokenBalance,\n    stakedBalance\n  } = useFarmUserData(farm);\n  const {\n    modals\n  } = useMst();\n  const lpPrice = useLpTokenPrice(lpSymbol);\n  const buttons = [{\n    handler: () => {\n      modals.farmsStakeUnstake.open({\n        isStaking: false,\n        maxValue: stakedBalance.toString(),\n        lpPrice: lpPrice.toString(),\n        tokenSymbol: lpSymbol,\n        farmId: pid,\n        addLiquidityUrl: ''\n      });\n    },\n    text: '-'\n  }, {\n    handler: () => {\n      modals.farmsStakeUnstake.open({\n        isStaking: true,\n        maxValue: tokenBalance.toString(),\n        lpPrice: lpPrice.toString(),\n        tokenSymbol: lpSymbol,\n        farmId: pid,\n        addLiquidityUrl: getAddLiquidityUrl(quoteToken, token)\n      });\n    },\n    text: '+'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames(className, 'pools-stake-unstake-buttons', 'box-f'),\n    children: buttons.map(({\n      text,\n      handler\n    }) => /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"outline-purple\",\n      size: \"ssm\",\n      onClick: handler,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-smd text-yellow text-bold\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, text, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}, \"pDDYamV1VrWR8i1SsC4SalX9lT4=\", false, function () {\n  return [useFarmUserData, useMst, useLpTokenPrice];\n}));\n_c2 = FarmsStakeUnstakeButtons;\nexport default FarmsStakeUnstakeButtons;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FarmsStakeUnstakeButtons$observer\");\n$RefreshReg$(_c2, \"FarmsStakeUnstakeButtons\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Farms/FarmsStakeUnstakeButtons/index.tsx"],"names":["React","classNames","observer","Button","useLpTokenPrice","useMst","useFarmUserData","getAddLiquidityUrl","FarmsStakeUnstakeButtons","className","farm","pid","lpSymbol","quoteToken","token","tokenBalance","stakedBalance","modals","lpPrice","buttons","handler","farmsStakeUnstake","open","isStaking","maxValue","toString","tokenSymbol","farmId","addLiquidityUrl","text","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,MAAT,QAAuB,SAAvB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AAEA,SAASC,kBAAT,QAAmC,yBAAnC;AAEA,OAAO,iCAAP;;AAEA,MAAMC,wBAGJ,GAAGN,QAAQ,SAAC,CAAC;AAAEO,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAyB;AAAA;;AACrC,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,QAAP;AAAiBC,IAAAA,UAAjB;AAA6BC,IAAAA;AAA7B,MAAuCJ,IAA7C;AACA,QAAM;AAAEK,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCV,eAAe,CAACI,IAAD,CAAvD;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAaZ,MAAM,EAAzB;AAEA,QAAMa,OAAO,GAAGd,eAAe,CAACQ,QAAD,CAA/B;AAEA,QAAMO,OAAO,GAAG,CACd;AACEC,IAAAA,OAAO,EAAE,MAAM;AACbH,MAAAA,MAAM,CAACI,iBAAP,CAAyBC,IAAzB,CAA8B;AAC5BC,QAAAA,SAAS,EAAE,KADiB;AAE5BC,QAAAA,QAAQ,EAAER,aAAa,CAACS,QAAd,EAFkB;AAG5BP,QAAAA,OAAO,EAAEA,OAAO,CAACO,QAAR,EAHmB;AAI5BC,QAAAA,WAAW,EAAEd,QAJe;AAK5Be,QAAAA,MAAM,EAAEhB,GALoB;AAM5BiB,QAAAA,eAAe,EAAE;AANW,OAA9B;AAQD,KAVH;AAWEC,IAAAA,IAAI,EAAE;AAXR,GADc,EAcd;AACET,IAAAA,OAAO,EAAE,MAAM;AACbH,MAAAA,MAAM,CAACI,iBAAP,CAAyBC,IAAzB,CAA8B;AAC5BC,QAAAA,SAAS,EAAE,IADiB;AAE5BC,QAAAA,QAAQ,EAAET,YAAY,CAACU,QAAb,EAFkB;AAG5BP,QAAAA,OAAO,EAAEA,OAAO,CAACO,QAAR,EAHmB;AAI5BC,QAAAA,WAAW,EAAEd,QAJe;AAK5Be,QAAAA,MAAM,EAAEhB,GALoB;AAM5BiB,QAAAA,eAAe,EAAErB,kBAAkB,CAACM,UAAD,EAAaC,KAAb;AANP,OAA9B;AAQD,KAVH;AAWEe,IAAAA,IAAI,EAAE;AAXR,GAdc,CAAhB;AA4BA,sBACE;AAAK,IAAA,SAAS,EAAE5B,UAAU,CAACQ,SAAD,EAAY,6BAAZ,EAA2C,OAA3C,CAA1B;AAAA,cACGU,OAAO,CAACW,GAAR,CAAY,CAAC;AAAED,MAAAA,IAAF;AAAQT,MAAAA;AAAR,KAAD,kBACX,QAAC,MAAD;AAAmB,MAAA,WAAW,EAAC,gBAA/B;AAAgD,MAAA,IAAI,EAAC,KAArD;AAA2D,MAAA,OAAO,EAAEA,OAApE;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,gCAAhB;AAAA,kBAAkDS;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF,OAAaA,IAAb;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA7CY;AAAA,UAE6BvB,eAF7B,EAIQD,MAJR,EAMKD,eANL;AAAA,GAHb;MAAMI,wB;AAkDN,eAAeA,wBAAf","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react-lite';\n\nimport { Button } from '@/components/atoms';\nimport { useLpTokenPrice } from '@/hooks/farms/useFarmsPrices';\nimport { useMst } from '@/store';\nimport { useFarmUserData } from '@/store/farms/hooks';\nimport { Farm } from '@/types';\nimport { getAddLiquidityUrl } from '@/utils/urlConstructors';\n\nimport './FarmsStakeUnstakeButtons.scss';\n\nconst FarmsStakeUnstakeButtons: React.FC<{\n  className?: string;\n  farm: Farm;\n}> = observer(({ className, farm }) => {\n  const { pid, lpSymbol, quoteToken, token } = farm;\n  const { tokenBalance, stakedBalance } = useFarmUserData(farm);\n\n  const { modals } = useMst();\n\n  const lpPrice = useLpTokenPrice(lpSymbol);\n\n  const buttons = [\n    {\n      handler: () => {\n        modals.farmsStakeUnstake.open({\n          isStaking: false,\n          maxValue: stakedBalance.toString(),\n          lpPrice: lpPrice.toString(),\n          tokenSymbol: lpSymbol,\n          farmId: pid,\n          addLiquidityUrl: '',\n        });\n      },\n      text: '-',\n    },\n    {\n      handler: () => {\n        modals.farmsStakeUnstake.open({\n          isStaking: true,\n          maxValue: tokenBalance.toString(),\n          lpPrice: lpPrice.toString(),\n          tokenSymbol: lpSymbol,\n          farmId: pid,\n          addLiquidityUrl: getAddLiquidityUrl(quoteToken, token),\n        });\n      },\n      text: '+',\n    },\n  ];\n  return (\n    <div className={classNames(className, 'pools-stake-unstake-buttons', 'box-f')}>\n      {buttons.map(({ text, handler }) => (\n        <Button key={text} colorScheme=\"outline-purple\" size=\"ssm\" onClick={handler}>\n          <span className=\"text-smd text-yellow text-bold\">{text}</span>\n        </Button>\n      ))}\n    </div>\n  );\n});\n\nexport default FarmsStakeUnstakeButtons;\n"]},"metadata":{},"sourceType":"module"}