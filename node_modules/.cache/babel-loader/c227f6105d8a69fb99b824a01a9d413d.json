{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/atoms/SortSelect/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Select as AntdSelect } from 'antd';\nimport classNames from 'classnames';\nimport 'antd/lib/select/style/css';\nimport { ReactComponent as ArrowImg } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/img/icons/arrow-btn.svg\";\nimport './SortSelect.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = AntdSelect;\n\nconst SortSelect = props => {\n  _s();\n\n  const {\n    className,\n    label,\n    sortOptions = ['Hot', 'APR', 'Multiplier', 'Earned', 'Liquidity'],\n    onChange,\n    ...otherProps\n  } = props;\n  const [activeValue, setActiveValue] = React.useState(sortOptions[0]);\n  return /*#__PURE__*/_jsxDEV(AntdSelect, {\n    labelInValue: true,\n    onChange: (value, ...onChangeProps) => {\n      setActiveValue(value.value);\n\n      if (onChange) {\n        onChange(value, ...onChangeProps);\n      }\n    },\n    suffixIcon: /*#__PURE__*/_jsxDEV(ArrowImg, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this),\n    value: {\n      value: '',\n      label: `${label} ${activeValue}`\n    },\n    ...otherProps,\n    className: classNames(className, 's-sort'),\n    children: sortOptions.filter(item => item !== activeValue).map(item => /*#__PURE__*/_jsxDEV(Option, {\n      value: item,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SortSelect, \"kLfdt+5Wy+hUbhCnSva+7MY1n74=\");\n\n_c = SortSelect;\nexport default SortSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortSelect\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/atoms/SortSelect/index.tsx"],"names":["React","Select","AntdSelect","classNames","Option","SortSelect","props","className","label","sortOptions","onChange","otherProps","activeValue","setActiveValue","useState","value","onChangeProps","filter","item","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAM,IAAIC,UAAnB,QAAqC,MAArC;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,2BAAP;;AAIA,OAAO,mBAAP;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaF,UAAnB;;AAOA,MAAMG,UAAiC,GAAIC,KAAD,IAAW;AAAA;;AACnD,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,WAAW,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,YAAf,EAA6B,QAA7B,EAAuC,WAAvC,CAHV;AAIJC,IAAAA,QAJI;AAKJ,OAAGC;AALC,MAMFL,KANJ;AAOA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCb,KAAK,CAACc,QAAN,CAAoBL,WAAW,CAAC,CAAD,CAA/B,CAAtC;AACA,sBACE,QAAC,UAAD;AACE,IAAA,YAAY,MADd;AAEE,IAAA,QAAQ,EAAE,CAACM,KAAD,EAAa,GAAGC,aAAhB,KAAkC;AAC1CH,MAAAA,cAAc,CAACE,KAAK,CAACA,KAAP,CAAd;;AACA,UAAIL,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACK,KAAD,EAAQ,GAAGC,aAAX,CAAR;AACD;AACF,KAPH;AAQE,IAAA,UAAU,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YARd;AASE,IAAA,KAAK,EAAE;AACLD,MAAAA,KAAK,EAAE,EADF;AAELP,MAAAA,KAAK,EAAG,GAAEA,KAAM,IAAGI,WAAY;AAF1B,KATT;AAAA,OAaMD,UAbN;AAcE,IAAA,SAAS,EAAER,UAAU,CAACI,SAAD,EAAY,QAAZ,CAdvB;AAAA,cAgBGE,WAAW,CACTQ,MADF,CACUC,IAAD,IAAUA,IAAI,KAAKN,WAD5B,EAEEO,GAFF,CAEOD,IAAD,iBACH,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,IAAf;AAAA,6BACE;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA;AADF,OAA0BA,IAA1B;AAAA;AAAA;AAAA;AAAA,YAHH;AAhBH;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAnCD;;GAAMb,U;;KAAAA,U;AAqCN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { Select as AntdSelect } from 'antd';\nimport { SelectProps, SelectValue } from 'antd/lib/select';\nimport classNames from 'classnames';\n\nimport 'antd/lib/select/style/css';\n\nimport { ReactComponent as ArrowImg } from '../../../assets/img/icons/arrow-btn.svg';\n\nimport './SortSelect.scss';\n\nconst { Option } = AntdSelect;\n\ninterface ISortSelect extends SelectProps<SelectValue> {\n  sortOptions?: string[];\n  label?: string;\n}\n\nconst SortSelect: React.FC<ISortSelect> = (props) => {\n  const {\n    className,\n    label,\n    sortOptions = ['Hot', 'APR', 'Multiplier', 'Earned', 'Liquidity'],\n    onChange,\n    ...otherProps\n  } = props;\n  const [activeValue, setActiveValue] = React.useState<any>(sortOptions[0]);\n  return (\n    <AntdSelect\n      labelInValue\n      onChange={(value: any, ...onChangeProps) => {\n        setActiveValue(value.value);\n        if (onChange) {\n          onChange(value, ...onChangeProps);\n        }\n      }}\n      suffixIcon={<ArrowImg />}\n      value={{\n        value: '',\n        label: `${label} ${activeValue}`,\n      }}\n      {...otherProps}\n      className={classNames(className, 's-sort')}\n    >\n      {sortOptions\n        .filter((item) => item !== activeValue)\n        .map((item) => (\n          <Option value={item} key={item}>\n            <div>{item}</div>\n          </Option>\n        ))}\n    </AntdSelect>\n  );\n};\n\nexport default SortSelect;\n"]},"metadata":{},"sourceType":"module"}