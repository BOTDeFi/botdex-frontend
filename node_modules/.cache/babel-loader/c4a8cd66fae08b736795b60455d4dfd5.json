{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Pools/Popovers/index.tsx\";\nimport React from 'react';\nimport { withPopover } from '@/HOC/BasePopover';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AutoFarmingPopover = withPopover('Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.');\nexport const ManualFarmingPopover = withPopover('You must harvest and compound your earnings from this pool manually.'); // ???\n// export const createTotalStakedPopoverComponent = (symbol: string) => withPopover(`Total amount of ${symbol} staked in this pool`);\n\nexport const TotalStakedPopover = /*#__PURE__*/React.memo(_c = ({\n  symbol,\n  ...props\n}) => {\n  const Component = withPopover(`Total amount of ${symbol} staked in this pool`);\n  return /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n});\n_c2 = TotalStakedPopover;\nexport const AutoBountyPopover = ({\n  symbol,\n  fee,\n  ...props\n}) => {\n  const Component = withPopover( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ['This bounty is given as a reward for providing a service to other users.', `Whenever you successfully claim the bounty, you’re also helping out by activating the Auto ${symbol} Pool’s compounding function for everyone.`, `Auto-Compound Bounty: ${fee === null ? '###' : fee / 100}% of all Auto ${symbol} pool users pending yield`].map((text, index, arr) => {\n      const isLast = index === arr.length - 1;\n      const styles = isLast ? {\n        className: 'text-bold'\n      } : {\n        style: {\n          marginBottom: '10px'\n        }\n      };\n      return /*#__PURE__*/_jsxDEV(\"p\", { ...styles,\n        children: text\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false));\n  return /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n};\n_c3 = AutoBountyPopover;\nexport const PoolsCollectPopover = /*#__PURE__*/React.memo(_c4 = ({\n  symbol,\n  ...props\n}) => {\n  const Component = withPopover( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [`Compound: collect and restake ${symbol} into pool.`, `Harvest: collect ${symbol} and send to wallet`].map((text, index, arr) => {\n      const isLast = index === arr.length - 1;\n      const styles = isLast ? {\n        className: 'text-bold'\n      } : {\n        style: {\n          marginBottom: '10px'\n        }\n      };\n      return /*#__PURE__*/_jsxDEV(\"p\", { ...styles,\n        children: text\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false));\n  return /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 12\n  }, this);\n});\n_c5 = PoolsCollectPopover;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TotalStakedPopover$React.memo\");\n$RefreshReg$(_c2, \"TotalStakedPopover\");\n$RefreshReg$(_c3, \"AutoBountyPopover\");\n$RefreshReg$(_c4, \"PoolsCollectPopover$React.memo\");\n$RefreshReg$(_c5, \"PoolsCollectPopover\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Pools/Popovers/index.tsx"],"names":["React","withPopover","AutoFarmingPopover","ManualFarmingPopover","TotalStakedPopover","memo","symbol","props","Component","AutoBountyPopover","fee","map","text","index","arr","isLast","length","styles","className","style","marginBottom","PoolsCollectPopover"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,mBAA5B;;;AAQA,OAAO,MAAMC,kBAAkB,GAAGD,WAAW,CAC3C,qGAD2C,CAAtC;AAIP,OAAO,MAAME,oBAAoB,GAAGF,WAAW,CAC7C,sEAD6C,CAAxC,C,CAIP;AACA;;AAEA,OAAO,MAAMG,kBAAsD,gBAAGJ,KAAK,CAACK,IAAN,MACpE,CAAC;AAAEC,EAAAA,MAAF;AAAU,KAAGC;AAAb,CAAD,KAA0B;AACxB,QAAMC,SAAS,GAAGP,WAAW,CAAE,mBAAkBK,MAAO,sBAA3B,CAA7B;AACA,sBAAO,QAAC,SAAD,OAAeC;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAJmE,CAA/D;MAAMH,kB;AAOb,OAAO,MAAMK,iBAAoD,GAAG,CAAC;AAAEH,EAAAA,MAAF;AAAUI,EAAAA,GAAV;AAAe,KAAGH;AAAlB,CAAD,KAA+B;AACjG,QAAMC,SAAS,GAAGP,WAAW,eAC3B;AAAA,cACG,CACC,0EADD,EAGE,8FAA6FK,MAAO,4CAHtG,EAKE,yBACCI,GAAG,KAAK,IAAR,GAAe,KAAf,GAAuBA,GAAG,GAAG,GAC9B,iBAAgBJ,MAAO,2BAPzB,EAQCK,GARD,CAQK,CAACC,IAAD,EAAOC,KAAP,EAAcC,GAAd,KAAsB;AAC1B,YAAMC,MAAM,GAAGF,KAAK,KAAKC,GAAG,CAACE,MAAJ,GAAa,CAAtC;AACA,YAAMC,MAAM,GAAGF,MAAM,GAAG;AAAEG,QAAAA,SAAS,EAAE;AAAb,OAAH,GAAgC;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB;AAAT,OAArD;AACA,0BACE,kBAAkBH,MAAlB;AAAA,kBACGL;AADH,SAAQA,IAAR;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAhBA;AADH,mBAD2B,CAA7B;AAqBA,sBAAO,QAAC,SAAD,OAAeL;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAvBM;MAAME,iB;AAyBb,OAAO,MAAMY,mBAAwD,gBAAGrB,KAAK,CAACK,IAAN,OACtE,CAAC;AAAEC,EAAAA,MAAF;AAAU,KAAGC;AAAb,CAAD,KAA0B;AACxB,QAAMC,SAAS,GAAGP,WAAW,eAC3B;AAAA,cACG,CACE,iCAAgCK,MAAO,aADzC,EAGE,oBAAmBA,MAAO,qBAH5B,EAICK,GAJD,CAIK,CAACC,IAAD,EAAOC,KAAP,EAAcC,GAAd,KAAsB;AAC1B,YAAMC,MAAM,GAAGF,KAAK,KAAKC,GAAG,CAACE,MAAJ,GAAa,CAAtC;AACA,YAAMC,MAAM,GAAGF,MAAM,GAAG;AAAEG,QAAAA,SAAS,EAAE;AAAb,OAAH,GAAgC;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB;AAAT,OAArD;AACA,0BACE,kBAAkBH,MAAlB;AAAA,kBACGL;AADH,SAAQA,IAAR;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAZA;AADH,mBAD2B,CAA7B;AAiBA,sBAAO,QAAC,SAAD,OAAeL;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApBqE,CAAjE;MAAMc,mB","sourcesContent":["import React from 'react';\n\nimport { withPopover } from '@/HOC/BasePopover';\n\nimport {\n  IAutoBountyPopoverProps,\n  IPoolsCollectPopoverProps,\n  ITotalStakedPopoverProps,\n} from './types';\n\nexport const AutoFarmingPopover = withPopover(\n  'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n);\n\nexport const ManualFarmingPopover = withPopover(\n  'You must harvest and compound your earnings from this pool manually.',\n);\n\n// ???\n// export const createTotalStakedPopoverComponent = (symbol: string) => withPopover(`Total amount of ${symbol} staked in this pool`);\n\nexport const TotalStakedPopover: React.FC<ITotalStakedPopoverProps> = React.memo(\n  ({ symbol, ...props }) => {\n    const Component = withPopover(`Total amount of ${symbol} staked in this pool`);\n    return <Component {...props} />;\n  },\n);\n\nexport const AutoBountyPopover: React.FC<IAutoBountyPopoverProps> = ({ symbol, fee, ...props }) => {\n  const Component = withPopover(\n    <>\n      {[\n        'This bounty is given as a reward for providing a service to other users.',\n\n        `Whenever you successfully claim the bounty, you’re also helping out by activating the Auto ${symbol} Pool’s compounding function for everyone.`,\n\n        `Auto-Compound Bounty: ${\n          fee === null ? '###' : fee / 100\n        }% of all Auto ${symbol} pool users pending yield`,\n      ].map((text, index, arr) => {\n        const isLast = index === arr.length - 1;\n        const styles = isLast ? { className: 'text-bold' } : { style: { marginBottom: '10px' } };\n        return (\n          <p key={text} {...styles}>\n            {text}\n          </p>\n        );\n      })}\n    </>,\n  );\n  return <Component {...props} />;\n};\n\nexport const PoolsCollectPopover: React.FC<IPoolsCollectPopoverProps> = React.memo(\n  ({ symbol, ...props }) => {\n    const Component = withPopover(\n      <>\n        {[\n          `Compound: collect and restake ${symbol} into pool.`,\n\n          `Harvest: collect ${symbol} and send to wallet`,\n        ].map((text, index, arr) => {\n          const isLast = index === arr.length - 1;\n          const styles = isLast ? { className: 'text-bold' } : { style: { marginBottom: '10px' } };\n          return (\n            <p key={text} {...styles}>\n              {text}\n            </p>\n          );\n        })}\n      </>,\n    );\n    return <Component {...props} />;\n  },\n);\n"]},"metadata":{},"sourceType":"module"}