{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\n\nconst usePreviousValue = value => {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n};\n\n_s(usePreviousValue, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\nexport default usePreviousValue;","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/hooks/usePreviousValue.ts"],"names":["useEffect","useRef","usePreviousValue","value","ref","current"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAAgB;AAAA;;AACvC,QAAMC,GAAG,GAAGH,MAAM,EAAlB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,GAAG,CAACC,OAAJ,GAAcF,KAAd;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,SAAOC,GAAG,CAACC,OAAX;AACD,CARD;;GAAMH,gB;;AAUN,eAAeA,gBAAf","sourcesContent":["import { useEffect, useRef } from 'react';\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n};\n\nexport default usePreviousValue;\n"]},"metadata":{},"sourceType":"module"}