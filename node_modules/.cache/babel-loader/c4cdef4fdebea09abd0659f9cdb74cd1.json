{"ast":null,"code":"import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function scheduleObservable(input, scheduler) {\n  return new Observable(function (subscriber) {\n    var sub = new Subscription();\n    sub.add(scheduler.schedule(function () {\n      var observable = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next: function (value) {\n          sub.add(scheduler.schedule(function () {\n            return subscriber.next(value);\n          }));\n        },\n        error: function (err) {\n          sub.add(scheduler.schedule(function () {\n            return subscriber.error(err);\n          }));\n        },\n        complete: function () {\n          sub.add(scheduler.schedule(function () {\n            return subscriber.complete();\n          }));\n        }\n      }));\n    }));\n    return sub;\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/scheduled/scheduleObservable.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,YAAT,QAA6B,iBAA7B;AACA,SAAS,UAAU,IAAI,iBAAvB,QAAgD,sBAAhD;AAGA,OAAM,SAAU,kBAAV,CAAgC,KAAhC,EAA6D,SAA7D,EAAqF;AACzF,SAAO,IAAI,UAAJ,CAAkB,UAAA,UAAA,EAAU;AACjC,QAAM,GAAG,GAAG,IAAI,YAAJ,EAAZ;AACA,IAAA,GAAG,CAAC,GAAJ,CAAQ,SAAS,CAAC,QAAV,CAAmB,YAAA;AACzB,UAAM,UAAU,GAAqB,KAAa,CAAC,iBAAD,CAAb,EAArC;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,UAAU,CAAC,SAAX,CAAqB;AAC3B,QAAA,IAAI,EAAA,UAAC,KAAD,EAAM;AAAI,UAAA,GAAG,CAAC,GAAJ,CAAQ,SAAS,CAAC,QAAV,CAAmB,YAAA;AAAM,mBAAA,UAAU,CAAC,IAAX,CAAA,KAAA,CAAA;AAAsB,WAA/C,CAAR;AAA4D,SAD/C;AAE3B,QAAA,KAAK,EAAA,UAAC,GAAD,EAAI;AAAI,UAAA,GAAG,CAAC,GAAJ,CAAQ,SAAS,CAAC,QAAV,CAAmB,YAAA;AAAM,mBAAA,UAAU,CAAC,KAAX,CAAA,GAAA,CAAA;AAAqB,WAA9C,CAAR;AAA2D,SAF7C;AAG3B,QAAA,QAAQ,EAAA,YAAA;AAAK,UAAA,GAAG,CAAC,GAAJ,CAAQ,SAAS,CAAC,QAAV,CAAmB,YAAA;AAAM,mBAAA,UAAU,CAAV,QAAA,EAAA;AAAqB,WAA9C,CAAR;AAA2D;AAH7C,OAArB,CAAR;AAKD,KAPO,CAAR;AAQA,WAAO,GAAP;AACD,GAXM,CAAP;AAYD","sourceRoot":"","sourcesContent":["import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function scheduleObservable(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        sub.add(scheduler.schedule(function () {\n            var observable = input[Symbol_observable]();\n            sub.add(observable.subscribe({\n                next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },\n                error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },\n                complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },\n            }));\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleObservable.js.map"]},"metadata":{},"sourceType":"module"}