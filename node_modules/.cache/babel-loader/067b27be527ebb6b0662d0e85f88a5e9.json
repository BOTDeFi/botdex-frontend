{"ast":null,"code":"/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\nimport { u } from 'unist-builder';\nimport { all } from '../traverse.js';\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\n\nexport function listItem(h, node, parent) {\n  const result = all(h, node);\n  const loose = parent ? listLoose(parent) : listItemLoose(node);\n  /** @type {Properties} */\n\n  const props = {};\n  /** @type {Array.<Content>} */\n\n  const wrapped = [];\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph;\n\n    if (result[0] && result[0].type === 'element' && result[0].tagName === 'p') {\n      paragraph = result[0];\n    } else {\n      paragraph = h(null, 'p', []);\n      result.unshift(paragraph);\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '));\n    }\n\n    paragraph.children.unshift(h(null, 'input', {\n      type: 'checkbox',\n      checked: node.checked,\n      disabled: true\n    })); // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n\n    props.className = ['task-list-item'];\n  }\n\n  let index = -1;\n\n  while (++index < result.length) {\n    const child = result[index]; // Add eols before nodes, except if this is a loose, first paragraph.\n\n    if (loose || index !== 0 || child.type !== 'element' || child.tagName !== 'p') {\n      wrapped.push(u('text', '\\n'));\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children);\n    } else {\n      wrapped.push(child);\n    }\n  }\n\n  const tail = result[result.length - 1]; // Add a final eol.\n\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'));\n  }\n\n  return h(node, 'li', props, wrapped);\n}\n/**\n * @param {List} node\n * @return {Boolean}\n */\n\nfunction listLoose(node) {\n  let loose = node.spread;\n  const children = node.children;\n  let index = -1;\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index]);\n  }\n\n  return Boolean(loose);\n}\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\n\n\nfunction listItemLoose(node) {\n  const spread = node.spread;\n  return spread === undefined || spread === null ? node.children.length > 1 : spread;\n}","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/node_modules/mdast-util-to-hast/lib/handlers/list-item.js"],"names":["u","all","listItem","h","node","parent","result","loose","listLoose","listItemLoose","props","wrapped","checked","paragraph","type","tagName","unshift","children","length","disabled","className","index","child","push","tail","spread","Boolean","undefined"],"mappings":"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","sourcesContent":["/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array.<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n"]},"metadata":{},"sourceType":"module"}