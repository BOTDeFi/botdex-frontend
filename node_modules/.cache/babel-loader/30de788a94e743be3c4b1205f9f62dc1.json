{"ast":null,"code":"// import { Token } from '@/types';\nimport { types } from 'mobx-state-tree'; // export interface ITokenMobx extends Token {\n//   decimals: number;\n//   projectLink: string;\n//   logoURI: string;\n//   busdPrice: string;\n// }\n\nconst FarmsStakeUnstakeModal = types.model({\n  isOpen: types.optional(types.boolean, false),\n  isStaking: types.boolean,\n  maxValue: types.string,\n  tokenSymbol: types.string,\n  lpPrice: types.string,\n  farmId: types.number,\n  addLiquidityUrl: types.string\n}).actions(_c = self => ({\n  close() {\n    self.isOpen = false;\n  },\n\n  open({\n    isStaking,\n    maxValue,\n    tokenSymbol,\n    farmId,\n    lpPrice,\n    addLiquidityUrl\n  }) {\n    self.isOpen = true;\n    self.isStaking = isStaking;\n    self.maxValue = maxValue;\n    self.tokenSymbol = tokenSymbol;\n    self.farmId = farmId;\n    self.lpPrice = lpPrice;\n    self.addLiquidityUrl = addLiquidityUrl;\n  }\n\n}));\n_c2 = FarmsStakeUnstakeModal;\nexport default FarmsStakeUnstakeModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FarmsStakeUnstakeModal$types\\n  .model({\\n    isOpen: types.optional(types.boolean, false),\\n    isStaking: types.boolean,\\n    maxValue: types.string,\\n    tokenSymbol: types.string,\\n    lpPrice: types.string,\\n    farmId: types.number,\\n    addLiquidityUrl: types.string,\\n  })\\n  .actions\");\n$RefreshReg$(_c2, \"FarmsStakeUnstakeModal\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/store/Models/Modals/FarmsStakeUnstakeModal.ts"],"names":["types","FarmsStakeUnstakeModal","model","isOpen","optional","boolean","isStaking","maxValue","string","tokenSymbol","lpPrice","farmId","number","addLiquidityUrl","actions","self","close","open"],"mappings":"AAAA;AACA,SAASA,KAAT,QAAsB,iBAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,sBAAsB,GAAGD,KAAK,CACjCE,KAD4B,CACtB;AACLC,EAAAA,MAAM,EAAEH,KAAK,CAACI,QAAN,CAAeJ,KAAK,CAACK,OAArB,EAA8B,KAA9B,CADH;AAELC,EAAAA,SAAS,EAAEN,KAAK,CAACK,OAFZ;AAGLE,EAAAA,QAAQ,EAAEP,KAAK,CAACQ,MAHX;AAILC,EAAAA,WAAW,EAAET,KAAK,CAACQ,MAJd;AAKLE,EAAAA,OAAO,EAAEV,KAAK,CAACQ,MALV;AAMLG,EAAAA,MAAM,EAAEX,KAAK,CAACY,MANT;AAOLC,EAAAA,eAAe,EAAEb,KAAK,CAACQ;AAPlB,CADsB,EAU5BM,OAV4B,MAUnBC,IAAD,KAAW;AAClBC,EAAAA,KAAK,GAAG;AACND,IAAAA,IAAI,CAACZ,MAAL,GAAc,KAAd;AACD,GAHiB;;AAIlBc,EAAAA,IAAI,CAAC;AACHX,IAAAA,SADG;AAEHC,IAAAA,QAFG;AAGHE,IAAAA,WAHG;AAIHE,IAAAA,MAJG;AAKHD,IAAAA,OALG;AAMHG,IAAAA;AANG,GAAD,EAcD;AACDE,IAAAA,IAAI,CAACZ,MAAL,GAAc,IAAd;AAEAY,IAAAA,IAAI,CAACT,SAAL,GAAiBA,SAAjB;AACAS,IAAAA,IAAI,CAACR,QAAL,GAAgBA,QAAhB;AACAQ,IAAAA,IAAI,CAACN,WAAL,GAAmBA,WAAnB;AACAM,IAAAA,IAAI,CAACJ,MAAL,GAAcA,MAAd;AACAI,IAAAA,IAAI,CAACL,OAAL,GAAeA,OAAf;AACAK,IAAAA,IAAI,CAACF,eAAL,GAAuBA,eAAvB;AACD;;AA3BiB,CAAX,CAVoB,CAA/B;MAAMZ,sB;AAwCN,eAAeA,sBAAf","sourcesContent":["// import { Token } from '@/types';\nimport { types } from 'mobx-state-tree';\n\n// export interface ITokenMobx extends Token {\n//   decimals: number;\n//   projectLink: string;\n//   logoURI: string;\n//   busdPrice: string;\n// }\n\nconst FarmsStakeUnstakeModal = types\n  .model({\n    isOpen: types.optional(types.boolean, false),\n    isStaking: types.boolean,\n    maxValue: types.string,\n    tokenSymbol: types.string,\n    lpPrice: types.string,\n    farmId: types.number,\n    addLiquidityUrl: types.string,\n  })\n  .actions((self) => ({\n    close() {\n      self.isOpen = false;\n    },\n    open({\n      isStaking,\n      maxValue,\n      tokenSymbol,\n      farmId,\n      lpPrice,\n      addLiquidityUrl,\n    }: {\n      isStaking: boolean;\n      maxValue: string;\n      tokenSymbol: string;\n      farmId: number;\n      lpPrice: string;\n      addLiquidityUrl: string;\n    }) {\n      self.isOpen = true;\n\n      self.isStaking = isStaking;\n      self.maxValue = maxValue;\n      self.tokenSymbol = tokenSymbol;\n      self.farmId = farmId;\n      self.lpPrice = lpPrice;\n      self.addLiquidityUrl = addLiquidityUrl;\n    },\n  }));\n\nexport default FarmsStakeUnstakeModal;\n"]},"metadata":{},"sourceType":"module"}