{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Trade/ImportTokensModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport ArrowImg from \"@/assets/img/icons/arrow-btn.svg\";\nimport InfoRImg from \"@/assets/img/icons/info-r.svg\";\nimport LinkImg from \"@/assets/img/icons/open-link.svg\";\nimport { useMst } from '../../../../store';\nimport { Button, Switch } from '../../../atoms';\nimport { Modal } from '../../../molecules';\nimport './ImportTokensModal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImportTokensModal = observer(_c = _s(({\n  isVisible,\n  handleClose,\n  handleBack,\n  token,\n  handleImport\n}) => {\n  _s();\n\n  const {\n    tokens\n  } = useMst();\n  const [isUnderstand, setUnderstand] = React.useState(false);\n\n  const handleChangeUnderstand = value => {\n    setUnderstand(value);\n  };\n\n  const handleEnd = () => {\n    if (token) {\n      handleImport(token);\n\n      if (localStorage.importTokens) {\n        localStorage.importTokens = JSON.stringify([...JSON.parse(localStorage.importTokens), token]);\n        tokens.setTokens('imported', [...tokens.imported, token]);\n      } else {\n        localStorage.importTokens = JSON.stringify([token]);\n        tokens.setTokens('imported', [token]);\n      }\n    }\n\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isVisible: !!isVisible,\n    className: \"m-import-tokens\",\n    handleCancel: handleClose,\n    width: 390,\n    closeIcon: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-import-tokens__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-import-tokens__title box-f-ai-c box-pointer\",\n        onClick: handleBack,\n        onKeyDown: handleBack,\n        role: \"button\",\n        tabIndex: 0,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ArrowImg,\n          alt: \"arrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-bold text-black text-smd\",\n          children: \"Import Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-import-tokens__text text-smd\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"If you purchase an arbitrary token, you may be unable to sell it back.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-import-tokens__alert box-f-ai-c\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: InfoRImg,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-smd\",\n          children: \"Unknown Source\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), token ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-import-tokens__token box-f box-f-ai-e box-f-jc-sb\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text m-import-tokens__token-name\",\n            children: `${token.name} (${token.symbol})`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray text-ssm m-import-tokens__token-address\",\n            children: token.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          className: \"m-import-tokens__token-link text-black text-ssm box-f-ai-c\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"View BscScan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: LinkImg,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-import-tokens__switch box-f-ai-c\",\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          onChange: handleChangeUnderstand,\n          defaultChecked: isUnderstand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-bold text-black\",\n          children: \"I Understand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"m-import-tokens__btn\",\n        disabled: !isUnderstand,\n        onClick: handleEnd,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-bold text-white text-md\",\n          children: \"Import\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}, \"YTttEoBdt3Epvde7EYK6LLI0WD4=\", false, function () {\n  return [useMst];\n}));\n_c2 = ImportTokensModal;\nexport default ImportTokensModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImportTokensModal$observer\");\n$RefreshReg$(_c2, \"ImportTokensModal\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Trade/ImportTokensModal/index.tsx"],"names":["React","observer","useMst","Button","Switch","Modal","ImportTokensModal","isVisible","handleClose","handleBack","token","handleImport","tokens","isUnderstand","setUnderstand","useState","handleChangeUnderstand","value","handleEnd","localStorage","importTokens","JSON","stringify","parse","setTokens","imported","ArrowImg","InfoRImg","name","symbol","address","LinkImg"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport ArrowImg from '@/assets/img/icons/arrow-btn.svg';\nimport InfoRImg from '@/assets/img/icons/info-r.svg';\nimport LinkImg from '@/assets/img/icons/open-link.svg';\n\nimport { useMst } from '../../../../store';\nimport { IToken } from '../../../../types';\nimport { Button, Switch } from '../../../atoms';\nimport { Modal } from '../../../molecules';\n\nimport './ImportTokensModal.scss';\n\ninterface IImportTokensModal {\n  isVisible?: boolean;\n  handleClose: () => void;\n  handleBack: () => void;\n  token?: IToken;\n  handleImport: (token: IToken) => void;\n}\n\nconst ImportTokensModal: React.FC<IImportTokensModal> = observer(\n  ({ isVisible, handleClose, handleBack, token, handleImport }) => {\n    const { tokens } = useMst();\n    const [isUnderstand, setUnderstand] = React.useState<boolean>(false);\n\n    const handleChangeUnderstand = (value: boolean): void => {\n      setUnderstand(value);\n    };\n\n    const handleEnd = () => {\n      if (token) {\n        handleImport(token);\n        if (localStorage.importTokens) {\n          localStorage.importTokens = JSON.stringify([\n            ...JSON.parse(localStorage.importTokens),\n            token,\n          ]);\n          tokens.setTokens('imported', [...tokens.imported, token]);\n        } else {\n          localStorage.importTokens = JSON.stringify([token]);\n          tokens.setTokens('imported', [token]);\n        }\n      }\n      handleClose();\n    };\n\n    return (\n      <Modal\n        isVisible={!!isVisible}\n        className=\"m-import-tokens\"\n        handleCancel={handleClose}\n        width={390}\n        closeIcon\n      >\n        <div className=\"m-import-tokens__content\">\n          <div\n            className=\"m-import-tokens__title box-f-ai-c box-pointer\"\n            onClick={handleBack}\n            onKeyDown={handleBack}\n            role=\"button\"\n            tabIndex={0}\n          >\n            <img src={ArrowImg} alt=\"arrow\" />\n            <span className=\"text-bold text-black text-smd\">Import Tokens</span>\n          </div>\n          <div className=\"m-import-tokens__text text-smd\">\n            <p>\n              Anyone can create a BEP20 token on BSC with any name, including creating fake versions\n              of existing tokens and tokens that claim to represent projects that do not have a\n              token.\n            </p>\n            <p>If you purchase an arbitrary token, you may be unable to sell it back.</p>\n          </div>\n          <div className=\"m-import-tokens__alert box-f-ai-c\">\n            <img src={InfoRImg} alt=\"\" />\n            <span className=\"text-smd\">Unknown Source</span>\n          </div>\n          {token ? (\n            <div className=\"m-import-tokens__token box-f box-f-ai-e box-f-jc-sb\">\n              <div>\n                <div className=\"text m-import-tokens__token-name\">{`${token.name} (${token.symbol})`}</div>\n                <div className=\"text-gray text-ssm m-import-tokens__token-address\">\n                  {token.address}\n                </div>\n              </div>\n              <a href=\"/\" className=\"m-import-tokens__token-link text-black text-ssm box-f-ai-c\">\n                <span>View BscScan</span>\n                <img src={LinkImg} alt=\"\" />\n              </a>\n            </div>\n          ) : (\n            ''\n          )}\n          <div className=\"m-import-tokens__switch box-f-ai-c\">\n            <Switch onChange={handleChangeUnderstand} defaultChecked={isUnderstand} />\n            <span className=\"text-bold text-black\">I Understand</span>\n          </div>\n          <Button className=\"m-import-tokens__btn\" disabled={!isUnderstand} onClick={handleEnd}>\n            <span className=\"text-bold text-white text-md\">Import</span>\n          </Button>\n        </div>\n      </Modal>\n    );\n  },\n);\n\nexport default ImportTokensModal;\n"]},"metadata":{},"sourceType":"module"}