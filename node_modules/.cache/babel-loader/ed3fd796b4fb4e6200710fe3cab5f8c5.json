{"ast":null,"code":"/**\n * Returns `dateTime` as `Moment` object without hours, minutes, seconds and milliseconds.\n * It is useful for comparing dates (10.12.20 00:00:00.000 and 11.12.20 00:00:00.000).\n */\nexport const getMomentDate = dateTime => {\n  // Note: if you chain multiple actions to construct a date, you should start from a year, then a month, then a day etc. Otherwise you may get unexpected results, like when day=31 and current month has only 30 days\n  return dateTime.clone().hours(0).minutes(0).seconds(0).milliseconds(0);\n};\n/**\n * Given (10.12.20) as `date` and (14:15:22.123) as `time`.\n * Returns compiled/merge date and time (10.12.20 14:15:0.000) WITHOUT seconds and milliseconds.\n */\n\nexport const getMomentMergedDateTime = (date, time) => {\n  // Note: if you chain multiple actions to construct a date, you should start from a year, then a month, then a day etc. Otherwise you may get unexpected results, like when day=31 and current month has only 30 days\n  return date.clone().hours(time.hours()).minutes(time.minutes()).seconds(0).milliseconds(0);\n};","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/DaoProposal/helpers.ts"],"names":["getMomentDate","dateTime","clone","hours","minutes","seconds","milliseconds","getMomentMergedDateTime","date","time"],"mappings":"AAEA;AACA;AACA;AACA;AACA,OAAO,MAAMA,aAAa,GAAIC,QAAD,IAA8B;AACzD;AACA,SAAOA,QAAQ,CAACC,KAAT,GAAiBC,KAAjB,CAAuB,CAAvB,EAA0BC,OAA1B,CAAkC,CAAlC,EAAqCC,OAArC,CAA6C,CAA7C,EAAgDC,YAAhD,CAA6D,CAA7D,CAAP;AACD,CAHM;AAKP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,uBAAuB,GAAG,CAACC,IAAD,EAAeC,IAAf,KAAwC;AAC7E;AACA,SAAOD,IAAI,CAACN,KAAL,GAAaC,KAAb,CAAmBM,IAAI,CAACN,KAAL,EAAnB,EAAiCC,OAAjC,CAAyCK,IAAI,CAACL,OAAL,EAAzC,EAAyDC,OAAzD,CAAiE,CAAjE,EAAoEC,YAApE,CAAiF,CAAjF,CAAP;AACD,CAHM","sourcesContent":["import { Moment } from 'moment';\n\n/**\n * Returns `dateTime` as `Moment` object without hours, minutes, seconds and milliseconds.\n * It is useful for comparing dates (10.12.20 00:00:00.000 and 11.12.20 00:00:00.000).\n */\nexport const getMomentDate = (dateTime: Moment): Moment => {\n  // Note: if you chain multiple actions to construct a date, you should start from a year, then a month, then a day etc. Otherwise you may get unexpected results, like when day=31 and current month has only 30 days\n  return dateTime.clone().hours(0).minutes(0).seconds(0).milliseconds(0);\n};\n\n/**\n * Given (10.12.20) as `date` and (14:15:22.123) as `time`.\n * Returns compiled/merge date and time (10.12.20 14:15:0.000) WITHOUT seconds and milliseconds.\n */\nexport const getMomentMergedDateTime = (date: Moment, time: Moment): Moment => {\n  // Note: if you chain multiple actions to construct a date, you should start from a year, then a month, then a day etc. Otherwise you may get unexpected results, like when day=31 and current month has only 30 days\n  return date.clone().hours(time.hours()).minutes(time.minutes()).seconds(0).milliseconds(0);\n};\n"]},"metadata":{},"sourceType":"module"}