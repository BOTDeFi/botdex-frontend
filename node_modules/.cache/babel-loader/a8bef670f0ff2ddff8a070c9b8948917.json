{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Dao/DaoProposalInformation/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport OpenLink from '@/components/atoms/OpenLink';\nimport { useScannerUrl } from '@/hooks/useScannerUrl';\nimport { getIpfsUrl } from '@/services/api/snapshot.org';\nimport { addressShortener, ipfsShortener, numberWithCommas } from '@/utils/formatters';\nimport './DaoProposalInformation.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getHumanFriendlyVotingSystem = votingSystem => {\n  switch (votingSystem) {\n    default:\n      {\n        return 'Single choice voting';\n      }\n  }\n};\n\nconst getHumanFriendlyDateTime = timestamp => {\n  const date = new Date(timestamp * 1e3);\n  const dateAsString = date.toLocaleDateString();\n  const timeAsString = date.toLocaleTimeString();\n  const timeAsArray = timeAsString.split(':');\n  timeAsArray.splice(-1); // get rid of seconds\n\n  return `${dateAsString}, ${timeAsArray.join(':')}`;\n};\n\nconst additionalInformation = [// {\n//   option: 'Strategie(s)',\n// },\n{\n  option: 'Author'\n}, {\n  option: 'IPFS'\n}, {\n  option: 'Voting system'\n}, {\n  option: 'Start date'\n}, {\n  option: 'End date'\n}, {\n  option: 'Snapshot'\n}];\n\nconst DaoProposalInformation = ({\n  ipfs,\n  author,\n  start,\n  end,\n  snapshot,\n  votingSystem\n}) => {\n  _s();\n\n  const addressUrl = useScannerUrl(`address/${author}`);\n  const snapshotUrl = useScannerUrl(`block/${snapshot}`);\n  const ipfsUrl = getIpfsUrl(ipfs);\n  const additionalInformationValues = [\n  /*#__PURE__*/\n  // '',\n  _jsxDEV(OpenLink, {\n    href: addressUrl,\n    text: addressShortener(author),\n    iconClassName: \"additional-information__link-icon\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(OpenLink, {\n    href: ipfsUrl,\n    text: ipfsShortener(ipfs),\n    iconClassName: \"additional-information__link-icon\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this), getHumanFriendlyVotingSystem(votingSystem), getHumanFriendlyDateTime(start), getHumanFriendlyDateTime(end), /*#__PURE__*/_jsxDEV(OpenLink, {\n    href: snapshotUrl,\n    text: numberWithCommas(Number(snapshot)),\n    iconClassName: \"additional-information__link-icon\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this)];\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: additionalInformation.map(({\n      option\n    }, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"additional-information__content-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"additional-information__option-name text-black\",\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"additional-information__option-value\",\n          children: additionalInformationValues[index]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DaoProposalInformation, \"6rk2ObhHBx7mIXi7NxEIDlDqztM=\", false, function () {\n  return [useScannerUrl, useScannerUrl];\n});\n\n_c = DaoProposalInformation;\nexport default DaoProposalInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"DaoProposalInformation\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Dao/DaoProposalInformation/index.tsx"],"names":["React","OpenLink","useScannerUrl","getIpfsUrl","addressShortener","ipfsShortener","numberWithCommas","getHumanFriendlyVotingSystem","votingSystem","getHumanFriendlyDateTime","timestamp","date","Date","dateAsString","toLocaleDateString","timeAsString","toLocaleTimeString","timeAsArray","split","splice","join","additionalInformation","option","DaoProposalInformation","ipfs","author","start","end","snapshot","addressUrl","snapshotUrl","ipfsUrl","additionalInformationValues","Number","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport OpenLink from '@/components/atoms/OpenLink';\nimport { useScannerUrl } from '@/hooks/useScannerUrl';\nimport { getIpfsUrl } from '@/services/api/snapshot.org';\nimport { IProposal } from '@/services/api/snapshot.org/hooks';\nimport { ProposalVotingSystem } from '@/services/api/snapshot.org/types';\nimport { addressShortener, ipfsShortener, numberWithCommas } from '@/utils/formatters';\n\nimport './DaoProposalInformation.scss';\n\ninterface IDaoProposalInformationProps {\n  ipfs: IProposal['ipfs'];\n  author: IProposal['author'];\n  start: IProposal['start'];\n  end: IProposal['end'];\n  snapshot: IProposal['snapshot'];\n  votingSystem: IProposal['type'];\n}\n\nconst getHumanFriendlyVotingSystem = (votingSystem: ProposalVotingSystem) => {\n  switch (votingSystem) {\n    default: {\n      return 'Single choice voting';\n    }\n  }\n};\nconst getHumanFriendlyDateTime = (timestamp: number) => {\n  const date = new Date(timestamp * 1e3);\n  const dateAsString = date.toLocaleDateString();\n  const timeAsString = date.toLocaleTimeString();\n  const timeAsArray = timeAsString.split(':');\n  timeAsArray.splice(-1); // get rid of seconds\n  return `${dateAsString}, ${timeAsArray.join(':')}`;\n};\n\nconst additionalInformation = [\n  // {\n  //   option: 'Strategie(s)',\n  // },\n  {\n    option: 'Author',\n  },\n  {\n    option: 'IPFS',\n  },\n  {\n    option: 'Voting system',\n  },\n  {\n    option: 'Start date',\n  },\n  {\n    option: 'End date',\n  },\n  {\n    option: 'Snapshot',\n  },\n];\n\nconst DaoProposalInformation: React.FC<IDaoProposalInformationProps> = ({\n  ipfs,\n  author,\n  start,\n  end,\n  snapshot,\n  votingSystem,\n}) => {\n  const addressUrl = useScannerUrl(`address/${author}`);\n  const snapshotUrl = useScannerUrl(`block/${snapshot}`);\n  const ipfsUrl = getIpfsUrl(ipfs);\n  const additionalInformationValues = [\n    // '',\n    <OpenLink\n      href={addressUrl}\n      text={addressShortener(author)}\n      iconClassName=\"additional-information__link-icon\"\n    />,\n    <OpenLink\n      href={ipfsUrl}\n      text={ipfsShortener(ipfs)}\n      iconClassName=\"additional-information__link-icon\"\n    />,\n    getHumanFriendlyVotingSystem(votingSystem),\n    getHumanFriendlyDateTime(start),\n    getHumanFriendlyDateTime(end),\n    <OpenLink\n      href={snapshotUrl}\n      text={numberWithCommas(Number(snapshot))}\n      iconClassName=\"additional-information__link-icon\"\n    />,\n  ];\n  return (\n    <ul>\n      {additionalInformation.map(({ option }, index) => {\n        return (\n          <li key={option} className=\"additional-information__content-row\">\n            <div className=\"additional-information__option-name text-black\">{option}</div>\n            <div className=\"additional-information__option-value\">\n              {additionalInformationValues[index]}\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default DaoProposalInformation;\n"]},"metadata":{},"sourceType":"module"}