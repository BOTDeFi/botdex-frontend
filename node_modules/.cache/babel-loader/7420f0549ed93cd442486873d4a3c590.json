{"ast":null,"code":"/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\nimport normalize from 'mdurl/encode.js';\nimport { revert } from '../revert.js';\nimport { all } from '../traverse.js';\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\n\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier);\n\n  if (!def) {\n    return revert(h, node);\n  }\n  /** @type {Properties} */\n\n\n  const props = {\n    href: normalize(def.url || '')\n  };\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title;\n  }\n\n  return h(node, 'a', props, all(h, node));\n}","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js"],"names":["normalize","revert","all","linkReference","h","node","def","definition","identifier","props","href","url","title","undefined"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,SAAQC,GAAR,QAAkB,gBAAlB;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,CAAuBC,CAAvB,EAA0BC,IAA1B,EAAgC;AACrC,QAAMC,GAAG,GAAGF,CAAC,CAACG,UAAF,CAAaF,IAAI,CAACG,UAAlB,CAAZ;;AAEA,MAAI,CAACF,GAAL,EAAU;AACR,WAAOL,MAAM,CAACG,CAAD,EAAIC,IAAJ,CAAb;AACD;AAED;;;AACA,QAAMI,KAAK,GAAG;AAACC,IAAAA,IAAI,EAAEV,SAAS,CAACM,GAAG,CAACK,GAAJ,IAAW,EAAZ;AAAhB,GAAd;;AAEA,MAAIL,GAAG,CAACM,KAAJ,KAAc,IAAd,IAAsBN,GAAG,CAACM,KAAJ,KAAcC,SAAxC,EAAmD;AACjDJ,IAAAA,KAAK,CAACG,KAAN,GAAcN,GAAG,CAACM,KAAlB;AACD;;AAED,SAAOR,CAAC,CAACC,IAAD,EAAO,GAAP,EAAYI,KAAZ,EAAmBP,GAAG,CAACE,CAAD,EAAIC,IAAJ,CAAtB,CAAR;AACD","sourcesContent":["/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n"]},"metadata":{},"sourceType":"module"}