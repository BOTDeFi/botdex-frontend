{"ast":null,"code":"/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n */\nimport { combineExtensions, combineHtmlExtensions } from 'micromark-util-combine-extensions';\nimport { gfmAutolinkLiteral, gfmAutolinkLiteralHtml } from 'micromark-extension-gfm-autolink-literal';\nimport { gfmStrikethrough, gfmStrikethroughHtml } from 'micromark-extension-gfm-strikethrough';\nimport { gfmTable, gfmTableHtml } from 'micromark-extension-gfm-table';\nimport { gfmTagfilterHtml } from 'micromark-extension-gfm-tagfilter';\nimport { gfmTaskListItem, gfmTaskListItemHtml } from 'micromark-extension-gfm-task-list-item';\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\n\nexport function gfm(options) {\n  return combineExtensions([gfmAutolinkLiteral, gfmStrikethrough(options), gfmTable, gfmTaskListItem]);\n}\n/** @type {HtmlExtension} */\n\nexport const gfmHtml = combineHtmlExtensions([gfmAutolinkLiteralHtml, gfmStrikethroughHtml, gfmTableHtml, gfmTagfilterHtml, gfmTaskListItemHtml]);","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/node_modules/micromark-extension-gfm/index.js"],"names":["combineExtensions","combineHtmlExtensions","gfmAutolinkLiteral","gfmAutolinkLiteralHtml","gfmStrikethrough","gfmStrikethroughHtml","gfmTable","gfmTableHtml","gfmTagfilterHtml","gfmTaskListItem","gfmTaskListItemHtml","gfm","options","gfmHtml"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,SACEA,iBADF,EAEEC,qBAFF,QAGO,mCAHP;AAIA,SACEC,kBADF,EAEEC,sBAFF,QAGO,0CAHP;AAIA,SACEC,gBADF,EAEEC,oBAFF,QAGO,uCAHP;AAIA,SAAQC,QAAR,EAAkBC,YAAlB,QAAqC,+BAArC;AACA,SAAQC,gBAAR,QAA+B,mCAA/B;AACA,SACEC,eADF,EAEEC,mBAFF,QAGO,wCAHP;AAKA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,GAAT,CAAaC,OAAb,EAAsB;AAC3B,SAAOZ,iBAAiB,CAAC,CACvBE,kBADuB,EAEvBE,gBAAgB,CAACQ,OAAD,CAFO,EAGvBN,QAHuB,EAIvBG,eAJuB,CAAD,CAAxB;AAMD;AAED;;AACA,OAAO,MAAMI,OAAO,GAAGZ,qBAAqB,CAAC,CAC3CE,sBAD2C,EAE3CE,oBAF2C,EAG3CE,YAH2C,EAI3CC,gBAJ2C,EAK3CE,mBAL2C,CAAD,CAArC","sourcesContent":["/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/** @type {HtmlExtension} */\nexport const gfmHtml = combineHtmlExtensions([\n  gfmAutolinkLiteralHtml,\n  gfmStrikethroughHtml,\n  gfmTableHtml,\n  gfmTagfilterHtml,\n  gfmTaskListItemHtml\n])\n"]},"metadata":{},"sourceType":"module"}