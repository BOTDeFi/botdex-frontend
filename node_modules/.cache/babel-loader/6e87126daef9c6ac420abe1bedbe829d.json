{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Pools/PoolCard/AutoVaultRecentProfitSection/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useMst } from '@/store';\nimport { getRefineryVaultEarnings } from '@/store/pools/helpers';\nimport { useSelectVaultData } from '@/store/pools/hooks';\nimport { Precisions } from '@/types';\nimport { BIG_ZERO } from '@/utils/constants';\nimport TextUnstakingFee from '../TextUnstakingFee';\nimport UnstakingFeeTimer from './UnstakingFeeTimer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoVaultRecentProfitSection = observer(_c = _s(({\n  hasStakedValue,\n  stakingTokenSymbol\n}) => {\n  _s();\n\n  const {\n    user\n  } = useMst();\n  const {\n    pricePerFullShare,\n    userData: {\n      userShares,\n      refineryAtLastUserAction\n    }\n  } = useSelectVaultData();\n  const {\n    // hasAutoEarnings,\n    autoRefineryToDisplay: autoRefineryVaultRecentProfit\n  } = getRefineryVaultEarnings(user.address, refineryAtLastUserAction || BIG_ZERO, userShares || BIG_ZERO, pricePerFullShare || BIG_ZERO);\n  const autoRefineryToDisplay = autoRefineryVaultRecentProfit.toFixed(Precisions.shortToken);\n\n  if (user.address && !hasStakedValue) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-card__auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-card__auto-title text-black text-smd\",\n        children: [\"Recent \", stakingTokenSymbol, \" profit:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextUnstakingFee, {\n        className: \"p-card__auto-profit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (user.address && hasStakedValue) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-card__auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-card__auto-title box-f box-f-jc-sb text-black text-smd\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [\"Recent \", stakingTokenSymbol, \" profit:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: autoRefineryToDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-card__auto-profit box-f box-f-jc-sb\",\n        children: [/*#__PURE__*/_jsxDEV(TextUnstakingFee, {\n          className: \"p-card__auto-info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(UnstakingFeeTimer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this);\n  }\n\n  return null;\n}, \"mElMFh68MHjNKqNogAryGVuo8Qg=\", false, function () {\n  return [useMst, useSelectVaultData];\n}));\n_c2 = AutoVaultRecentProfitSection;\nexport default AutoVaultRecentProfitSection;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AutoVaultRecentProfitSection$observer\");\n$RefreshReg$(_c2, \"AutoVaultRecentProfitSection\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Pools/PoolCard/AutoVaultRecentProfitSection/index.tsx"],"names":["React","observer","useMst","getRefineryVaultEarnings","useSelectVaultData","Precisions","BIG_ZERO","TextUnstakingFee","UnstakingFeeTimer","AutoVaultRecentProfitSection","hasStakedValue","stakingTokenSymbol","user","pricePerFullShare","userData","userShares","refineryAtLastUserAction","autoRefineryToDisplay","autoRefineryVaultRecentProfit","address","toFixed","shortToken"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAASC,MAAT,QAAuB,SAAvB;AACA,SAASC,wBAAT,QAAyC,uBAAzC;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAOC,gBAAP,MAA6B,qBAA7B;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAOA,MAAMC,4BAA0E,GAAGR,QAAQ,SACzF,CAAC;AAAES,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAD,KAA4C;AAAA;;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAWV,MAAM,EAAvB;AAEA,QAAM;AACJW,IAAAA,iBADI;AAEJC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd;AAFN,MAGFZ,kBAAkB,EAHtB;AAKA,QAAM;AACJ;AACAa,IAAAA,qBAAqB,EAAEC;AAFnB,MAGFf,wBAAwB,CAC1BS,IAAI,CAACO,OADqB,EAE1BH,wBAAwB,IAAIV,QAFF,EAG1BS,UAAU,IAAIT,QAHY,EAI1BO,iBAAiB,IAAIP,QAJK,CAH5B;AAUA,QAAMW,qBAAqB,GAAGC,6BAA6B,CAACE,OAA9B,CAAsCf,UAAU,CAACgB,UAAjD,CAA9B;;AAEA,MAAIT,IAAI,CAACO,OAAL,IAAgB,CAACT,cAArB,EAAqC;AACnC,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,wCAAf;AAAA,8BACUC,kBADV;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAED,MAAIC,IAAI,CAACO,OAAL,IAAgBT,cAApB,EAAoC;AAClC,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,0DAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,gCAA0BC,kBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMM;AAAN;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,uCAAf;AAAA,gCACE,QAAC,gBAAD;AAAkB,UAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAED,SAAO,IAAP;AACD,CAjDwF;AAAA,UAEtEf,MAFsE,EAOnFE,kBAPmF;AAAA,GAA3F;MAAMK,4B;AAoDN,eAAeA,4BAAf","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport { useMst } from '@/store';\nimport { getRefineryVaultEarnings } from '@/store/pools/helpers';\nimport { useSelectVaultData } from '@/store/pools/hooks';\nimport { Precisions } from '@/types';\nimport { BIG_ZERO } from '@/utils/constants';\n\nimport TextUnstakingFee from '../TextUnstakingFee';\n\nimport UnstakingFeeTimer from './UnstakingFeeTimer';\n\ninterface IAutoVaultRecentProfitSectionProps {\n  hasStakedValue: boolean;\n  stakingTokenSymbol: string;\n}\n\nconst AutoVaultRecentProfitSection: React.FC<IAutoVaultRecentProfitSectionProps> = observer(\n  ({ hasStakedValue, stakingTokenSymbol }) => {\n    const { user } = useMst();\n\n    const {\n      pricePerFullShare,\n      userData: { userShares, refineryAtLastUserAction },\n    } = useSelectVaultData();\n\n    const {\n      // hasAutoEarnings,\n      autoRefineryToDisplay: autoRefineryVaultRecentProfit,\n    } = getRefineryVaultEarnings(\n      user.address,\n      refineryAtLastUserAction || BIG_ZERO,\n      userShares || BIG_ZERO,\n      pricePerFullShare || BIG_ZERO,\n    );\n\n    const autoRefineryToDisplay = autoRefineryVaultRecentProfit.toFixed(Precisions.shortToken);\n\n    if (user.address && !hasStakedValue) {\n      return (\n        <div className=\"p-card__auto\">\n          <div className=\"p-card__auto-title text-black text-smd\">\n            Recent {stakingTokenSymbol} profit:\n          </div>\n          <TextUnstakingFee className=\"p-card__auto-profit\" />\n        </div>\n      );\n    }\n\n    if (user.address && hasStakedValue) {\n      return (\n        <div className=\"p-card__auto\">\n          <div className=\"p-card__auto-title box-f box-f-jc-sb text-black text-smd\">\n            <div className=\"\">Recent {stakingTokenSymbol} profit:</div>\n            <div>{autoRefineryToDisplay}</div>\n          </div>\n\n          <div className=\"p-card__auto-profit box-f box-f-jc-sb\">\n            <TextUnstakingFee className=\"p-card__auto-info\" />\n            <UnstakingFeeTimer />\n          </div>\n        </div>\n      );\n    }\n\n    return null;\n  },\n);\n\nexport default AutoVaultRecentProfitSection;\n"]},"metadata":{},"sourceType":"module"}