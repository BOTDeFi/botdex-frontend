{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport usePreviousValue from './usePreviousValue';\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\n\nconst useLastUpdated = () => {\n  _s();\n\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now());\n  const previousLastUpdated = usePreviousValue(lastUpdated);\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now());\n  }, [setStateLastUpdated]);\n  return {\n    lastUpdated,\n    previousLastUpdated,\n    setLastUpdated\n  };\n};\n\n_s(useLastUpdated, \"7ucONqbOc50//kzklVTH9HxI5hs=\", false, function () {\n  return [usePreviousValue];\n});\n\nexport default useLastUpdated;","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/hooks/useLastUpdated.ts"],"names":["useCallback","useState","usePreviousValue","useLastUpdated","lastUpdated","setStateLastUpdated","Date","now","previousLastUpdated","setLastUpdated"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,WAAD,EAAcC,mBAAd,IAAqCJ,QAAQ,CAACK,IAAI,CAACC,GAAL,EAAD,CAAnD;AACA,QAAMC,mBAAmB,GAAGN,gBAAgB,CAACE,WAAD,CAA5C;AAEA,QAAMK,cAAc,GAAGT,WAAW,CAAC,MAAM;AACvCK,IAAAA,mBAAmB,CAACC,IAAI,CAACC,GAAL,EAAD,CAAnB;AACD,GAFiC,EAE/B,CAACF,mBAAD,CAF+B,CAAlC;AAIA,SAAO;AAAED,IAAAA,WAAF;AAAeI,IAAAA,mBAAf;AAAoCC,IAAAA;AAApC,GAAP;AACD,CATD;;GAAMN,c;UAEwBD,gB;;;AAS9B,eAAeC,cAAf","sourcesContent":["import { useCallback, useState } from 'react';\n\nimport usePreviousValue from './usePreviousValue';\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now());\n  const previousLastUpdated = usePreviousValue(lastUpdated);\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now());\n  }, [setStateLastUpdated]);\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated };\n};\n\nexport default useLastUpdated;\n"]},"metadata":{},"sourceType":"module"}