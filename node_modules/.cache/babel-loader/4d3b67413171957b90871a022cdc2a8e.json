{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Pools/PoolCard/CardFooter/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Button } from '@/components/atoms';\nimport FarmingModeStatus from '@/components/sections/Pools/FarmingModeStatus';\nimport { AutoFarmingPopover, ManualFarmingPopover } from '@/components/sections/Pools/Popovers';\nimport { PoolFarmingMode } from '@/types';\nimport CardDetails from './CardDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardFooter = /*#__PURE__*/React.memo(_c = _s(({\n  farmMode,\n  pool\n}) => {\n  _s();\n\n  const [isDetailsOpen, setDetailsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-card__footer p-card__box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-f-ai-c box-f-jc-sb\",\n      children: [/*#__PURE__*/_jsxDEV(FarmingModeStatus, {\n        type: farmMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), farmMode === PoolFarmingMode.auto ? /*#__PURE__*/_jsxDEV(AutoFarmingPopover, {\n        className: \"p-card__footer-info-popover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ManualFarmingPopover, {\n        className: \"p-card__footer-info-popover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        toggle: true,\n        size: \"smd\",\n        colorScheme: \"outline-purple\",\n        arrow: true,\n        isActive: isDetailsOpen,\n        onToggle: value => setDetailsOpen(value),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text text-med text-black\",\n          children: isDetailsOpen ? 'Hide' : 'Details'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n      unmountOnExit: true,\n      mountOnEnter: true,\n      in: isDetailsOpen,\n      addEndListener: (node, done) => {\n        node.addEventListener('transitionend', done, false);\n      },\n      classNames: \"show\",\n      children: /*#__PURE__*/_jsxDEV(CardDetails, {\n        pool: pool,\n        type: farmMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}, \"93MQBh6n4qfv+cl5SQP5pyG7Rl0=\"));\n_c2 = CardFooter;\nexport default CardFooter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardFooter$React.memo\");\n$RefreshReg$(_c2, \"CardFooter\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Pools/PoolCard/CardFooter/index.tsx"],"names":["React","useState","CSSTransition","Button","FarmingModeStatus","AutoFarmingPopover","ManualFarmingPopover","PoolFarmingMode","CardDetails","CardFooter","memo","farmMode","pool","isDetailsOpen","setDetailsOpen","auto","value","node","done","addEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,iBAAP,MAA8B,+CAA9B;AACA,SAASC,kBAAT,EAA6BC,oBAA7B,QAAyD,sCAAzD;AACA,SAAiCC,eAAjC,QAAwD,SAAxD;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAOA,MAAMC,UAAsC,gBAAGT,KAAK,CAACU,IAAN,SAAW,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAAA;;AAChF,QAAM,CAACC,aAAD,EAAgBC,cAAhB,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACE,QAAC,iBAAD;AAAmB,QAAA,IAAI,EAAEU;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGA,QAAQ,KAAKJ,eAAe,CAACQ,IAA7B,gBACC,QAAC,kBAAD;AAAoB,QAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,oBAAD;AAAsB,QAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,cALJ,eAOE,QAAC,MAAD;AACE,QAAA,MAAM,MADR;AAEE,QAAA,IAAI,EAAC,KAFP;AAGE,QAAA,WAAW,EAAC,gBAHd;AAIE,QAAA,KAAK,MAJP;AAKE,QAAA,QAAQ,EAAEF,aALZ;AAME,QAAA,QAAQ,EAAGG,KAAD,IAAWF,cAAc,CAACE,KAAD,CANrC;AAAA,+BAQE;AAAM,UAAA,SAAS,EAAC,0BAAhB;AAAA,oBAA4CH,aAAa,GAAG,MAAH,GAAY;AAArE;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE,QAAC,aAAD;AACE,MAAA,aAAa,MADf;AAEE,MAAA,YAAY,MAFd;AAGE,MAAA,EAAE,EAAEA,aAHN;AAIE,MAAA,cAAc,EAAE,CAACI,IAAD,EAAOC,IAAP,KAAgB;AAC9BD,QAAAA,IAAI,CAACE,gBAAL,CAAsB,eAAtB,EAAuCD,IAAvC,EAA6C,KAA7C;AACD,OANH;AAOE,MAAA,UAAU,EAAC,MAPb;AAAA,6BASE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEN,IAAnB;AAAyB,QAAA,IAAI,EAAED;AAA/B;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAnC8C,kCAA/C;MAAMF,U;AAqCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { Button } from '@/components/atoms';\nimport FarmingModeStatus from '@/components/sections/Pools/FarmingModeStatus';\nimport { AutoFarmingPopover, ManualFarmingPopover } from '@/components/sections/Pools/Popovers';\nimport { IPoolFarmingMode, Pool, PoolFarmingMode } from '@/types';\n\nimport CardDetails from './CardDetails';\n\ninterface ICardFooterProps {\n  farmMode: IPoolFarmingMode;\n  pool: Pool;\n}\n\nconst CardFooter: React.FC<ICardFooterProps> = React.memo(({ farmMode, pool }) => {\n  const [isDetailsOpen, setDetailsOpen] = useState(false);\n  return (\n    <div className=\"p-card__footer p-card__box\">\n      <div className=\"box-f-ai-c box-f-jc-sb\">\n        <FarmingModeStatus type={farmMode} />\n        {farmMode === PoolFarmingMode.auto ? (\n          <AutoFarmingPopover className=\"p-card__footer-info-popover\" />\n        ) : (\n          <ManualFarmingPopover className=\"p-card__footer-info-popover\" />\n        )}\n        <Button\n          toggle\n          size=\"smd\"\n          colorScheme=\"outline-purple\"\n          arrow\n          isActive={isDetailsOpen}\n          onToggle={(value) => setDetailsOpen(value)}\n        >\n          <span className=\"text text-med text-black\">{isDetailsOpen ? 'Hide' : 'Details'}</span>\n        </Button>\n      </div>\n      <CSSTransition\n        unmountOnExit\n        mountOnEnter\n        in={isDetailsOpen}\n        addEndListener={(node, done) => {\n          node.addEventListener('transitionend', done, false);\n        }}\n        classNames=\"show\"\n      >\n        <CardDetails pool={pool} type={farmMode} />\n      </CSSTransition>\n    </div>\n  );\n});\n\nexport default CardFooter;\n"]},"metadata":{},"sourceType":"module"}