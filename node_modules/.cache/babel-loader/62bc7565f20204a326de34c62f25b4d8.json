{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Trade/Exchange/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useWalletConnectorContext } from '@/services/MetamaskConnect';\nimport { useMst } from '@/store';\nimport { clogError } from '@/utils/logger';\nimport MetamaskService from '../../../../services/web3';\nimport { Button } from '../../../atoms';\nimport { ChooseTokens, TradeBox } from '..';\nimport './Exchange.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Exchange = observer(_c = _s(({\n  tokensData,\n  setTokensData,\n  setAllowanceFrom,\n  setAllowanceTo,\n  isAllowanceFrom,\n  handleApproveTokens,\n  isAllowanceTo,\n  maxFrom,\n  maxTo,\n  settings,\n  tokensResurves,\n  isLoadingExchange,\n  isApproving\n}) => {\n  _s();\n\n  const {\n    connect,\n    metamaskService\n  } = useWalletConnectorContext();\n  const {\n    user\n  } = useMst();\n\n  const handleSwap = async () => {\n    if (tokensData.to.token && tokensData.from.token) {\n      try {\n        var _tokensData$from$toke, _tokensData$to$token;\n\n        await metamaskService.createTransaction({\n          method: 'swapExactTokensForTokens',\n          contractName: 'ROUTER',\n          data: [MetamaskService.calcTransactionAmount(tokensData.from.amount, +((_tokensData$from$toke = tokensData.from.token) === null || _tokensData$from$toke === void 0 ? void 0 : _tokensData$from$toke.decimals)), MetamaskService.calcTransactionAmount(tokensData.to.amount, +((_tokensData$to$token = tokensData.to.token) === null || _tokensData$to$token === void 0 ? void 0 : _tokensData$to$token.decimals)), [tokensData.from.token.address, tokensData.to.token.address], user.address, settings.txDeadlineUtc]\n        });\n        delete localStorage['refinery-finance-getAmountOut'];\n        setTokensData({\n          from: {\n            token: undefined,\n            amount: NaN\n          },\n          to: {\n            token: undefined,\n            amount: NaN\n          }\n        });\n      } catch (err) {\n        clogError('swap err', err);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TradeBox, {\n      title: \"Exchange\",\n      subtitle: \"Trade tokens in an instant\",\n      settingsLink: \"/trade/swap/settings\",\n      recentTxLink: \"/trade/swap/history\",\n      children: [/*#__PURE__*/_jsxDEV(ChooseTokens, {\n        handleChangeTokens: setTokensData,\n        initialTokenData: tokensData,\n        textFrom: \"From\",\n        textTo: \"To\",\n        changeTokenFromAllowance: value => setAllowanceFrom(value),\n        changeTokenToAllowance: value => setAllowanceTo(value),\n        maxFrom: maxFrom,\n        maxTo: maxTo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), isAllowanceFrom && isAllowanceTo && tokensData.from.token && tokensData.to.token && tokensData.to.amount && tokensData.from.amount && user.address && tokensResurves !== null ? /*#__PURE__*/_jsxDEV(Button, {\n        className: \"exchange__btn\",\n        onClick: handleSwap,\n        loading: isLoadingExchange,\n        loadingText: isLoadingExchange ? 'Geting exchange' : '',\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-bold text-smd\",\n          children: \"Swap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this) : '', !user.address ? /*#__PURE__*/_jsxDEV(Button, {\n        className: \"exchange__btn\",\n        onClick: connect,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-bold text-md text-white\",\n          children: \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this) : '', tokensData.from.token && tokensData.to.token && (!tokensData.to.amount || !tokensData.from.amount) && tokensResurves !== null && user.address ? /*#__PURE__*/_jsxDEV(Button, {\n        className: \"exchange__btn\",\n        disabled: !tokensData.from.amount || !tokensData.to.amount,\n        loading: isLoadingExchange,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-bold text-smd\",\n          children: \"Enter an amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this) : '', (!isAllowanceFrom || !isAllowanceTo) && tokensData.from.token && tokensData.to.token && tokensData.to.amount && tokensData.from.amount && tokensResurves !== null && user.address ? /*#__PURE__*/_jsxDEV(Button, {\n        className: \"exchange__btn\",\n        onClick: handleApproveTokens,\n        loading: isApproving,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-bold text-smd\",\n          children: \"Approve tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this) : '', (!tokensData.from.token || !tokensData.to.token) && tokensResurves !== null && user.address ? /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        className: \"exchange__btn\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-bold text-smd\",\n          children: \"Select a Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this) : '', tokensData.from.token && tokensData.to.token && tokensResurves === null && user.address ? /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        className: \"exchange__btn\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-bold text-smd\",\n          children: \"This pair haven\\u2018t been created\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}, \"pHqBUAlUeGOKv95/tIVxAmx1p6Y=\", false, function () {\n  return [useWalletConnectorContext, useMst];\n}));\n_c2 = Exchange;\nexport default Exchange;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Exchange$observer\");\n$RefreshReg$(_c2, \"Exchange\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Trade/Exchange/index.tsx"],"names":["React","observer","useWalletConnectorContext","useMst","clogError","MetamaskService","Button","ChooseTokens","TradeBox","Exchange","tokensData","setTokensData","setAllowanceFrom","setAllowanceTo","isAllowanceFrom","handleApproveTokens","isAllowanceTo","maxFrom","maxTo","settings","tokensResurves","isLoadingExchange","isApproving","connect","metamaskService","user","handleSwap","to","token","from","createTransaction","method","contractName","data","calcTransactionAmount","amount","decimals","address","txDeadlineUtc","localStorage","undefined","NaN","err","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport { useWalletConnectorContext } from '@/services/MetamaskConnect';\nimport { useMst } from '@/store';\nimport { clogError } from '@/utils/logger';\n\nimport MetamaskService from '../../../../services/web3';\nimport { ISettings, ITokens } from '../../../../types';\nimport { Button } from '../../../atoms';\nimport { ChooseTokens, TradeBox } from '..';\n\nimport './Exchange.scss';\n\ninterface IExchange {\n  tokensData: ITokens;\n  setTokensData: (value: ITokens) => void;\n  setAllowanceFrom: (value: boolean) => void;\n  setAllowanceTo: (value: boolean) => void;\n  isAllowanceFrom: boolean;\n  isAllowanceTo: boolean;\n  handleApproveTokens: () => void;\n  settings: ISettings;\n  tokensResurves: any;\n  maxFrom: '';\n  maxTo: '';\n  isLoadingExchange: boolean;\n  isApproving: boolean;\n}\n\nconst Exchange: React.FC<IExchange> = observer(\n  ({\n    tokensData,\n    setTokensData,\n    setAllowanceFrom,\n    setAllowanceTo,\n    isAllowanceFrom,\n    handleApproveTokens,\n    isAllowanceTo,\n    maxFrom,\n    maxTo,\n    settings,\n    tokensResurves,\n    isLoadingExchange,\n    isApproving,\n  }) => {\n    const { connect, metamaskService } = useWalletConnectorContext();\n    const { user } = useMst();\n\n    const handleSwap = async () => {\n      if (tokensData.to.token && tokensData.from.token) {\n        try {\n          await metamaskService.createTransaction({\n            method: 'swapExactTokensForTokens',\n            contractName: 'ROUTER',\n            data: [\n              MetamaskService.calcTransactionAmount(\n                tokensData.from.amount,\n                +tokensData.from.token?.decimals,\n              ),\n              MetamaskService.calcTransactionAmount(\n                tokensData.to.amount,\n                +tokensData.to.token?.decimals,\n              ),\n              [tokensData.from.token.address, tokensData.to.token.address],\n              user.address,\n              settings.txDeadlineUtc,\n            ],\n          });\n          delete localStorage['refinery-finance-getAmountOut'];\n          setTokensData({\n            from: {\n              token: undefined,\n              amount: NaN,\n            },\n            to: {\n              token: undefined,\n              amount: NaN,\n            },\n          });\n        } catch (err) {\n          clogError('swap err', err);\n        }\n      }\n    };\n\n    return (\n      <>\n        <TradeBox\n          title=\"Exchange\"\n          subtitle=\"Trade tokens in an instant\"\n          settingsLink=\"/trade/swap/settings\"\n          recentTxLink=\"/trade/swap/history\"\n        >\n          <ChooseTokens\n            handleChangeTokens={setTokensData}\n            initialTokenData={tokensData}\n            textFrom=\"From\"\n            textTo=\"To\"\n            changeTokenFromAllowance={(value: boolean) => setAllowanceFrom(value)}\n            changeTokenToAllowance={(value: boolean) => setAllowanceTo(value)}\n            maxFrom={maxFrom}\n            maxTo={maxTo}\n          />\n          {isAllowanceFrom &&\n          isAllowanceTo &&\n          tokensData.from.token &&\n          tokensData.to.token &&\n          tokensData.to.amount &&\n          tokensData.from.amount &&\n          user.address &&\n          tokensResurves !== null ? (\n            <Button\n              className=\"exchange__btn\"\n              onClick={handleSwap}\n              loading={isLoadingExchange}\n              loadingText={isLoadingExchange ? 'Geting exchange' : ''}\n            >\n              <span className=\"text-white text-bold text-smd\">Swap</span>\n            </Button>\n          ) : (\n            ''\n          )}\n          {!user.address ? (\n            <Button className=\"exchange__btn\" onClick={connect}>\n              <span className=\"text-bold text-md text-white\">Connect</span>\n            </Button>\n          ) : (\n            ''\n          )}\n          {tokensData.from.token &&\n          tokensData.to.token &&\n          (!tokensData.to.amount || !tokensData.from.amount) &&\n          tokensResurves !== null &&\n          user.address ? (\n            <Button\n              className=\"exchange__btn\"\n              disabled={!tokensData.from.amount || !tokensData.to.amount}\n              loading={isLoadingExchange}\n            >\n              <span className=\"text-white text-bold text-smd\">Enter an amount</span>\n            </Button>\n          ) : (\n            ''\n          )}\n          {(!isAllowanceFrom || !isAllowanceTo) &&\n          tokensData.from.token &&\n          tokensData.to.token &&\n          tokensData.to.amount &&\n          tokensData.from.amount &&\n          tokensResurves !== null &&\n          user.address ? (\n            <Button className=\"exchange__btn\" onClick={handleApproveTokens} loading={isApproving}>\n              <span className=\"text-white text-bold text-smd\">Approve tokens</span>\n            </Button>\n          ) : (\n            ''\n          )}\n          {(!tokensData.from.token || !tokensData.to.token) &&\n          tokensResurves !== null &&\n          user.address ? (\n            <Button disabled className=\"exchange__btn\">\n              <span className=\"text-white text-bold text-smd\">Select a Tokens</span>\n            </Button>\n          ) : (\n            ''\n          )}\n          {tokensData.from.token &&\n          tokensData.to.token &&\n          tokensResurves === null &&\n          user.address ? (\n            <Button disabled className=\"exchange__btn\">\n              <span className=\"text-white text-bold text-smd\">\n                This pair haven&lsquo;t been created\n              </span>\n            </Button>\n          ) : (\n            ''\n          )}\n        </TradeBox>\n      </>\n    );\n  },\n);\n\nexport default Exchange;\n"]},"metadata":{},"sourceType":"module"}