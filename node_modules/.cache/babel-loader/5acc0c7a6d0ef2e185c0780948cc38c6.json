{"ast":null,"code":"import { not } from '../util/not';\nimport { filter } from '../operators/filter';\nimport { innerFrom } from './from';\nexport function partition(source, predicate, thisArg) {\n  return [filter(predicate, thisArg)(innerFrom(source)), filter(not(predicate, thisArg))(innerFrom(source))];\n}","map":{"version":3,"sources":["../../../../src/internal/observable/partition.ts"],"names":[],"mappings":"AAAA,SAAS,GAAT,QAAoB,aAApB;AACA,SAAS,MAAT,QAAuB,qBAAvB;AAGA,SAAS,SAAT,QAA0B,QAA1B;AAwEA,OAAM,SAAU,SAAV,CACJ,MADI,EAEJ,SAFI,EAGJ,OAHI,EAGS;AAEb,SAAO,CAAC,MAAM,CAAC,SAAD,EAAY,OAAZ,CAAN,CAA2B,SAAS,CAAC,MAAD,CAApC,CAAD,EAAgD,MAAM,CAAC,GAAG,CAAC,SAAD,EAAY,OAAZ,CAAJ,CAAN,CAAgC,SAAS,CAAC,MAAD,CAAzC,CAAhD,CAAP;AAID","sourceRoot":"","sourcesContent":["import { not } from '../util/not';\nimport { filter } from '../operators/filter';\nimport { innerFrom } from './from';\nexport function partition(source, predicate, thisArg) {\n    return [filter(predicate, thisArg)(innerFrom(source)), filter(not(predicate, thisArg))(innerFrom(source))];\n}\n//# sourceMappingURL=partition.js.map"]},"metadata":{},"sourceType":"module"}