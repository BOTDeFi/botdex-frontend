{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Pools/PoolCard/AutoVaultRecentProfitSection/UnstakingFeeTimer/index.tsx\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useState } from 'react';\nimport React from 'react';\nimport useWithdrawalFeeTimer from '@/hooks/pools/useWithdrawalTimer';\nimport { useSelectVaultData } from '@/store/pools/hooks';\nimport { BIG_ZERO } from '@/utils/constants';\nimport { durationFormatter } from '../../utils'; // const mockData = {\n//   timeLeft: 2 * 24 * 60 * 60 * 1000 + 23 * 60 * 60 * 1000 + 31 * 60 * 1000,\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UnstakingFeeTimer = () => {\n  _s();\n\n  const {\n    userData: {\n      lastDepositedTime,\n      userShares\n    },\n    fees: {\n      withdrawalFeePeriod\n    }\n  } = useSelectVaultData();\n  const {\n    secondsRemaining\n  } = useWithdrawalFeeTimer(parseInt(lastDepositedTime || '0', 10), userShares || BIG_ZERO, withdrawalFeePeriod || undefined);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-yellow text-smd text-med\",\n    children: durationFormatter((secondsRemaining || 0) * 1000)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UnstakingFeeTimer, \"5E7IEbLhU8M/OQgTQ7MohbFDg9M=\", false, function () {\n  return [useSelectVaultData, useWithdrawalFeeTimer];\n});\n\n_c = UnstakingFeeTimer;\nexport default UnstakingFeeTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnstakingFeeTimer\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Pools/PoolCard/AutoVaultRecentProfitSection/UnstakingFeeTimer/index.tsx"],"names":["React","useWithdrawalFeeTimer","useSelectVaultData","BIG_ZERO","durationFormatter","UnstakingFeeTimer","userData","lastDepositedTime","userShares","fees","withdrawalFeePeriod","secondsRemaining","parseInt","undefined"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,qBAAP,MAAkC,kCAAlC;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,SAASC,iBAAT,QAAkC,aAAlC,C,CAEA;AACA;AACA;;;;AAEA,MAAMC,iBAA2B,GAAG,MAAM;AAAA;;AACxC,QAAM;AACJC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,iBAAF;AAAqBC,MAAAA;AAArB,KADN;AAEJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAFF,MAGFR,kBAAkB,EAHtB;AAIA,QAAM;AAAES,IAAAA;AAAF,MAAuBV,qBAAqB,CAChDW,QAAQ,CAACL,iBAAiB,IAAI,GAAtB,EAA2B,EAA3B,CADwC,EAEhDC,UAAU,IAAIL,QAFkC,EAGhDO,mBAAmB,IAAIG,SAHyB,CAAlD;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA,cACGT,iBAAiB,CAAC,CAACO,gBAAgB,IAAI,CAArB,IAA0B,IAA3B;AADpB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhBD;;GAAMN,iB;UAIAH,kB,EACyBD,qB;;;KALzBI,iB;AAkBN,eAAeA,iBAAf","sourcesContent":["// import React, { useEffect, useState } from 'react';\nimport React from 'react';\n\nimport useWithdrawalFeeTimer from '@/hooks/pools/useWithdrawalTimer';\nimport { useSelectVaultData } from '@/store/pools/hooks';\nimport { BIG_ZERO } from '@/utils/constants';\n\nimport { durationFormatter } from '../../utils';\n\n// const mockData = {\n//   timeLeft: 2 * 24 * 60 * 60 * 1000 + 23 * 60 * 60 * 1000 + 31 * 60 * 1000,\n// };\n\nconst UnstakingFeeTimer: React.FC = () => {\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFeePeriod },\n  } = useSelectVaultData();\n  const { secondsRemaining } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime || '0', 10),\n    userShares || BIG_ZERO,\n    withdrawalFeePeriod || undefined,\n  );\n\n  return (\n    <div className=\"text-yellow text-smd text-med\">\n      {durationFormatter((secondsRemaining || 0) * 1000)}\n    </div>\n  );\n};\n\nexport default UnstakingFeeTimer;\n"]},"metadata":{},"sourceType":"module"}