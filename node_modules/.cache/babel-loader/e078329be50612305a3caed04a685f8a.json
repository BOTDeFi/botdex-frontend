{"ast":null,"code":"import { mergeAll } from '../operators/mergeAll';\nimport { internalFromArray } from './fromArray';\nimport { innerFrom } from './from';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nexport function merge() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var scheduler = popScheduler(args);\n  var concurrent = popNumber(args, Infinity);\n  var sources = args;\n  return !sources.length ? EMPTY : sources.length === 1 ? innerFrom(sources[0]) : mergeAll(concurrent)(internalFromArray(sources, scheduler));\n}","map":{"version":3,"sources":["../../../../src/internal/observable/merge.ts"],"names":[],"mappings":"AAEA,SAAS,QAAT,QAAyB,uBAAzB;AACA,SAAS,iBAAT,QAAkC,aAAlC;AACA,SAAS,SAAT,QAA0B,QAA1B;AACA,SAAS,KAAT,QAAsB,SAAtB;AACA,SAAS,SAAT,EAAoB,YAApB,QAAwC,cAAxC;AAgFA,OAAM,SAAU,KAAV,GAAe;AAAC,MAAA,IAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAA8D;AAA9D,IAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACpB,MAAM,SAAS,GAAG,YAAY,CAAC,IAAD,CAA9B;AACA,MAAM,UAAU,GAAG,SAAS,CAAC,IAAD,EAAO,QAAP,CAA5B;AACA,MAAM,OAAO,GAAG,IAAhB;AACA,SAAO,CAAC,OAAO,CAAC,MAAT,GAEH,KAFG,GAGH,OAAO,CAAC,MAAR,KAAmB,CAAnB,GAEA,SAAS,CAAC,OAAO,CAAC,CAAD,CAAR,CAFT,GAIA,QAAQ,CAAC,UAAD,CAAR,CAAqB,iBAAiB,CAAC,OAAD,EAAU,SAAV,CAAtC,CAPJ;AAQD","sourceRoot":"","sourcesContent":["import { mergeAll } from '../operators/mergeAll';\nimport { internalFromArray } from './fromArray';\nimport { innerFrom } from './from';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nexport function merge() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(args);\n    var concurrent = popNumber(args, Infinity);\n    var sources = args;\n    return !sources.length\n        ?\n            EMPTY\n        : sources.length === 1\n            ?\n                innerFrom(sources[0])\n            :\n                mergeAll(concurrent)(internalFromArray(sources, scheduler));\n}\n//# sourceMappingURL=merge.js.map"]},"metadata":{},"sourceType":"module"}