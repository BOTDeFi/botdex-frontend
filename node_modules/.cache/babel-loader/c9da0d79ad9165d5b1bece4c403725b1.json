{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Dao/DaoProposalVotes/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport BigNumber from 'bignumber.js/bignumber';\nimport exampleAvatarPng from '@/assets/img/REMOVE_ME-avatar.png';\nimport OpenLink from '@/components/atoms/OpenLink';\nimport { useScannerUrl } from '@/hooks/useScannerUrl';\nimport { getIpfsUrl } from '@/services/api/snapshot.org';\nimport { Precisions } from '@/types';\nimport { addressShortener, getFullDisplayBalance, numberWithCommas } from '@/utils/formatters';\nimport './DaoProposalVotes.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserAvatar = /*#__PURE__*/React.memo(_c = ({\n  url\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"votes-list__avatar\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"votes-list__avatar-image\",\n      src: url || exampleAvatarPng,\n      alt: \"avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n});\n_c2 = UserAvatar;\nconst UserName = /*#__PURE__*/React.memo(_c3 = _s(({\n  name,\n  userAddress\n}) => {\n  _s();\n\n  const userAddressUrl = useScannerUrl(`address/${userAddress}`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"votes-list__name\",\n    children: /*#__PURE__*/_jsxDEV(OpenLink, {\n      className: \"text-smd text-yellow\",\n      href: userAddressUrl,\n      text: name || addressShortener(userAddress),\n      iconClassName: \"votes-list__link-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}, \"mh7JkHHqRbYareKrEqsbwp0RTfA=\", false, function () {\n  return [useScannerUrl];\n}));\n_c4 = UserName;\n\nconst DaoProposalVotes = ({\n  votes,\n  token\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"votes-list\",\n    children: votes.map(item => {\n      const {\n        voteId,\n        choice,\n        person: {\n          address: userAddress,\n          avatar: avatarUrl,\n          name\n        },\n        votingPower\n      } = item;\n      const tokensValue = getFullDisplayBalance({\n        balance: new BigNumber(votingPower),\n        decimals: token.decimals,\n        displayDecimals: Precisions.shortToken\n      });\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"votes-list__item text-smd\",\n        children: [Boolean(avatarUrl) && /*#__PURE__*/_jsxDEV(UserAvatar, {\n          url: avatarUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(UserName, {\n          userAddress: userAddress,\n          name: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"votes-list__vote\",\n          children: choice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"votes-list__tokens\",\n          children: [/*#__PURE__*/_jsxDEV(OpenLink, {\n            className: \"votes-list__tokens-value text-smd text-yellow\",\n            iconClassName: \"votes-list__link-icon\",\n            href: getIpfsUrl(voteId),\n            text: numberWithCommas(Number(tokensValue))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"votes-list__tokens-name\",\n            children: token.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, voteId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = DaoProposalVotes;\nexport default DaoProposalVotes;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"UserAvatar$React.memo\");\n$RefreshReg$(_c2, \"UserAvatar\");\n$RefreshReg$(_c3, \"UserName$React.memo\");\n$RefreshReg$(_c4, \"UserName\");\n$RefreshReg$(_c5, \"DaoProposalVotes\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Dao/DaoProposalVotes/index.tsx"],"names":["React","BigNumber","exampleAvatarPng","OpenLink","useScannerUrl","getIpfsUrl","Precisions","addressShortener","getFullDisplayBalance","numberWithCommas","UserAvatar","memo","url","UserName","name","userAddress","userAddressUrl","DaoProposalVotes","votes","token","map","item","voteId","choice","person","address","avatar","avatarUrl","votingPower","tokensValue","balance","decimals","displayDecimals","shortToken","Boolean","Number","symbol"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BigNumber from 'bignumber.js/bignumber';\n\nimport exampleAvatarPng from '@/assets/img/REMOVE_ME-avatar.png';\nimport OpenLink from '@/components/atoms/OpenLink';\nimport { useScannerUrl } from '@/hooks/useScannerUrl';\nimport { getIpfsUrl } from '@/services/api/snapshot.org';\nimport { Precisions, Token } from '@/types';\nimport { addressShortener, getFullDisplayBalance, numberWithCommas } from '@/utils/formatters';\n\nimport './DaoProposalVotes.scss';\n\nexport interface IPerson {\n  address: string;\n  avatar?: string;\n  name?: string;\n}\n\nexport interface IVote {\n  voteId: string;\n  person: IPerson;\n  choice: string;\n  votingPower: string;\n}\n\ninterface IDaoProposalVotesProps {\n  votes: IVote[];\n  token: Token;\n}\n\nconst UserAvatar: React.FC<{ url: IPerson['avatar'] }> = React.memo(({ url }) => {\n  return (\n    <div className=\"votes-list__avatar\">\n      <img className=\"votes-list__avatar-image\" src={url || exampleAvatarPng} alt=\"avatar\" />\n    </div>\n  );\n});\n\nconst UserName: React.FC<{ name: IPerson['name']; userAddress: IPerson['address'] }> = React.memo(\n  ({ name, userAddress }) => {\n    const userAddressUrl = useScannerUrl(`address/${userAddress}`);\n    return (\n      <div className=\"votes-list__name\">\n        <OpenLink\n          className=\"text-smd text-yellow\"\n          href={userAddressUrl}\n          text={name || addressShortener(userAddress)}\n          iconClassName=\"votes-list__link-icon\"\n        />\n      </div>\n    );\n  },\n);\n\nconst DaoProposalVotes: React.FC<IDaoProposalVotesProps> = ({ votes, token }) => {\n  return (\n    <ul className=\"votes-list\">\n      {votes.map((item) => {\n        const {\n          voteId,\n          choice,\n          person: { address: userAddress, avatar: avatarUrl, name },\n          votingPower,\n        } = item;\n        const tokensValue = getFullDisplayBalance({\n          balance: new BigNumber(votingPower),\n          decimals: token.decimals,\n          displayDecimals: Precisions.shortToken,\n        });\n        return (\n          <li key={voteId} className=\"votes-list__item text-smd\">\n            {Boolean(avatarUrl) && <UserAvatar url={avatarUrl} />}\n            <UserName userAddress={userAddress} name={name} />\n            <div className=\"votes-list__vote\">{choice}</div>\n            <div className=\"votes-list__tokens\">\n              <OpenLink\n                className=\"votes-list__tokens-value text-smd text-yellow\"\n                iconClassName=\"votes-list__link-icon\"\n                href={getIpfsUrl(voteId)}\n                text={numberWithCommas(Number(tokensValue))}\n              />\n              <div className=\"votes-list__tokens-name\">{token.symbol}</div>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default DaoProposalVotes;\n"]},"metadata":{},"sourceType":"module"}