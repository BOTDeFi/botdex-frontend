{"ast":null,"code":"// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n// TODO: remove any :D\nexport function debounce(func, wait, immediate) {\n  let timeout;\n  return function debouncedFunc(...args) {\n    const context = this;\n\n    const later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/utils/debounce.ts"],"names":["debounce","func","wait","immediate","timeout","debouncedFunc","args","context","later","apply","callNow","clearTimeout","setTimeout"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,OAAO,SAASA,QAAT,CACLC,IADK,EAELC,IAFK,EAGLC,SAHK,EAIqB;AAC1B,MAAIC,OAAJ;AACA,SAAO,SAASC,aAAT,CAAuB,GAAGC,IAA1B,EAAuC;AAC5C,UAAMC,OAAO,GAAG,IAAhB;;AACA,UAAMC,KAAK,GAAG,SAASA,KAAT,GAAiB;AAC7BJ,MAAAA,OAAO,GAAG,IAAV;AACA,UAAI,CAACD,SAAL,EAAgBF,IAAI,CAACQ,KAAL,CAAWF,OAAX,EAAoBD,IAApB;AACjB,KAHD;;AAIA,UAAMI,OAAO,GAAGP,SAAS,IAAI,CAACC,OAA9B;AACAO,IAAAA,YAAY,CAACP,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAGQ,UAAU,CAACJ,KAAD,EAAQN,IAAR,CAApB;AACA,QAAIQ,OAAJ,EAAaT,IAAI,CAACQ,KAAL,CAAWF,OAAX,EAAoBD,IAApB;AACd,GAVD;AAWD","sourcesContent":["// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n// TODO: remove any :D\n\nexport function debounce(\n  func: (...props: any[]) => any,\n  wait: number,\n  immediate: boolean,\n): (...args: any[]) => void {\n  let timeout: any;\n  return function debouncedFunc(...args: any[]) {\n    const context = this as any;\n    const later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}