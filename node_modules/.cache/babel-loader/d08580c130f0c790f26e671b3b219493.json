{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Trade/ManageTokensModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // import { RadioChangeEvent } from 'antd';\n\nimport { Scrollbar } from 'react-scrollbars-custom'; // import cn from 'classnames';\n\nimport { observer } from 'mobx-react-lite'; // import LogoMiniImg from '@/assets/img/icons/logo-m.svg';\n\nimport UnknownImg from \"@/assets/img/currency/unknown.svg\";\nimport ArrowImg from \"@/assets/img/icons/arrow-btn.svg\";\nimport CrossImg from \"@/assets/img/icons/cross.svg\";\nimport OpenLinkImg from \"@/assets/img/icons/open-link.svg\";\nimport { Button, Input } from '@/components/atoms';\nimport { Modal } from '@/components/molecules';\nimport { contracts } from '@/config';\nimport { useWalletConnectorContext } from '@/services/MetamaskConnect';\nimport { useMst } from '@/store'; // import { RadioGroup, Input, Switch, Button } from '../../../atoms';\n\nimport { ImportTokensModal } from '..';\nimport './ManageTokensModal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ManageTokensModal = observer(_c = _s(({\n  isVisible,\n  handleClose,\n  handleOpen,\n  handleBack,\n  selectToken\n}) => {\n  _s();\n\n  const {\n    metamaskService\n  } = useWalletConnectorContext();\n  const {\n    tokens\n  } = useMst(); // const [acitveTab, setActiveTab] = React.useState<'lists' | 'tokens'>('lists');\n  // const [isExtendedTokensActive, setExtendedTokensActive] = React.useState<boolean>(false);\n  // const [isTopTokensActive, setTopTokensActive] = React.useState<boolean>(false);\n\n  const [unknownToken, setUnknowToken] = React.useState(undefined);\n  const [selectedToken, setSelectedToken] = React.useState();\n  const [isLoading, setLoading] = React.useState(false);\n  const [searchedValue, setSearchedValue] = React.useState(''); // const handleChangeNavbar = ({ target }: RadioChangeEvent): void => {\n  //   setActiveTab(target.value);\n  // };\n  // const handleChangeExtendedTokensSwitch = (value: boolean): void => {\n  //   handleChangeSwitch(value, isTopTokensActive);\n  //   setExtendedTokensActive(value);\n  // };\n  // const handleChangeTopTokensSwitch = (value: boolean): void => {\n  //   handleChangeSwitch(isExtendedTokensActive, value);\n  //   setTopTokensActive(value);\n  // };\n\n  const handleOpenImportTokensModal = token => {\n    handleClose();\n    setSelectedToken(token);\n  };\n\n  const handleCloseImportTokensModal = () => {\n    setSelectedToken(undefined);\n  };\n\n  const handleBackToManageTokensModal = () => {\n    handleCloseImportTokensModal();\n    handleOpen();\n  };\n\n  const handleChangeTokensInput = async ({\n    target\n  }) => {\n    setSearchedValue(target.value);\n\n    if (target.value) {\n      try {\n        setLoading(true);\n        const token = await metamaskService.getTokenInfo(target.value, contracts.ERC20.ABI);\n        setUnknowToken({ ...token,\n          logoURI: UnknownImg\n        });\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n        setUnknowToken(undefined);\n      }\n    } else {\n      setUnknowToken(undefined);\n    }\n  };\n\n  const handleDeleteImportedToken = tokenAddress => {\n    const filteredArr = tokens.imported.filter(token => token.address !== tokenAddress);\n    localStorage.importTokens = filteredArr;\n    tokens.setTokens('imported', filteredArr);\n\n    if ((unknownToken === null || unknownToken === void 0 ? void 0 : unknownToken.address) === tokenAddress) {\n      setUnknowToken(undefined);\n    }\n  };\n\n  const handleCloseModal = () => {\n    handleClose();\n    setUnknowToken(undefined);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isVisible: !!isVisible,\n      className: \"m-manage-tokens\",\n      handleCancel: handleCloseModal,\n      width: 390,\n      destroyOnClose: true,\n      closeIcon: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-manage-tokens__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-manage-tokens__title box-f-ai-c box-pointer\",\n          onClick: handleBack,\n          onKeyDown: handleBack,\n          role: \"button\",\n          tabIndex: 0,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: ArrowImg,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-black text-bold text-smd\",\n            children: \"Manage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          className: \"m-manage-tokens__input\",\n          placeholder: \"0x00\",\n          colorScheme: \"outline\",\n          inputSize: \"lg\",\n          value: searchedValue,\n          onChange: handleChangeTokensInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-smd m-manage-tokens__info\",\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 26\n        }, this) : '', !isLoading && searchedValue && !unknownToken ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-smd text-red m-manage-tokens__info\",\n          children: \"not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }, this) : '', unknownToken ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-manage-tokens__token box-f-ai-c box-f-jc-sb\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-f-ai-c\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: unknownToken.logoURI,\n              alt: unknownToken.name,\n              className: \"m-manage-tokens__token-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text m-manage-tokens__token-name\",\n                children: unknownToken.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray text-ssm\",\n                children: unknownToken.symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), tokens.imported && [...tokens.imported, ...tokens.default].find(token => token.address === unknownToken.address) ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-yellow text-med text-ssm\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            size: \"smd\",\n            onClick: () => handleOpenImportTokensModal(unknownToken),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-bold text-white text-smd\",\n              children: \"Import\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 19\n          }, this)]\n        }, unknownToken.address, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this) : '', tokens.imported.length ? /*#__PURE__*/_jsxDEV(Scrollbar, {\n          className: \"m-select-token__scroll\",\n          style: {\n            width: '100%',\n            height: tokens.imported.length > 8 ? '55vh' : `${tokens.imported.length * 55}px`\n          },\n          children: tokens.imported.map(token => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-manage-tokens__token-imported box-f-ai-c box-f-jc-sb\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box-f-ai-c\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: token.logoURI,\n                alt: token.name,\n                className: \"m-manage-tokens__token-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text m-manage-tokens__token-name\",\n                  children: token.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray text-ssm\",\n                  children: token.symbol\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box-f-ai-c\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"box-pointer m-manage-tokens__token-delete\",\n                onClick: () => handleDeleteImportedToken(token.address),\n                onKeyDown: () => handleDeleteImportedToken(token.address),\n                role: \"button\",\n                tabIndex: 0,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: CrossImg,\n                  alt: token.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/\",\n                className: \"m-manage-tokens__token-open\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: OpenLinkImg,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 21\n            }, this)]\n          }, token.address, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-med text text-black m-manage-tokens__text\",\n          children: [tokens.imported.length || 0, \" Custom Tokens\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ImportTokensModal, {\n      isVisible: !!selectedToken,\n      handleClose: handleCloseImportTokensModal,\n      handleBack: handleBackToManageTokensModal,\n      token: selectedToken,\n      handleImport: selectToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}, \"zGUQ5Nnn8qm0zLzmIwseRSu6eHo=\", false, function () {\n  return [useWalletConnectorContext, useMst];\n}));\n_c2 = ManageTokensModal;\nexport default ManageTokensModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ManageTokensModal$observer\");\n$RefreshReg$(_c2, \"ManageTokensModal\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Trade/ManageTokensModal/index.tsx"],"names":["React","Scrollbar","observer","Button","Input","Modal","contracts","useWalletConnectorContext","useMst","ImportTokensModal","ManageTokensModal","isVisible","handleClose","handleOpen","handleBack","selectToken","metamaskService","tokens","unknownToken","setUnknowToken","useState","undefined","selectedToken","setSelectedToken","isLoading","setLoading","searchedValue","setSearchedValue","handleOpenImportTokensModal","token","handleCloseImportTokensModal","handleBackToManageTokensModal","handleChangeTokensInput","target","value","getTokenInfo","ERC20","ABI","logoURI","UnknownImg","err","handleDeleteImportedToken","tokenAddress","filteredArr","imported","filter","address","localStorage","importTokens","setTokens","handleCloseModal","ArrowImg","name","symbol","default","find","length","width","height","map","CrossImg","OpenLinkImg"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,SAAT,QAA0B,yBAA1B,C,CACA;;AACA,SAASC,QAAT,QAAyB,iBAAzB,C,CAEA;;;;;;AAKA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,oBAA9B;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,yBAAT,QAA0C,4BAA1C;AACA,SAASC,MAAT,QAAuB,SAAvB,C,CACA;;AAGA,SAASC,iBAAT,QAAkC,IAAlC;AAEA,OAAO,0BAAP;;;AAWA,MAAMC,iBAA+C,GAAGR,QAAQ,SAC9D,CAAC;AAAES,EAAAA,SAAF;AAAaC,EAAAA,WAAb;AAA0BC,EAAAA,UAA1B;AAAsCC,EAAAA,UAAtC;AAAkDC,EAAAA;AAAlD,CAAD,KAAqE;AAAA;;AACnE,QAAM;AAAEC,IAAAA;AAAF,MAAsBT,yBAAyB,EAArD;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAaT,MAAM,EAAzB,CAFmE,CAInE;AACA;AACA;;AACA,QAAM,CAACU,YAAD,EAAeC,cAAf,IAAiCnB,KAAK,CAACoB,QAAN,CAAmCC,SAAnC,CAAvC;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCvB,KAAK,CAACoB,QAAN,EAA1C;AACA,QAAM,CAACI,SAAD,EAAYC,UAAZ,IAA0BzB,KAAK,CAACoB,QAAN,CAAwB,KAAxB,CAAhC;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoC3B,KAAK,CAACoB,QAAN,CAAuB,EAAvB,CAA1C,CAVmE,CAYnE;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,QAAMQ,2BAA2B,GAAIC,KAAD,IAAyB;AAC3DjB,IAAAA,WAAW;AACXW,IAAAA,gBAAgB,CAACM,KAAD,CAAhB;AACD,GAHD;;AAKA,QAAMC,4BAA4B,GAAG,MAAY;AAC/CP,IAAAA,gBAAgB,CAACF,SAAD,CAAhB;AACD,GAFD;;AAIA,QAAMU,6BAA6B,GAAG,MAAY;AAChDD,IAAAA,4BAA4B;AAC5BjB,IAAAA,UAAU;AACX,GAHD;;AAKA,QAAMmB,uBAAuB,GAAG,OAAO;AAAEC,IAAAA;AAAF,GAAP,KAA2D;AACzFN,IAAAA,gBAAgB,CAACM,MAAM,CAACC,KAAR,CAAhB;;AACA,QAAID,MAAM,CAACC,KAAX,EAAkB;AAChB,UAAI;AACFT,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAMI,KAAK,GAAG,MAAMb,eAAe,CAACmB,YAAhB,CAA6BF,MAAM,CAACC,KAApC,EAA2C5B,SAAS,CAAC8B,KAAV,CAAgBC,GAA3D,CAApB;AACAlB,QAAAA,cAAc,CAAC,EACb,GAAGU,KADU;AAEbS,UAAAA,OAAO,EAAEC;AAFI,SAAD,CAAd;AAIAd,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OARD,CAQE,OAAOe,GAAP,EAAY;AACZf,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAN,QAAAA,cAAc,CAACE,SAAD,CAAd;AACD;AACF,KAbD,MAaO;AACLF,MAAAA,cAAc,CAACE,SAAD,CAAd;AACD;AACF,GAlBD;;AAoBA,QAAMoB,yBAAyB,GAAIC,YAAD,IAAgC;AAChE,UAAMC,WAAW,GAAG1B,MAAM,CAAC2B,QAAP,CAAgBC,MAAhB,CAAwBhB,KAAD,IAAmBA,KAAK,CAACiB,OAAN,KAAkBJ,YAA5D,CAApB;AACAK,IAAAA,YAAY,CAACC,YAAb,GAA4BL,WAA5B;AAEA1B,IAAAA,MAAM,CAACgC,SAAP,CAAiB,UAAjB,EAA6BN,WAA7B;;AAEA,QAAI,CAAAzB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAE4B,OAAd,MAA0BJ,YAA9B,EAA4C;AAC1CvB,MAAAA,cAAc,CAACE,SAAD,CAAd;AACD;AACF,GATD;;AAWA,QAAM6B,gBAAgB,GAAG,MAAY;AACnCtC,IAAAA,WAAW;AACXO,IAAAA,cAAc,CAACE,SAAD,CAAd;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,SAAS,EAAE,CAAC,CAACV,SADf;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,YAAY,EAAEuC,gBAHhB;AAIE,MAAA,KAAK,EAAE,GAJT;AAKE,MAAA,cAAc,MALhB;AAME,MAAA,SAAS,MANX;AAAA,6BAQE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,+CADZ;AAEE,UAAA,OAAO,EAAEpC,UAFX;AAGE,UAAA,SAAS,EAAEA,UAHb;AAIE,UAAA,IAAI,EAAC,QAJP;AAKE,UAAA,QAAQ,EAAE,CALZ;AAAA,kCAOE;AAAK,YAAA,GAAG,EAAEqC,QAAV;AAAoB,YAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE;AAAM,YAAA,SAAS,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA+FE,QAAC,KAAD;AACE,UAAA,SAAS,EAAC,wBADZ;AAEE,UAAA,WAAW,EAAC,MAFd;AAGE,UAAA,WAAW,EAAC,SAHd;AAIE,UAAA,SAAS,EAAC,IAJZ;AAKE,UAAA,KAAK,EAAEzB,aALT;AAME,UAAA,QAAQ,EAAEM;AANZ;AAAA;AAAA;AAAA;AAAA,gBA/FF,EAuGGR,SAAS,gBAAG;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAmE,EAvG/E,EAwGG,CAACA,SAAD,IAAcE,aAAd,IAA+B,CAACR,YAAhC,gBACC;AAAK,UAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAGC,EA3GJ,EA6GGA,YAAY,gBACX;AAEE,UAAA,SAAS,EAAC,+CAFZ;AAAA,kCAIE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE;AACE,cAAA,GAAG,EAAEA,YAAY,CAACoB,OADpB;AAEE,cAAA,GAAG,EAAEpB,YAAY,CAACkC,IAFpB;AAGE,cAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,oBADF,eAME;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,kCAAf;AAAA,0BAAmDlC,YAAY,CAACkC;AAAhE;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,0BAAqClC,YAAY,CAACmC;AAAlD;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAeGpC,MAAM,CAAC2B,QAAP,IACD,CAAC,GAAG3B,MAAM,CAAC2B,QAAX,EAAqB,GAAG3B,MAAM,CAACqC,OAA/B,EAAwCC,IAAxC,CACG1B,KAAD,IAAmBA,KAAK,CAACiB,OAAN,KAAkB5B,YAAY,CAAC4B,OADpD,CADC,gBAIC;AAAM,YAAA,SAAS,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJD,gBAMC,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,KAAb;AAAmB,YAAA,OAAO,EAAE,MAAMlB,2BAA2B,CAACV,YAAD,CAA7D;AAAA,mCACE;AAAM,cAAA,SAAS,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBArBJ;AAAA,WACOA,YAAY,CAAC4B,OADpB;AAAA;AAAA;AAAA;AAAA,gBADW,GA4BX,EAzIJ,EA2IG7B,MAAM,CAAC2B,QAAP,CAAgBY,MAAhB,gBACC,QAAC,SAAD;AACE,UAAA,SAAS,EAAC,wBADZ;AAEE,UAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE,MADF;AAELC,YAAAA,MAAM,EAAEzC,MAAM,CAAC2B,QAAP,CAAgBY,MAAhB,GAAyB,CAAzB,GAA6B,MAA7B,GAAuC,GAAEvC,MAAM,CAAC2B,QAAP,CAAgBY,MAAhB,GAAyB,EAAG;AAFxE,WAFT;AAAA,oBAOGvC,MAAM,CAAC2B,QAAP,CAAgBe,GAAhB,CAAqB9B,KAAD,iBACnB;AAEE,YAAA,SAAS,EAAC,wDAFZ;AAAA,oCAIE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AACE,gBAAA,GAAG,EAAEA,KAAK,CAACS,OADb;AAEE,gBAAA,GAAG,EAAET,KAAK,CAACuB,IAFb;AAGE,gBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,sBADF,eAME;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,kCAAf;AAAA,4BAAmDvB,KAAK,CAACuB;AAAzD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,SAAS,EAAC,oBAAf;AAAA,4BAAqCvB,KAAK,CAACwB;AAA3C;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAeE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AACE,gBAAA,SAAS,EAAC,2CADZ;AAEE,gBAAA,OAAO,EAAE,MAAMZ,yBAAyB,CAACZ,KAAK,CAACiB,OAAP,CAF1C;AAGE,gBAAA,SAAS,EAAE,MAAML,yBAAyB,CAACZ,KAAK,CAACiB,OAAP,CAH5C;AAIE,gBAAA,IAAI,EAAC,QAJP;AAKE,gBAAA,QAAQ,EAAE,CALZ;AAAA,uCAOE;AAAK,kBAAA,GAAG,EAAEc,QAAV;AAAoB,kBAAA,GAAG,EAAE/B,KAAK,CAACuB;AAA/B;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE;AAAG,gBAAA,IAAI,EAAC,GAAR;AAAY,gBAAA,SAAS,EAAC,6BAAtB;AAAA,uCACE;AAAK,kBAAA,GAAG,EAAES,WAAV;AAAuB,kBAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfF;AAAA,aACOhC,KAAK,CAACiB,OADb;AAAA;AAAA;AAAA;AAAA,kBADD;AAPH;AAAA;AAAA;AAAA;AAAA,gBADD,GA0CC,EArLJ,eAuLE;AAAK,UAAA,SAAS,EAAC,gDAAf;AAAA,qBACG7B,MAAM,CAAC2B,QAAP,CAAgBY,MAAhB,IAA0B,CAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvLF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YADF,eAyME,QAAC,iBAAD;AACE,MAAA,SAAS,EAAE,CAAC,CAAClC,aADf;AAEE,MAAA,WAAW,EAAEQ,4BAFf;AAGE,MAAA,UAAU,EAAEC,6BAHd;AAIE,MAAA,KAAK,EAAET,aAJT;AAKE,MAAA,YAAY,EAAEP;AALhB;AAAA;AAAA;AAAA;AAAA,YAzMF;AAAA,kBADF;AAmND,CAhS6D;AAAA,UAEhCR,yBAFgC,EAGzCC,MAHyC;AAAA,GAAhE;MAAME,iB;AAmSN,eAAeA,iBAAf","sourcesContent":["import React from 'react';\n// import { RadioChangeEvent } from 'antd';\nimport { Scrollbar } from 'react-scrollbars-custom';\n// import cn from 'classnames';\nimport { observer } from 'mobx-react-lite';\n\n// import LogoMiniImg from '@/assets/img/icons/logo-m.svg';\nimport UnknownImg from '@/assets/img/currency/unknown.svg';\nimport ArrowImg from '@/assets/img/icons/arrow-btn.svg';\nimport CrossImg from '@/assets/img/icons/cross.svg';\nimport OpenLinkImg from '@/assets/img/icons/open-link.svg';\nimport { Button, Input } from '@/components/atoms';\nimport { Modal } from '@/components/molecules';\nimport { contracts } from '@/config';\nimport { useWalletConnectorContext } from '@/services/MetamaskConnect';\nimport { useMst } from '@/store';\n// import { RadioGroup, Input, Switch, Button } from '../../../atoms';\nimport { IToken } from '@/types';\n\nimport { ImportTokensModal } from '..';\n\nimport './ManageTokensModal.scss';\n\ninterface IManageTokensModal {\n  isVisible?: boolean;\n  handleClose: () => void;\n  handleBack: () => void;\n  handleOpen: () => void;\n  handleChangeSwitch: (extendedValue: boolean, topValue: boolean) => void;\n  selectToken: (token: IToken) => void;\n}\n\nconst ManageTokensModal: React.FC<IManageTokensModal> = observer(\n  ({ isVisible, handleClose, handleOpen, handleBack, selectToken }) => {\n    const { metamaskService } = useWalletConnectorContext();\n    const { tokens } = useMst();\n\n    // const [acitveTab, setActiveTab] = React.useState<'lists' | 'tokens'>('lists');\n    // const [isExtendedTokensActive, setExtendedTokensActive] = React.useState<boolean>(false);\n    // const [isTopTokensActive, setTopTokensActive] = React.useState<boolean>(false);\n    const [unknownToken, setUnknowToken] = React.useState<IToken | undefined>(undefined);\n    const [selectedToken, setSelectedToken] = React.useState<IToken | undefined>();\n    const [isLoading, setLoading] = React.useState<boolean>(false);\n    const [searchedValue, setSearchedValue] = React.useState<string>('');\n\n    // const handleChangeNavbar = ({ target }: RadioChangeEvent): void => {\n    //   setActiveTab(target.value);\n    // };\n\n    // const handleChangeExtendedTokensSwitch = (value: boolean): void => {\n    //   handleChangeSwitch(value, isTopTokensActive);\n    //   setExtendedTokensActive(value);\n    // };\n\n    // const handleChangeTopTokensSwitch = (value: boolean): void => {\n    //   handleChangeSwitch(isExtendedTokensActive, value);\n    //   setTopTokensActive(value);\n    // };\n\n    const handleOpenImportTokensModal = (token: IToken): void => {\n      handleClose();\n      setSelectedToken(token);\n    };\n\n    const handleCloseImportTokensModal = (): void => {\n      setSelectedToken(undefined);\n    };\n\n    const handleBackToManageTokensModal = (): void => {\n      handleCloseImportTokensModal();\n      handleOpen();\n    };\n\n    const handleChangeTokensInput = async ({ target }: React.ChangeEvent<HTMLInputElement>) => {\n      setSearchedValue(target.value);\n      if (target.value) {\n        try {\n          setLoading(true);\n          const token = await metamaskService.getTokenInfo(target.value, contracts.ERC20.ABI);\n          setUnknowToken({\n            ...token,\n            logoURI: UnknownImg,\n          });\n          setLoading(false);\n        } catch (err) {\n          setLoading(false);\n          setUnknowToken(undefined);\n        }\n      } else {\n        setUnknowToken(undefined);\n      }\n    };\n\n    const handleDeleteImportedToken = (tokenAddress: string): void => {\n      const filteredArr = tokens.imported.filter((token: IToken) => token.address !== tokenAddress);\n      localStorage.importTokens = filteredArr;\n\n      tokens.setTokens('imported', filteredArr);\n\n      if (unknownToken?.address === tokenAddress) {\n        setUnknowToken(undefined);\n      }\n    };\n\n    const handleCloseModal = (): void => {\n      handleClose();\n      setUnknowToken(undefined);\n    };\n\n    return (\n      <>\n        <Modal\n          isVisible={!!isVisible}\n          className=\"m-manage-tokens\"\n          handleCancel={handleCloseModal}\n          width={390}\n          destroyOnClose\n          closeIcon\n        >\n          <div className=\"m-manage-tokens__content\">\n            <div\n              className=\"m-manage-tokens__title box-f-ai-c box-pointer\"\n              onClick={handleBack}\n              onKeyDown={handleBack}\n              role=\"button\"\n              tabIndex={0}\n            >\n              <img src={ArrowImg} alt=\"\" />\n              <span className=\"text-black text-bold text-smd\">Manage</span>\n            </div>\n            {/* <RadioGroup\n              className=\"m-manage-tokens__radio\"\n              onChange={handleChangeNavbar}\n              buttonStyle=\"solid\"\n              defaultValue={acitveTab}\n              items={[\n                {\n                  text: 'Lists',\n                  value: 'lists',\n                },\n                {\n                  text: 'Tokens',\n                  value: 'tokens',\n                },\n              ]}\n            /> */}\n            {/* {acitveTab === 'lists' ? (\n              <>\n                <Input\n                  className=\"m-manage-tokens__input\"\n                  placeholder=\"http:// or ipfs:// or ENS name\"\n                  colorScheme=\"outline\"\n                  inputSize=\"lg\"\n                />\n                <div\n                  className={cn('m-manage-tokens__item box-f-ai-c box-f-jc-sb', {\n                    active: isExtendedTokensActive,\n                  })}\n                >\n                  <div className=\"box-f-ai-c\">\n                    <img\n                      src={LogoMiniImg}\n                      alt=\"refinery finance\"\n                      className=\"m-manage-tokens__item-logo\"\n                    />\n                    <div>\n                      <div className=\"text-med text-yellow m-manage-tokens__item-title text\">\n                        Refinery.Finance Extended\n                      </div>\n                      <div className=\"text-med text-gray text-ssm text\">\n                        {tokens.extended.length} tokens\n                      </div>\n                    </div>\n                  </div>\n                  <Switch\n                    colorScheme=\"white-purple\"\n                    switchSize=\"bg\"\n                    defaultChecked={isExtendedTokensActive}\n                    onChange={handleChangeExtendedTokensSwitch}\n                  />\n                </div>\n                <div\n                  className={cn('m-manage-tokens__item box-f-ai-c box-f-jc-sb', {\n                    active: isTopTokensActive,\n                  })}\n                >\n                  <div className=\"box-f-ai-c\">\n                    <img\n                      src={LogoMiniImg}\n                      alt=\"refinery finance\"\n                      className=\"m-manage-tokens__item-logo\"\n                    />\n                    <div>\n                      <div className=\"text-med text-yellow m-manage-tokens__item-title text\">\n                        Refinery.Finance Top 100\n                      </div>\n                      <div className=\"text-med text-gray text-ssm text\">\n                        {tokens.top.length} tokens\n                      </div>\n                    </div>\n                  </div>\n                  <Switch\n                    colorScheme=\"white-purple\"\n                    switchSize=\"bg\"\n                    defaultChecked={isTopTokensActive}\n                    onChange={handleChangeTopTokensSwitch}\n                  />\n                </div>{' '}\n              </>\n            ) : (\n              ''\n            )} */}\n            {/* {acitveTab === 'tokens' ? (\n              <> */}\n            <Input\n              className=\"m-manage-tokens__input\"\n              placeholder=\"0x00\"\n              colorScheme=\"outline\"\n              inputSize=\"lg\"\n              value={searchedValue}\n              onChange={handleChangeTokensInput}\n            />\n            {isLoading ? <div className=\"text-smd m-manage-tokens__info\">Loading</div> : ''}\n            {!isLoading && searchedValue && !unknownToken ? (\n              <div className=\"text-smd text-red m-manage-tokens__info\">not found</div>\n            ) : (\n              ''\n            )}\n            {unknownToken ? (\n              <div\n                key={unknownToken.address}\n                className=\"m-manage-tokens__token box-f-ai-c box-f-jc-sb\"\n              >\n                <div className=\"box-f-ai-c\">\n                  <img\n                    src={unknownToken.logoURI}\n                    alt={unknownToken.name}\n                    className=\"m-manage-tokens__token-img\"\n                  />\n                  <div>\n                    <div className=\"text m-manage-tokens__token-name\">{unknownToken.name}</div>\n                    <div className=\"text-gray text-ssm\">{unknownToken.symbol}</div>\n                  </div>\n                </div>\n                {tokens.imported &&\n                [...tokens.imported, ...tokens.default].find(\n                  (token: IToken) => token.address === unknownToken.address,\n                ) ? (\n                  <span className=\"text-yellow text-med text-ssm\">Active</span>\n                ) : (\n                  <Button size=\"smd\" onClick={() => handleOpenImportTokensModal(unknownToken)}>\n                    <span className=\"text-bold text-white text-smd\">Import</span>\n                  </Button>\n                )}\n              </div>\n            ) : (\n              ''\n            )}\n            {tokens.imported.length ? (\n              <Scrollbar\n                className=\"m-select-token__scroll\"\n                style={{\n                  width: '100%',\n                  height: tokens.imported.length > 8 ? '55vh' : `${tokens.imported.length * 55}px`,\n                }}\n              >\n                {tokens.imported.map((token: IToken) => (\n                  <div\n                    key={token.address}\n                    className=\"m-manage-tokens__token-imported box-f-ai-c box-f-jc-sb\"\n                  >\n                    <div className=\"box-f-ai-c\">\n                      <img\n                        src={token.logoURI}\n                        alt={token.name}\n                        className=\"m-manage-tokens__token-img\"\n                      />\n                      <div>\n                        <div className=\"text m-manage-tokens__token-name\">{token.name}</div>\n                        <div className=\"text-gray text-ssm\">{token.symbol}</div>\n                      </div>\n                    </div>\n                    <div className=\"box-f-ai-c\">\n                      <div\n                        className=\"box-pointer m-manage-tokens__token-delete\"\n                        onClick={() => handleDeleteImportedToken(token.address)}\n                        onKeyDown={() => handleDeleteImportedToken(token.address)}\n                        role=\"button\"\n                        tabIndex={0}\n                      >\n                        <img src={CrossImg} alt={token.name} />\n                      </div>\n                      <a href=\"/\" className=\"m-manage-tokens__token-open\">\n                        <img src={OpenLinkImg} alt=\"\" />\n                      </a>\n                    </div>\n                  </div>\n                ))}\n              </Scrollbar>\n            ) : (\n              ''\n            )}\n            <div className=\"text-med text text-black m-manage-tokens__text\">\n              {tokens.imported.length || 0} Custom Tokens\n            </div>\n            {/* </>\n            ) : (\n              ''\n            )} */}\n          </div>\n        </Modal>\n        <ImportTokensModal\n          isVisible={!!selectedToken}\n          handleClose={handleCloseImportTokensModal}\n          handleBack={handleBackToManageTokensModal}\n          token={selectedToken}\n          handleImport={selectToken}\n        />\n      </>\n    );\n  },\n);\n\nexport default ManageTokensModal;\n"]},"metadata":{},"sourceType":"module"}