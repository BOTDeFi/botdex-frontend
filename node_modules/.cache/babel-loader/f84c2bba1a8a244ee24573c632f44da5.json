{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Trade/SelectTokenModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Scrollbar } from 'react-scrollbars-custom';\nimport { observer } from 'mobx-react-lite';\nimport UnknownImg from \"@/assets/img/currency/unknown.svg\";\nimport { useMst } from '@/store';\nimport { Search } from '../../../atoms';\nimport { Modal } from '../../../molecules';\nimport { ManageTokensModal } from '..';\nimport './SelectTokenModal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SelectTokenModal = observer(_c = _s(({\n  isVisible,\n  handleClose,\n  handleChangeToken,\n  tokenType,\n  handleOpen\n}) => {\n  _s();\n\n  const {\n    tokens: storeTokens\n  } = useMst();\n  const [isManageModalVisible, setManageModalVisible] = React.useState(false);\n  const [tokens, setTokens] = React.useState([]);\n  const [initTokens, setInitTokens] = React.useState([]);\n\n  const handleSearch = value => {\n    if (value === '') {\n      setTokens(initTokens);\n      return;\n    }\n\n    setTokens(initTokens.filter(token => {\n      if (typeof value === 'string') {\n        return token.name.substr(0, value.length).toLowerCase() === value.toLowerCase() || token.symbol.substr(0, value.length).toLowerCase() === value.toLowerCase();\n      }\n\n      return false;\n    }));\n  };\n\n  const handleTokenClick = token => {\n    handleChangeToken(tokenType, token);\n    handleClose();\n  };\n\n  const handleCloseManageModal = () => {\n    setManageModalVisible(false);\n  };\n\n  const handleOpenManageModal = () => {\n    setTokens(initTokens);\n    handleClose();\n    setManageModalVisible(true);\n  };\n\n  const handleBackToSelectTokenModal = () => {\n    handleCloseManageModal();\n    handleOpen();\n  };\n\n  const onCloseModal = () => {\n    setInitTokens([...storeTokens.imported, ...storeTokens.default]);\n    setTokens([...storeTokens.imported, ...storeTokens.default]);\n    handleClose();\n  };\n\n  const handleChangeSwitch = (extendedValue, topValue) => {\n    let arr = storeTokens.default;\n\n    if (extendedValue && topValue) {\n      arr = [...storeTokens.extended, ...storeTokens.top];\n    }\n\n    if (extendedValue) {\n      arr = storeTokens.extended;\n    }\n\n    if (topValue) {\n      arr = [...storeTokens.default, ...storeTokens.top];\n    }\n\n    setInitTokens([...storeTokens.imported, ...arr]);\n    setTokens([...storeTokens.imported, ...arr]);\n  };\n\n  React.useEffect(() => {\n    setInitTokens([...storeTokens.imported, ...storeTokens.default]);\n    setTokens([...storeTokens.imported, ...storeTokens.default]);\n  }, [storeTokens.default, storeTokens.default.length, storeTokens.imported, storeTokens.imported.length]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isVisible: !!isVisible,\n      className: \"m-select-token\",\n      handleCancel: onCloseModal,\n      width: 300,\n      destroyOnClose: true,\n      closeIcon: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-select-token__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-select-token__title text-white text-bold text-smd\",\n          children: \"Select a token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-select-token__search\",\n          children: /*#__PURE__*/_jsxDEV(Search, {\n            placeholder: \"Search\",\n            realtime: true,\n            onChange: handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), tokens.length ? /*#__PURE__*/_jsxDEV(Scrollbar, {\n          className: \"m-select-token__scroll\",\n          style: {\n            width: '100%',\n            height: tokens.length > 5 ? '55vh' : `${tokens.length * 65}px`\n          },\n          children: [...tokens].map(token => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-select-token__item box-f-ai-c\",\n            onClick: () => handleTokenClick(token),\n            onKeyDown: () => handleTokenClick(token),\n            role: \"button\",\n            tabIndex: -2,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              onError: e => {\n                e.target.src = UnknownImg;\n              },\n              src: token.logoURI,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: token.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-ssm text-gray\",\n                children: token.symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this)]\n          }, token.address, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text\",\n          children: \"Not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-select-token__manage text-white text-center box-pointer\",\n          onClick: handleOpenManageModal,\n          onKeyDown: handleOpenManageModal,\n          role: \"button\",\n          tabIndex: 0,\n          children: \"Manage Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ManageTokensModal, {\n      isVisible: isManageModalVisible,\n      handleClose: handleCloseManageModal,\n      handleBack: handleBackToSelectTokenModal,\n      handleOpen: handleOpenManageModal,\n      handleChangeSwitch: handleChangeSwitch,\n      selectToken: handleTokenClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}, \"grkjrqXgXNfgG1HBtEDGKeNO6mA=\", false, function () {\n  return [useMst];\n}));\n_c2 = SelectTokenModal;\nexport default SelectTokenModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SelectTokenModal$observer\");\n$RefreshReg$(_c2, \"SelectTokenModal\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Trade/SelectTokenModal/index.tsx"],"names":["React","Scrollbar","observer","useMst","Search","Modal","ManageTokensModal","SelectTokenModal","isVisible","handleClose","handleChangeToken","tokenType","handleOpen","tokens","storeTokens","isManageModalVisible","setManageModalVisible","useState","setTokens","initTokens","setInitTokens","handleSearch","value","filter","token","name","substr","length","toLowerCase","symbol","handleTokenClick","handleCloseManageModal","handleOpenManageModal","handleBackToSelectTokenModal","onCloseModal","imported","default","handleChangeSwitch","extendedValue","topValue","arr","extended","top","useEffect","width","height","map","e","target","src","UnknownImg","logoURI","address"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Scrollbar } from 'react-scrollbars-custom';\nimport { observer } from 'mobx-react-lite';\n\nimport UnknownImg from '@/assets/img/currency/unknown.svg';\nimport { useMst } from '@/store';\nimport { IToken } from '@/types';\n\nimport { Search } from '../../../atoms';\nimport { Modal } from '../../../molecules';\nimport { ManageTokensModal } from '..';\n\nimport './SelectTokenModal.scss';\n\ninterface ISelectTokenModal {\n  isVisible?: boolean;\n  handleClose: () => void;\n  handleOpen: () => void;\n  handleChangeToken: (type: 'from' | 'to', token: IToken) => void;\n  tokenType: 'from' | 'to';\n}\n\nconst SelectTokenModal: React.FC<ISelectTokenModal> = observer(\n  ({ isVisible, handleClose, handleChangeToken, tokenType, handleOpen }) => {\n    const { tokens: storeTokens } = useMst();\n\n    const [isManageModalVisible, setManageModalVisible] = React.useState<boolean>(false);\n\n    const [tokens, setTokens] = React.useState<IToken[] | []>([]);\n    const [initTokens, setInitTokens] = React.useState<IToken[] | []>([]);\n\n    const handleSearch = (value: number | string): void => {\n      if (value === '') {\n        setTokens(initTokens);\n        return;\n      }\n      setTokens(\n        initTokens.filter((token) => {\n          if (typeof value === 'string') {\n            return (\n              token.name.substr(0, value.length).toLowerCase() === value.toLowerCase() ||\n              token.symbol.substr(0, value.length).toLowerCase() === value.toLowerCase()\n            );\n          }\n          return false;\n        }),\n      );\n    };\n\n    const handleTokenClick = (token: IToken) => {\n      handleChangeToken(tokenType, token);\n      handleClose();\n    };\n\n    const handleCloseManageModal = (): void => {\n      setManageModalVisible(false);\n    };\n\n    const handleOpenManageModal = (): void => {\n      setTokens(initTokens);\n      handleClose();\n      setManageModalVisible(true);\n    };\n\n    const handleBackToSelectTokenModal = (): void => {\n      handleCloseManageModal();\n      handleOpen();\n    };\n\n    const onCloseModal = () => {\n      setInitTokens([...storeTokens.imported, ...storeTokens.default]);\n      setTokens([...storeTokens.imported, ...storeTokens.default]);\n      handleClose();\n    };\n\n    const handleChangeSwitch = (extendedValue: boolean, topValue: boolean): void => {\n      let arr: IToken[] = storeTokens.default;\n      if (extendedValue && topValue) {\n        arr = [...storeTokens.extended, ...storeTokens.top];\n      }\n      if (extendedValue) {\n        arr = storeTokens.extended;\n      }\n      if (topValue) {\n        arr = [...storeTokens.default, ...storeTokens.top];\n      }\n\n      setInitTokens([...storeTokens.imported, ...arr]);\n\n      setTokens([...storeTokens.imported, ...arr]);\n    };\n\n    React.useEffect(() => {\n      setInitTokens([...storeTokens.imported, ...storeTokens.default]);\n      setTokens([...storeTokens.imported, ...storeTokens.default]);\n    }, [\n      storeTokens.default,\n      storeTokens.default.length,\n      storeTokens.imported,\n      storeTokens.imported.length,\n    ]);\n\n    return (\n      <>\n        <Modal\n          isVisible={!!isVisible}\n          className=\"m-select-token\"\n          handleCancel={onCloseModal}\n          width={300}\n          destroyOnClose\n          closeIcon\n        >\n          <div className=\"m-select-token__content\">\n            <div className=\"m-select-token__title text-white text-bold text-smd\">\n              Select a token\n            </div>\n\n            <div className=\"m-select-token__search\">\n              <Search placeholder=\"Search\" realtime onChange={handleSearch} />\n            </div>\n\n            {tokens.length ? (\n              <Scrollbar\n                className=\"m-select-token__scroll\"\n                style={{\n                  width: '100%',\n                  height: tokens.length > 5 ? '55vh' : `${tokens.length * 65}px`,\n                }}\n              >\n                {[...tokens].map((token: IToken) => (\n                  <div\n                    className=\"m-select-token__item box-f-ai-c\"\n                    key={token.address}\n                    onClick={() => handleTokenClick(token)}\n                    onKeyDown={() => handleTokenClick(token)}\n                    role=\"button\"\n                    tabIndex={-2}\n                  >\n                    <img\n                      onError={(e: any) => {\n                        e.target.src = UnknownImg;\n                      }}\n                      src={token.logoURI}\n                      alt=\"\"\n                    />\n                    <div>\n                      <div>{token.name}</div>\n                      <div className=\"text-ssm text-gray\">{token.symbol}</div>\n                    </div>\n                  </div>\n                ))}\n              </Scrollbar>\n            ) : (\n              <span className=\"text\">Not found</span>\n            )}\n            <div\n              className=\"m-select-token__manage text-white text-center box-pointer\"\n              onClick={handleOpenManageModal}\n              onKeyDown={handleOpenManageModal}\n              role=\"button\"\n              tabIndex={0}\n            >\n              Manage Tokens\n            </div>\n          </div>\n        </Modal>\n        <ManageTokensModal\n          isVisible={isManageModalVisible}\n          handleClose={handleCloseManageModal}\n          handleBack={handleBackToSelectTokenModal}\n          handleOpen={handleOpenManageModal}\n          handleChangeSwitch={handleChangeSwitch}\n          selectToken={handleTokenClick}\n        />\n      </>\n    );\n  },\n);\n\nexport default SelectTokenModal;\n"]},"metadata":{},"sourceType":"module"}