{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/organisms/EasyMde/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport EasyMde from 'easymde';\nimport 'easymde/dist/easymde.min.css';\nimport './EasyMde.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * @see https://github.com/Ionaru/easy-markdown-editor#configuration\n */\nconst defaultOptions = {\n  autofocus: false,\n  status: false,\n  hideIcons: ['guide', 'fullscreen', 'preview', 'side-by-side'],\n  spellChecker: false,\n  styleSelectedText: false\n};\n\nconst SimpleMde = ({\n  options,\n  onTextChange,\n  ...props\n}) => {\n  _s();\n\n  const ref = useRef(null);\n  const onTextChangeHandler = useRef(onTextChange);\n  useEffect(() => {\n    const elementOption = ref.current ? {\n      element: ref.current\n    } : {};\n    let simpleMde = new EasyMde({ ...defaultOptions,\n      ...options,\n      ...elementOption\n    });\n    simpleMde.codemirror.on('change', () => {\n      if (simpleMde) {\n        onTextChangeHandler.current(simpleMde.value());\n      }\n    });\n    return () => {\n      if (simpleMde) {\n        simpleMde.toTextArea();\n        simpleMde = null;\n      }\n    };\n  }, [options, onTextChangeHandler, ref]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: ref,\n      readOnly: true,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleMde, \"w7o6VMtSTwTphBVgQjTKodHKvrE=\");\n\n_c = SimpleMde;\nexport default SimpleMde;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleMde\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/organisms/EasyMde/index.tsx"],"names":["React","useEffect","useRef","EasyMde","defaultOptions","autofocus","status","hideIcons","spellChecker","styleSelectedText","SimpleMde","options","onTextChange","props","ref","onTextChangeHandler","elementOption","current","element","simpleMde","codemirror","on","value","toTextArea"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwCC,SAAxC,EAAmDC,MAAnD,QAAiE,OAAjE;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAO,8BAAP;AACA,OAAO,gBAAP;;;AAOA;AACA;AACA;AACA,MAAMC,cAA+B,GAAG;AACtCC,EAAAA,SAAS,EAAE,KAD2B;AAEtCC,EAAAA,MAAM,EAAE,KAF8B;AAGtCC,EAAAA,SAAS,EAAE,CAAC,OAAD,EAAU,YAAV,EAAwB,SAAxB,EAAmC,cAAnC,CAH2B;AAItCC,EAAAA,YAAY,EAAE,KAJwB;AAKtCC,EAAAA,iBAAiB,EAAE;AALmB,CAAxC;;AAQA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyB,KAAGC;AAA5B,CAAD,KAAyC;AAAA;;AACnF,QAAMC,GAAG,GAAGZ,MAAM,CAAsB,IAAtB,CAAlB;AACA,QAAMa,mBAAmB,GAAGb,MAAM,CAACU,YAAD,CAAlC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,aAAa,GAAGF,GAAG,CAACG,OAAJ,GAClB;AACEC,MAAAA,OAAO,EAAEJ,GAAG,CAACG;AADf,KADkB,GAIlB,EAJJ;AAKA,QAAIE,SAAyB,GAAG,IAAIhB,OAAJ,CAAY,EAC1C,GAAGC,cADuC;AAE1C,SAAGO,OAFuC;AAG1C,SAAGK;AAHuC,KAAZ,CAAhC;AAMAG,IAAAA,SAAS,CAACC,UAAV,CAAqBC,EAArB,CAAwB,QAAxB,EAAkC,MAAM;AACtC,UAAIF,SAAJ,EAAe;AACbJ,QAAAA,mBAAmB,CAACE,OAApB,CAA4BE,SAAS,CAACG,KAAV,EAA5B;AACD;AACF,KAJD;AAMA,WAAO,MAAM;AACX,UAAIH,SAAJ,EAAe;AACbA,QAAAA,SAAS,CAACI,UAAV;AACAJ,QAAAA,SAAS,GAAG,IAAZ;AACD;AACF,KALD;AAMD,GAxBQ,EAwBN,CAACR,OAAD,EAAUI,mBAAV,EAA+BD,GAA/B,CAxBM,CAAT;AA0BA,sBACE;AAAA,2BACE;AAAU,MAAA,GAAG,EAAEA,GAAf;AAAoB,MAAA,QAAQ,MAA5B;AAAA,SAAiCD;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnCD;;GAAMH,S;;KAAAA,S;AAqCN,eAAeA,SAAf","sourcesContent":["import React, { TextareaHTMLAttributes, useEffect, useRef } from 'react';\nimport EasyMde from 'easymde';\n\nimport 'easymde/dist/easymde.min.css';\nimport './EasyMde.scss';\n\ninterface SimpleMdeProps extends Omit<TextareaHTMLAttributes<HTMLTextAreaElement>, 'onChange'> {\n  options?: EasyMde.Options;\n  onTextChange: (value: string) => void;\n}\n\n/**\n * @see https://github.com/Ionaru/easy-markdown-editor#configuration\n */\nconst defaultOptions: EasyMde.Options = {\n  autofocus: false,\n  status: false,\n  hideIcons: ['guide', 'fullscreen', 'preview', 'side-by-side'],\n  spellChecker: false,\n  styleSelectedText: false,\n};\n\nconst SimpleMde: React.FC<SimpleMdeProps> = ({ options, onTextChange, ...props }) => {\n  const ref = useRef<HTMLTextAreaElement>(null);\n  const onTextChangeHandler = useRef(onTextChange);\n\n  useEffect(() => {\n    const elementOption = ref.current\n      ? {\n          element: ref.current,\n        }\n      : {};\n    let simpleMde: EasyMde | null = new EasyMde({\n      ...defaultOptions,\n      ...options,\n      ...elementOption,\n    });\n\n    simpleMde.codemirror.on('change', () => {\n      if (simpleMde) {\n        onTextChangeHandler.current(simpleMde.value());\n      }\n    });\n\n    return () => {\n      if (simpleMde) {\n        simpleMde.toTextArea();\n        simpleMde = null;\n      }\n    };\n  }, [options, onTextChangeHandler, ref]);\n\n  return (\n    <div>\n      <textarea ref={ref} readOnly {...props} />\n    </div>\n  );\n};\n\nexport default SimpleMde;\n"]},"metadata":{},"sourceType":"module"}