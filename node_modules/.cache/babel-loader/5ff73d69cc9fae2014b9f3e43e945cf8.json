{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport { getContract } from '@/services/web3/contractHelpers';\nimport { useCallWithGasPrice } from '@/services/web3/hooks';\nexport const useHarvestFarm = pid => {\n  _s();\n\n  const {\n    callWithGasPrice\n  } = useCallWithGasPrice();\n  const masterRefinerContract = getContract('MASTER_REFINER');\n  const harvestFarm = useCallback(async () => {\n    if (pid === 0) {\n      const tx = await callWithGasPrice({\n        contract: masterRefinerContract,\n        methodName: 'leaveStaking',\n        methodArgs: ['0'],\n        options: {\n          gas: 300000\n        }\n      });\n      return tx.status;\n    }\n\n    const tx = await callWithGasPrice({\n      contract: masterRefinerContract,\n      methodName: 'deposit',\n      methodArgs: [pid, '0'],\n      options: {\n        gas: 300000\n      }\n    });\n    return tx.status;\n  }, [callWithGasPrice, masterRefinerContract, pid]);\n  return {\n    harvestFarm\n  };\n};\n\n_s(useHarvestFarm, \"AsxLa6y8FTQF//1vJ4ou7jM84Jo=\", false, function () {\n  return [useCallWithGasPrice];\n});","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/hooks/farms/useHarvestFarm.ts"],"names":["useCallback","getContract","useCallWithGasPrice","useHarvestFarm","pid","callWithGasPrice","masterRefinerContract","harvestFarm","tx","contract","methodName","methodArgs","options","gas","status"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,OAAO,MAAMC,cAAc,GAAIC,GAAD,IAAiB;AAAA;;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAuBH,mBAAmB,EAAhD;AACA,QAAMI,qBAAqB,GAAGL,WAAW,CAAC,gBAAD,CAAzC;AAEA,QAAMM,WAAW,GAAGP,WAAW,CAAC,YAAY;AAC1C,QAAII,GAAG,KAAK,CAAZ,EAAe;AACb,YAAMI,EAAE,GAAG,MAAMH,gBAAgB,CAAC;AAChCI,QAAAA,QAAQ,EAAEH,qBADsB;AAEhCI,QAAAA,UAAU,EAAE,cAFoB;AAGhCC,QAAAA,UAAU,EAAE,CAAC,GAAD,CAHoB;AAIhCC,QAAAA,OAAO,EAAE;AACPC,UAAAA,GAAG,EAAE;AADE;AAJuB,OAAD,CAAjC;AAQA,aAAOL,EAAE,CAACM,MAAV;AACD;;AAED,UAAMN,EAAE,GAAG,MAAMH,gBAAgB,CAAC;AAChCI,MAAAA,QAAQ,EAAEH,qBADsB;AAEhCI,MAAAA,UAAU,EAAE,SAFoB;AAGhCC,MAAAA,UAAU,EAAE,CAACP,GAAD,EAAM,GAAN,CAHoB;AAIhCQ,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAE;AADE;AAJuB,KAAD,CAAjC;AAQA,WAAOL,EAAE,CAACM,MAAV;AACD,GAtB8B,EAsB5B,CAACT,gBAAD,EAAmBC,qBAAnB,EAA0CF,GAA1C,CAtB4B,CAA/B;AAwBA,SAAO;AAAEG,IAAAA;AAAF,GAAP;AACD,CA7BM;;GAAMJ,c;UACkBD,mB","sourcesContent":["import { useCallback } from 'react';\n\nimport { getContract } from '@/services/web3/contractHelpers';\nimport { useCallWithGasPrice } from '@/services/web3/hooks';\n\nexport const useHarvestFarm = (pid: number) => {\n  const { callWithGasPrice } = useCallWithGasPrice();\n  const masterRefinerContract = getContract('MASTER_REFINER');\n\n  const harvestFarm = useCallback(async () => {\n    if (pid === 0) {\n      const tx = await callWithGasPrice({\n        contract: masterRefinerContract,\n        methodName: 'leaveStaking',\n        methodArgs: ['0'],\n        options: {\n          gas: 300000,\n        },\n      });\n      return tx.status;\n    }\n\n    const tx = await callWithGasPrice({\n      contract: masterRefinerContract,\n      methodName: 'deposit',\n      methodArgs: [pid, '0'],\n      options: {\n        gas: 300000,\n      },\n    });\n    return tx.status;\n  }, [callWithGasPrice, masterRefinerContract, pid]);\n\n  return { harvestFarm };\n};\n"]},"metadata":{},"sourceType":"module"}