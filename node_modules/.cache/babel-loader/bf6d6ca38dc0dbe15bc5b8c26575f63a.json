{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/DaoProposal/TitleForm/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form as FormAntd } from 'antd';\nimport classNames from 'classnames';\nimport Input from '@/components/atoms/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TitleForm = ({\n  form,\n  validateForms,\n  fieldClassName,\n  inputClassName\n}) => {\n  _s();\n\n  const [titleValue, setTitleValue] = useState('');\n\n  const titleInputHandler = ({\n    target\n  }) => {\n    setTitleValue(target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormAntd, {\n    name: \"titleForm\",\n    form: form,\n    layout: \"vertical\",\n    onValuesChange: validateForms,\n    children: /*#__PURE__*/_jsxDEV(FormAntd.Item, {\n      className: classNames(fieldClassName),\n      name: \"title\",\n      rules: [{\n        required: true,\n        whitespace: true,\n        message: 'Title must not be empty'\n      }, {\n        max: 100,\n        // snapshot.js backend allows up to 256 chars\n        message: 'Character limit exceeded'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        className: classNames(inputClassName),\n        colorScheme: \"outline\",\n        inputSize: \"lg\",\n        value: titleValue,\n        onChange: titleInputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TitleForm, \"g++1G18JnKe6SgsWHqbGS1GGLSU=\");\n\n_c = TitleForm;\nexport default TitleForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TitleForm\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/DaoProposal/TitleForm/index.tsx"],"names":["React","useState","Form","FormAntd","classNames","Input","TitleForm","form","validateForms","fieldClassName","inputClassName","titleValue","setTitleValue","titleInputHandler","target","value","required","whitespace","message","max"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAI,IAAIC,QAAjB,QAA+C,MAA/C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;;;AASA,MAAMC,SAAoC,GAAG,CAAC;AAC5CC,EAAAA,IAD4C;AAE5CC,EAAAA,aAF4C;AAG5CC,EAAAA,cAH4C;AAI5CC,EAAAA;AAJ4C,CAAD,KAKvC;AAAA;;AACJ,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMY,iBAAiB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAqD;AAC7EF,IAAAA,aAAa,CAACE,MAAM,CAACC,KAAR,CAAb;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AAAU,IAAA,IAAI,EAAC,WAAf;AAA2B,IAAA,IAAI,EAAER,IAAjC;AAAuC,IAAA,MAAM,EAAC,UAA9C;AAAyD,IAAA,cAAc,EAAEC,aAAzE;AAAA,2BACE,QAAC,QAAD,CAAU,IAAV;AACE,MAAA,SAAS,EAAEJ,UAAU,CAACK,cAAD,CADvB;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAE,CACL;AACEO,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,OAAO,EAAE;AAHX,OADK,EAML;AACEC,QAAAA,GAAG,EAAE,GADP;AACY;AACVD,QAAAA,OAAO,EAAE;AAFX,OANK,CAHT;AAAA,6BAeE,QAAC,KAAD;AACE,QAAA,SAAS,EAAEd,UAAU,CAACM,cAAD,CADvB;AAEE,QAAA,WAAW,EAAC,SAFd;AAGE,QAAA,SAAS,EAAC,IAHZ;AAIE,QAAA,KAAK,EAAEC,UAJT;AAKE,QAAA,QAAQ,EAAEE;AALZ;AAAA;AAAA;AAAA;AAAA;AAfF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAtCD;;GAAMP,S;;KAAAA,S;AAwCN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Form as FormAntd, FormInstance } from 'antd';\nimport classNames from 'classnames';\n\nimport Input from '@/components/atoms/Input';\n\ninterface ITitleFormProps {\n  form: FormInstance;\n  validateForms: () => void;\n  fieldClassName?: string;\n  inputClassName?: string;\n}\n\nconst TitleForm: React.FC<ITitleFormProps> = ({\n  form,\n  validateForms,\n  fieldClassName,\n  inputClassName,\n}) => {\n  const [titleValue, setTitleValue] = useState('');\n  const titleInputHandler = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleValue(target.value);\n  };\n\n  return (\n    <FormAntd name=\"titleForm\" form={form} layout=\"vertical\" onValuesChange={validateForms}>\n      <FormAntd.Item\n        className={classNames(fieldClassName)}\n        name=\"title\"\n        rules={[\n          {\n            required: true,\n            whitespace: true,\n            message: 'Title must not be empty',\n          },\n          {\n            max: 100, // snapshot.js backend allows up to 256 chars\n            message: 'Character limit exceeded',\n          },\n        ]}\n      >\n        <Input\n          className={classNames(inputClassName)}\n          colorScheme=\"outline\"\n          inputSize=\"lg\"\n          value={titleValue}\n          onChange={titleInputHandler}\n        />\n      </FormAntd.Item>\n    </FormAntd>\n  );\n};\n\nexport default TitleForm;\n"]},"metadata":{},"sourceType":"module"}