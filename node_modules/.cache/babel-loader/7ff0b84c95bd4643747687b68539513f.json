{"ast":null,"code":"import isFunction from './isFunction.js';\nimport toPath from './_toPath.js'; // Traverses the children of `obj` along `path`. If a child is a function, it\n// is invoked with its parent as context. Returns the value of the final\n// child, or `fallback` if any child is undefined.\n\nexport default function result(obj, path, fallback) {\n  path = toPath(path);\n  var length = path.length;\n\n  if (!length) {\n    return isFunction(fallback) ? fallback.call(obj) : fallback;\n  }\n\n  for (var i = 0; i < length; i++) {\n    var prop = obj == null ? void 0 : obj[path[i]];\n\n    if (prop === void 0) {\n      prop = fallback;\n      i = length; // Ensure we don't continue iterating.\n    }\n\n    obj = isFunction(prop) ? prop.call(obj) : prop;\n  }\n\n  return obj;\n}","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/node_modules/underscore/modules/result.js"],"names":["isFunction","toPath","result","obj","path","fallback","length","call","i","prop"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;AACA;AACA;;AACA,eAAe,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqC;AAClDD,EAAAA,IAAI,GAAGH,MAAM,CAACG,IAAD,CAAb;AACA,MAAIE,MAAM,GAAGF,IAAI,CAACE,MAAlB;;AACA,MAAI,CAACA,MAAL,EAAa;AACX,WAAON,UAAU,CAACK,QAAD,CAAV,GAAuBA,QAAQ,CAACE,IAAT,CAAcJ,GAAd,CAAvB,GAA4CE,QAAnD;AACD;;AACD,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;AAC/B,QAAIC,IAAI,GAAGN,GAAG,IAAI,IAAP,GAAc,KAAK,CAAnB,GAAuBA,GAAG,CAACC,IAAI,CAACI,CAAD,CAAL,CAArC;;AACA,QAAIC,IAAI,KAAK,KAAK,CAAlB,EAAqB;AACnBA,MAAAA,IAAI,GAAGJ,QAAP;AACAG,MAAAA,CAAC,GAAGF,MAAJ,CAFmB,CAEP;AACb;;AACDH,IAAAA,GAAG,GAAGH,UAAU,CAACS,IAAD,CAAV,GAAmBA,IAAI,CAACF,IAAL,CAAUJ,GAAV,CAAnB,GAAoCM,IAA1C;AACD;;AACD,SAAON,GAAP;AACD","sourcesContent":["import isFunction from './isFunction.js';\nimport toPath from './_toPath.js';\n\n// Traverses the children of `obj` along `path`. If a child is a function, it\n// is invoked with its parent as context. Returns the value of the final\n// child, or `fallback` if any child is undefined.\nexport default function result(obj, path, fallback) {\n  path = toPath(path);\n  var length = path.length;\n  if (!length) {\n    return isFunction(fallback) ? fallback.call(obj) : fallback;\n  }\n  for (var i = 0; i < length; i++) {\n    var prop = obj == null ? void 0 : obj[path[i]];\n    if (prop === void 0) {\n      prop = fallback;\n      i = length; // Ensure we don't continue iterating.\n    }\n    obj = isFunction(prop) ? prop.call(obj) : prop;\n  }\n  return obj;\n}\n"]},"metadata":{},"sourceType":"module"}