{"ast":null,"code":"import { Schema } from './schema.js';\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\n/**\n * @param {import('./schema.js').Schema[]} definitions\n * @param {string} space\n * @returns {import('./schema.js').Schema}\n */\n\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  var property = {};\n  /** @type {Normal} */\n\n  var normal = {};\n  var index = -1;\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property);\n    Object.assign(normal, definitions[index].normal);\n  }\n\n  return new Schema(property, normal, space);\n}","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/node_modules/property-information/lib/util/merge.js"],"names":["Schema","merge","definitions","space","property","normal","index","length","Object","assign"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,aAArB;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,KAAT,CAAeC,WAAf,EAA4BC,KAA5B,EAAmC;AACxC;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA;;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,KAAK,GAAG,CAAC,CAAb;;AAEA,SAAO,EAAEA,KAAF,GAAUJ,WAAW,CAACK,MAA7B,EAAqC;AACnCC,IAAAA,MAAM,CAACC,MAAP,CAAcL,QAAd,EAAwBF,WAAW,CAACI,KAAD,CAAX,CAAmBF,QAA3C;AACAI,IAAAA,MAAM,CAACC,MAAP,CAAcJ,MAAd,EAAsBH,WAAW,CAACI,KAAD,CAAX,CAAmBD,MAAzC;AACD;;AAED,SAAO,IAAIL,MAAJ,CAAWI,QAAX,EAAqBC,MAArB,EAA6BF,KAA7B,CAAP;AACD","sourcesContent":["import {Schema} from './schema.js'\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\n/**\n * @param {import('./schema.js').Schema[]} definitions\n * @param {string} space\n * @returns {import('./schema.js').Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  var property = {}\n  /** @type {Normal} */\n  var normal = {}\n  var index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n"]},"metadata":{},"sourceType":"module"}