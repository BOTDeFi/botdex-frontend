{"ast":null,"code":"import { Web3Provider } from '@ethersproject/providers';\nimport snapshot from '@snapshot-labs/snapshot.js';\nimport Web3 from 'web3';\nimport { IPFS_GATEWAY, SNAPSHOT_BASE_URL } from '@/config/constants/dao';\nimport { metamaskService } from '@/services/MetamaskConnect';\nexport const snapshotClient = new snapshot.Client(SNAPSHOT_BASE_URL); // typecast to prevent page from \"white unusable UI\"\n// (just show some data, can be \"Error: Provider not set or invalid\" when Metamask isn't connected)\n\nexport const provider = metamaskService.web3Provider.currentProvider ? new Web3Provider(metamaskService.web3Provider.currentProvider) : new Web3();\nexport const getIpfsUrl = ipfsHash => {\n  return `${IPFS_GATEWAY}/${ipfsHash}`;\n};\nexport const useSnapshotService = () => {\n  return {\n    snapshotClient,\n    provider\n  };\n};","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/services/api/snapshot.org/index.ts"],"names":["Web3Provider","snapshot","Web3","IPFS_GATEWAY","SNAPSHOT_BASE_URL","metamaskService","snapshotClient","Client","provider","web3Provider","currentProvider","getIpfsUrl","ipfsHash","useSnapshotService"],"mappings":"AAAA,SAASA,YAAT,QAA6B,0BAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,YAAT,EAAuBC,iBAAvB,QAAgD,wBAAhD;AACA,SAASC,eAAT,QAAgC,4BAAhC;AAEA,OAAO,MAAMC,cAAc,GAAG,IAAIL,QAAQ,CAACM,MAAb,CAAoBH,iBAApB,CAAvB,C,CACP;AACA;;AACA,OAAO,MAAMI,QAAQ,GAAIH,eAAe,CAACI,YAAhB,CAA6BC,eAA7B,GACrB,IAAIV,YAAJ,CAAiBK,eAAe,CAACI,YAAhB,CAA6BC,eAA9C,CADqB,GAErB,IAAIR,IAAJ,EAFG;AAIP,OAAO,MAAMS,UAAU,GAAIC,QAAD,IAA8B;AACtD,SAAQ,GAAET,YAAa,IAAGS,QAAS,EAAnC;AACD,CAFM;AAIP,OAAO,MAAMC,kBAAkB,GAAG,MAG7B;AACH,SAAO;AAAEP,IAAAA,cAAF;AAAkBE,IAAAA;AAAlB,GAAP;AACD,CALM","sourcesContent":["import { Web3Provider } from '@ethersproject/providers';\nimport snapshot from '@snapshot-labs/snapshot.js';\nimport Web3 from 'web3';\n\nimport { IPFS_GATEWAY, SNAPSHOT_BASE_URL } from '@/config/constants/dao';\nimport { metamaskService } from '@/services/MetamaskConnect';\n\nexport const snapshotClient = new snapshot.Client(SNAPSHOT_BASE_URL);\n// typecast to prevent page from \"white unusable UI\"\n// (just show some data, can be \"Error: Provider not set or invalid\" when Metamask isn't connected)\nexport const provider = (metamaskService.web3Provider.currentProvider\n  ? new Web3Provider(metamaskService.web3Provider.currentProvider as any)\n  : new Web3()) as any;\n\nexport const getIpfsUrl = (ipfsHash: string): string => {\n  return `${IPFS_GATEWAY}/${ipfsHash}`;\n};\n\nexport const useSnapshotService = (): {\n  snapshotClient: typeof snapshotClient;\n  provider: typeof provider;\n} => {\n  return { snapshotClient, provider };\n};\n"]},"metadata":{},"sourceType":"module"}