{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Pools/PoolCard/EarnedSection/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Skeleton } from '@/components/atoms';\nimport { useRefineryUsdPrice } from '@/hooks/useTokenUsdPrice';\nimport { useMst } from '@/store';\nimport { Precisions } from '@/types';\nimport { getFullDisplayBalance } from '@/utils/formatters';\nimport CollectButton from '../../CollectButton';\nimport { useNonAutoVaultEarnings } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EarnedSection = observer(_c = _s(({\n  pool,\n  farmMode\n}) => {\n  _s();\n\n  const {\n    user,\n    modals\n  } = useMst();\n  const {\n    id: poolId,\n    earningToken,\n    isFinished\n  } = pool;\n  const {\n    nonAutoVaultEarnings,\n    nonAutoVaultEarningsAsString\n  } = useNonAutoVaultEarnings(pool);\n  const {\n    tokenUsdPrice: refineryUsdPrice\n  } = useRefineryUsdPrice();\n\n  const collectHandler = () => {\n    modals.poolsCollect.open({\n      poolId,\n      farmMode,\n      earningTokenSymbol: earningToken.symbol,\n      earnings: nonAutoVaultEarningsAsString,\n      earningTokenDecimals: Number(earningToken.decimals),\n      fullBalance: getFullDisplayBalance({\n        balance: nonAutoVaultEarnings,\n        decimals: earningToken.decimals\n      }).toString()\n    });\n  };\n\n  const nonAutoVaultEarningsToDisplay = useMemo(() => getFullDisplayBalance({\n    balance: nonAutoVaultEarnings,\n    decimals: earningToken.decimals,\n    displayDecimals: Precisions.shortToken\n  }), [nonAutoVaultEarnings, earningToken.decimals]);\n  const convertedNonAutoVaultEarnings = useMemo(() => {\n    return nonAutoVaultEarnings.times(refineryUsdPrice);\n  }, [nonAutoVaultEarnings, refineryUsdPrice]);\n  const convertedNonAutoVaultEarningsToDisplay = useMemo(() => getFullDisplayBalance({\n    balance: convertedNonAutoVaultEarnings,\n    decimals: earningToken.decimals,\n    displayDecimals: Precisions.fiat\n  }), [convertedNonAutoVaultEarnings, earningToken.decimals]);\n\n  if (isFinished && nonAutoVaultEarnings.eq(0)) {\n    return null;\n  }\n\n  const isNonAutoVaultEarningsLoading = nonAutoVaultEarnings.isNaN();\n  const hasConnectedWallet = Boolean(user.address);\n\n  if (hasConnectedWallet) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-card__earned box-f box-f-jc-sb\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-smd text-black\",\n          children: [earningToken.symbol, \" Earned\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-card__earned-profit-value text-blue-d text-smd\",\n          children: isNonAutoVaultEarningsLoading ? /*#__PURE__*/_jsxDEV(Skeleton.Input, {\n            style: {\n              width: 60\n            },\n            size: \"small\",\n            active: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this) : nonAutoVaultEarningsToDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray text-smd\",\n          children: [\"~\", isNonAutoVaultEarningsLoading ? /*#__PURE__*/_jsxDEV(Skeleton.Input, {\n            style: {\n              width: 40\n            },\n            size: \"small\",\n            active: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this) : convertedNonAutoVaultEarningsToDisplay, \"USD\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), !isFinished && /*#__PURE__*/_jsxDEV(CollectButton, {\n        farmMode: farmMode,\n        value: nonAutoVaultEarnings.toNumber(),\n        collectHandler: collectHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n  return null;\n}, \"oI0Ft7+PM/Ohm6wEp9wUCak6VDA=\", false, function () {\n  return [useMst, useNonAutoVaultEarnings, useRefineryUsdPrice];\n}));\n_c2 = EarnedSection;\nexport default EarnedSection;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EarnedSection$observer\");\n$RefreshReg$(_c2, \"EarnedSection\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Pools/PoolCard/EarnedSection/index.tsx"],"names":["React","useMemo","observer","Skeleton","useRefineryUsdPrice","useMst","Precisions","getFullDisplayBalance","CollectButton","useNonAutoVaultEarnings","EarnedSection","pool","farmMode","user","modals","id","poolId","earningToken","isFinished","nonAutoVaultEarnings","nonAutoVaultEarningsAsString","tokenUsdPrice","refineryUsdPrice","collectHandler","poolsCollect","open","earningTokenSymbol","symbol","earnings","earningTokenDecimals","Number","decimals","fullBalance","balance","toString","nonAutoVaultEarningsToDisplay","displayDecimals","shortToken","convertedNonAutoVaultEarnings","times","convertedNonAutoVaultEarningsToDisplay","fiat","eq","isNonAutoVaultEarningsLoading","isNaN","hasConnectedWallet","Boolean","address","width","toNumber"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport { Skeleton } from '@/components/atoms';\nimport { useRefineryUsdPrice } from '@/hooks/useTokenUsdPrice';\nimport { useMst } from '@/store';\nimport { IPoolFarmingMode, Pool, Precisions } from '@/types';\nimport { getFullDisplayBalance } from '@/utils/formatters';\n\nimport CollectButton from '../../CollectButton';\nimport { useNonAutoVaultEarnings } from '../utils';\n\ninterface IEarnedSectionProps {\n  className?: string;\n  farmMode: IPoolFarmingMode;\n  pool: Pool;\n}\n\nconst EarnedSection: React.FC<IEarnedSectionProps> = observer(({ pool, farmMode }) => {\n  const { user, modals } = useMst();\n\n  const { id: poolId, earningToken, isFinished } = pool;\n  const { nonAutoVaultEarnings, nonAutoVaultEarningsAsString } = useNonAutoVaultEarnings(pool);\n  const { tokenUsdPrice: refineryUsdPrice } = useRefineryUsdPrice();\n\n  const collectHandler = () => {\n    modals.poolsCollect.open({\n      poolId,\n      farmMode,\n      earningTokenSymbol: earningToken.symbol,\n      earnings: nonAutoVaultEarningsAsString,\n      earningTokenDecimals: Number(earningToken.decimals),\n      fullBalance: getFullDisplayBalance({\n        balance: nonAutoVaultEarnings,\n        decimals: earningToken.decimals,\n      }).toString(),\n    });\n  };\n\n  const nonAutoVaultEarningsToDisplay = useMemo(\n    () =>\n      getFullDisplayBalance({\n        balance: nonAutoVaultEarnings,\n        decimals: earningToken.decimals,\n        displayDecimals: Precisions.shortToken,\n      }),\n    [nonAutoVaultEarnings, earningToken.decimals],\n  );\n\n  const convertedNonAutoVaultEarnings = useMemo(() => {\n    return nonAutoVaultEarnings.times(refineryUsdPrice);\n  }, [nonAutoVaultEarnings, refineryUsdPrice]);\n\n  const convertedNonAutoVaultEarningsToDisplay = useMemo(\n    () =>\n      getFullDisplayBalance({\n        balance: convertedNonAutoVaultEarnings,\n        decimals: earningToken.decimals,\n        displayDecimals: Precisions.fiat,\n      }),\n    [convertedNonAutoVaultEarnings, earningToken.decimals],\n  );\n\n  if (isFinished && nonAutoVaultEarnings.eq(0)) {\n    return null;\n  }\n\n  const isNonAutoVaultEarningsLoading = nonAutoVaultEarnings.isNaN();\n\n  const hasConnectedWallet = Boolean(user.address);\n\n  if (hasConnectedWallet) {\n    return (\n      <div className=\"p-card__earned box-f box-f-jc-sb\">\n        <div>\n          <div className=\"text-smd text-black\">{earningToken.symbol} Earned</div>\n          <div className=\"p-card__earned-profit-value text-blue-d text-smd\">\n            {isNonAutoVaultEarningsLoading ? (\n              <Skeleton.Input style={{ width: 60 }} size=\"small\" active />\n            ) : (\n              nonAutoVaultEarningsToDisplay\n            )}\n          </div>\n          <div className=\"text-gray text-smd\">\n            ~\n            {isNonAutoVaultEarningsLoading ? (\n              <Skeleton.Input style={{ width: 40 }} size=\"small\" active />\n            ) : (\n              convertedNonAutoVaultEarningsToDisplay\n            )}\n            USD\n          </div>\n        </div>\n        {!isFinished && (\n          <CollectButton\n            farmMode={farmMode}\n            value={nonAutoVaultEarnings.toNumber()}\n            collectHandler={collectHandler}\n          />\n        )}\n      </div>\n    );\n  }\n\n  return null;\n});\n\nexport default EarnedSection;\n"]},"metadata":{},"sourceType":"module"}