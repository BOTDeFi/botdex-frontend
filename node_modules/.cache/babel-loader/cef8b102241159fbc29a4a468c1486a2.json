{"ast":null,"code":"import { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\nexport function animationFrames(timestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\n\nfunction animationFramesFactory(timestampProvider) {\n  var schedule = animationFrameProvider.schedule;\n  return new Observable(function (subscriber) {\n    var subscription = new Subscription();\n    var provider = timestampProvider || performanceTimestampProvider;\n    var start = provider.now();\n\n    var run = function (timestamp) {\n      var now = provider.now();\n      subscriber.next({\n        timestamp: timestampProvider ? now : timestamp,\n        elapsed: now - start\n      });\n\n      if (!subscriber.closed) {\n        subscription.add(schedule(run));\n      }\n    };\n\n    subscription.add(schedule(run));\n    return subscription;\n  });\n}\n\nvar DEFAULT_ANIMATION_FRAMES = animationFramesFactory();","map":{"version":3,"sources":["../../../../../src/internal/observable/dom/animationFrames.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,kBAA3B;AACA,SAAS,YAAT,QAA6B,oBAA7B;AAEA,SAAS,4BAAT,QAA6C,8CAA7C;AACA,SAAS,sBAAT,QAAuC,wCAAvC;AA0EA,OAAM,SAAU,eAAV,CAA0B,iBAA1B,EAA+D;AACnE,SAAO,iBAAiB,GAAG,sBAAsB,CAAC,iBAAD,CAAzB,GAA+C,wBAAvE;AACD;;AAMD,SAAS,sBAAT,CAAgC,iBAAhC,EAAqE;AAC3D,MAAA,QAAQ,GAAK,sBAAsB,CAA3B,QAAR;AACR,SAAO,IAAI,UAAJ,CAAuD,UAAA,UAAA,EAAU;AACtE,QAAM,YAAY,GAAG,IAAI,YAAJ,EAArB;AAIA,QAAM,QAAQ,GAAG,iBAAiB,IAAI,4BAAtC;AAKA,QAAM,KAAK,GAAG,QAAQ,CAAC,GAAT,EAAd;;AACA,QAAM,GAAG,GAAG,UAAC,SAAD,EAAwC;AAQlD,UAAM,GAAG,GAAG,QAAQ,CAAC,GAAT,EAAZ;AACA,MAAA,UAAU,CAAC,IAAX,CAAgB;AACd,QAAA,SAAS,EAAE,iBAAiB,GAAG,GAAH,GAAS,SADvB;AAEd,QAAA,OAAO,EAAE,GAAG,GAAG;AAFD,OAAhB;;AAIA,UAAI,CAAC,UAAU,CAAC,MAAhB,EAAwB;AACtB,QAAA,YAAY,CAAC,GAAb,CAAiB,QAAQ,CAAC,GAAD,CAAzB;AACD;AACF,KAhBD;;AAiBA,IAAA,YAAY,CAAC,GAAb,CAAiB,QAAQ,CAAC,GAAD,CAAzB;AACA,WAAO,YAAP;AACD,GA9BM,CAAP;AA+BD;;AAMD,IAAM,wBAAwB,GAAG,sBAAsB,EAAvD","sourceRoot":"","sourcesContent":["import { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\nexport function animationFrames(timestampProvider) {\n    return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\nfunction animationFramesFactory(timestampProvider) {\n    var schedule = animationFrameProvider.schedule;\n    return new Observable(function (subscriber) {\n        var subscription = new Subscription();\n        var provider = timestampProvider || performanceTimestampProvider;\n        var start = provider.now();\n        var run = function (timestamp) {\n            var now = provider.now();\n            subscriber.next({\n                timestamp: timestampProvider ? now : timestamp,\n                elapsed: now - start\n            });\n            if (!subscriber.closed) {\n                subscription.add(schedule(run));\n            }\n        };\n        subscription.add(schedule(run));\n        return subscription;\n    });\n}\nvar DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n//# sourceMappingURL=animationFrames.js.map"]},"metadata":{},"sourceType":"module"}