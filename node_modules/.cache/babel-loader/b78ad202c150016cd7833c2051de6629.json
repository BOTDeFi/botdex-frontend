{"ast":null,"code":"import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { defer } from './defer';\nvar DEFAULT_CONFIG = {\n  connector: function () {\n    return new Subject();\n  },\n  resetOnDisconnect: true\n};\nexport function connectable(source, config) {\n  if (config === void 0) {\n    config = DEFAULT_CONFIG;\n  }\n\n  var connection = null;\n  var connector = config.connector,\n      _a = config.resetOnDisconnect,\n      resetOnDisconnect = _a === void 0 ? true : _a;\n  var subject = connector();\n  var result = new Observable(function (subscriber) {\n    return subject.subscribe(subscriber);\n  });\n\n  result.connect = function () {\n    if (!connection || connection.closed) {\n      connection = defer(function () {\n        return source;\n      }).subscribe(subject);\n\n      if (resetOnDisconnect) {\n        connection.add(function () {\n          return subject = connector();\n        });\n      }\n    }\n\n    return connection;\n  };\n\n  return result;\n}","map":{"version":3,"sources":["../../../../src/internal/observable/connectable.ts"],"names":[],"mappings":"AACA,SAAS,OAAT,QAAwB,YAAxB;AAEA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,KAAT,QAAsB,SAAtB;AAoCA,IAAM,cAAc,GAA+B;AACjD,EAAA,SAAS,EAAE,YAAA;AAAM,WAAA,IAAA,OAAA,EAAA;AAAsB,GADU;AAEjD,EAAA,iBAAiB,EAAE;AAF8B,CAAnD;AAaA,OAAM,SAAU,WAAV,CAAyB,MAAzB,EAAqD,MAArD,EAAkG;AAA7C,MAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,cAAA;AAA6C;;AAEtG,MAAI,UAAU,GAAwB,IAAtC;AACQ,MAAA,SAAS,GAA+B,MAAM,CAArC,SAAT;AAAA,MAAW,EAAA,GAA6B,MAAM,CAAX,iBAAnC;AAAA,MAAW,iBAAiB,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,EAAnC;AACR,MAAI,OAAO,GAAG,SAAS,EAAvB;AAEA,MAAM,MAAM,GAAQ,IAAI,UAAJ,CAAkB,UAAC,UAAD,EAAW;AAC/C,WAAO,OAAO,CAAC,SAAR,CAAkB,UAAlB,CAAP;AACD,GAFmB,CAApB;;AAOA,EAAA,MAAM,CAAC,OAAP,GAAiB,YAAA;AACf,QAAI,CAAC,UAAD,IAAe,UAAU,CAAC,MAA9B,EAAsC;AACpC,MAAA,UAAU,GAAG,KAAK,CAAC,YAAA;AAAM,eAAA,MAAA;AAAM,OAAb,CAAL,CAAoB,SAApB,CAA8B,OAA9B,CAAb;;AACA,UAAI,iBAAJ,EAAuB;AACrB,QAAA,UAAU,CAAC,GAAX,CAAe,YAAA;AAAM,iBAAC,OAAO,GAAG,SAAX,EAAA;AAAuB,SAA5C;AACD;AACF;;AACD,WAAO,UAAP;AACD,GARD;;AAUA,SAAO,MAAP;AACD","sourceRoot":"","sourcesContent":["import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { defer } from './defer';\nvar DEFAULT_CONFIG = {\n    connector: function () { return new Subject(); },\n    resetOnDisconnect: true,\n};\nexport function connectable(source, config) {\n    if (config === void 0) { config = DEFAULT_CONFIG; }\n    var connection = null;\n    var connector = config.connector, _a = config.resetOnDisconnect, resetOnDisconnect = _a === void 0 ? true : _a;\n    var subject = connector();\n    var result = new Observable(function (subscriber) {\n        return subject.subscribe(subscriber);\n    });\n    result.connect = function () {\n        if (!connection || connection.closed) {\n            connection = defer(function () { return source; }).subscribe(subject);\n            if (resetOnDisconnect) {\n                connection.add(function () { return (subject = connector()); });\n            }\n        }\n        return connection;\n    };\n    return result;\n}\n//# sourceMappingURL=connectable.js.map"]},"metadata":{},"sourceType":"module"}