{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/atoms/Input/index.tsx\";\nimport React from 'react';\nimport { Input as AntdInput } from 'antd';\nimport cn from 'classnames';\nimport 'antd/lib/input/style/css';\nimport './Input.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = /*#__PURE__*/React.memo(_c2 = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  const {\n    colorScheme = 'transparent',\n    inputSize = 'sm',\n    className,\n    ...therProps\n  } = props;\n  return /*#__PURE__*/_jsxDEV(AntdInput, {\n    className: cn('input', `${colorScheme ? `input-${colorScheme}` : ''}`, `${inputSize ? `input-${inputSize}` : ''}`, className),\n    ref: ref,\n    ...therProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n}));\n_c3 = Input;\nexport default Input;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Input$React.memo$React.forwardRef\");\n$RefreshReg$(_c2, \"Input$React.memo\");\n$RefreshReg$(_c3, \"Input\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/atoms/Input/index.tsx"],"names":["React","Input","AntdInput","cn","memo","forwardRef","props","ref","colorScheme","inputSize","className","therProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,MAAnC;AAEA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAO,0BAAP;AAEA,OAAO,cAAP;;AAQA,MAAMF,KAA8C,gBAAGD,KAAK,CAACI,IAAN,oBACrDJ,KAAK,CAACK,UAAN,MAAoC,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAClD,QAAM;AAAEC,IAAAA,WAAW,GAAG,aAAhB;AAA+BC,IAAAA,SAAS,GAAG,IAA3C;AAAiDC,IAAAA,SAAjD;AAA4D,OAAGC;AAA/D,MAA6EL,KAAnF;AACA,sBACE,QAAC,SAAD;AACE,IAAA,SAAS,EAAEH,EAAE,CACX,OADW,EAEV,GAAEK,WAAW,GAAI,SAAQA,WAAY,EAAxB,GAA4B,EAAG,EAFlC,EAGV,GAAEC,SAAS,GAAI,SAAQA,SAAU,EAAtB,GAA0B,EAAG,EAH9B,EAIXC,SAJW,CADf;AAOE,IAAA,GAAG,EAAEH,GAPP;AAAA,OAQMI;AARN;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAdD,CADqD,CAAvD;MAAMV,K;AAkBN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { Input as AntdInput } from 'antd';\nimport { InputProps } from 'antd/lib/input';\nimport cn from 'classnames';\n\nimport 'antd/lib/input/style/css';\n\nimport './Input.scss';\n\ninterface IInput extends InputProps {\n  colorScheme?: 'transparent' | 'outline';\n  inputSize?: 'sm' | 'md' | 'lg';\n  ref?: React.ForwardedRef<AntdInput>;\n}\n\nconst Input: React.ForwardRefExoticComponent<IInput> = React.memo(\n  React.forwardRef<AntdInput, IInput>((props, ref) => {\n    const { colorScheme = 'transparent', inputSize = 'sm', className, ...therProps } = props;\n    return (\n      <AntdInput\n        className={cn(\n          'input',\n          `${colorScheme ? `input-${colorScheme}` : ''}`,\n          `${inputSize ? `input-${inputSize}` : ''}`,\n          className,\n        )}\n        ref={ref}\n        {...therProps}\n      />\n    );\n  }),\n);\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}