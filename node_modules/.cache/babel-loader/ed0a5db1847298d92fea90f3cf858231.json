{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/molecules/RoiModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // import BigNumber from 'bignumber.js/bignumber';\n\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react-lite';\nimport ArrowCircleImg from \"@/assets/img/icons/arrow-circle.svg\"; // import OpenLinkImg from '@/assets/img/icons/open-link.svg';\n\nimport ExchangeImg from \"@/assets/img/icons/trade.svg\";\nimport { Button, InputNumber, RadioGroup, Switch } from '@/components/atoms';\nimport { useMst } from '@/store';\nimport { CalculatorMode, DEFAULT_PRINCIPAL_AS_TOKEN, DEFAULT_PRINCIPAL_AS_USD, EditingCurrency } from '@/store/Models/Modals/RoiModal'; // import { getBalanceAmount } from '@/utils/formatBalance';\n// import { feeFormatter, numberWithCommas } from '@/utils';\n// import { getApy, getRoi } from '@/utils/compoundApy';\n\nimport Modal from '../Modal';\nimport './RoiModal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Duration;\n\n(function (Duration) {\n  Duration[\"day\"] = \"1D\";\n  Duration[\"week\"] = \"7D\";\n  Duration[\"twoWeeks\"] = \"14D\";\n  Duration[\"month\"] = \"30D\";\n  Duration[\"year\"] = \"1Y\";\n  Duration[\"fiveYears\"] = \"5Y\";\n})(Duration || (Duration = {}));\n\nconst principalAmountOptions = ['100', '1000', 'My Balance']; // values as indexes to retrieve stakingDuration from array (like [1, 7, 30, 365, 1825]) as O(1)\n\nconst stakedForOptions = [Duration.day, Duration.week, Duration.month, Duration.year, Duration.fiveYears].map((period, index) => ({\n  text: period,\n  value: index\n}));\nconst compoundingEveryOptions = [Duration.day, Duration.week, Duration.twoWeeks, Duration.month].map((period, index) => ({\n  text: period,\n  value: index\n}));\nconst FIAT = 'USD';\nconst RoiModal = observer(_c = _s(() => {\n  _s();\n\n  const {\n    modals\n  } = useMst();\n  const modal = modals.roi;\n  const {\n    options,\n    state\n  } = modal; // const [compounding, setIsCompounding] = useState(true);\n  // const [stakingDurationIndex, setStakingDuration] = useState(3); // value as index associated with stakedOptions\n\n  const {\n    principalAsToken,\n    principalAsUSD,\n    roiUSD,\n    roiTokens,\n    roiPercentage\n  } = state.data;\n  const {\n    editingCurrency,\n    mode: calculatorMode,\n    compounding\n  } = state.controls;\n  const {\n    toggleEditingCurrency,\n    toggleCompounding,\n    setCalculatorMode,\n    setPrincipalFromTokenValue,\n    setPrincipalFromUSDValue,\n    setStakingDuration,\n    setTargetRoi,\n    setCompoundingFrequency\n  } = state;\n  if (!options) return null;\n  const {\n    stakingTokenSymbol,\n    // stakingTokenBalance,\n    // stakingTokenPrice,\n    earningTokenSymbol,\n    // earningTokenPrice,\n    autoCompoundFrequency\n  } = options; // direct exactly the same as CalculatorMode.ROI_BASED_ON_PRINCIPAL (first input)\n\n  const setDirectCalculatorMode = () => setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL);\n\n  const setIndirectCalculatorMode = () => setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI);\n\n  const handleClose = () => {\n    modals.roi.close();\n  }; // TODO: /trade/swap page must apply for outputCurrency (or other) as a param\n  // const apyModalLink = stakingToken.address\n  //   ? `/trade/swap?outputCurrency=${getAddress(stakingToken.address)}`\n  //   : '/trade/swap';\n\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isVisible: modals.roi.isOpen,\n    className: \"m-roi\",\n    width: 360,\n    handleCancel: handleClose,\n    closeIcon: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-roi__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-roi__title text-md text-black\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-upper\",\n          children: \"Roi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), \" Calculator\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-roi__row m-roi__staked-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-roi__row-title text-black text-bold text-upper\",\n          children: [stakingTokenSymbol, \" Staked\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-roi__staked-row-inputs-container\",\n          children: [editingCurrency === EditingCurrency.TOKEN && /*#__PURE__*/_jsxDEV(InputNumber, {\n            className: \"m-roi__staked-row-input\",\n            value: principalAsToken,\n            placeholder: DEFAULT_PRINCIPAL_AS_TOKEN,\n            colorScheme: \"outline\",\n            inputSize: \"md\",\n            inputPrefix: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-ssm text-gray\",\n              style: {\n                flexWrap: 'nowrap'\n              },\n              children: [\"~\", principalAsUSD, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: FIAT\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this),\n            prefixPosition: \"button\",\n            min: 0 // max={getBalanceAmount(new BigNumber(modal.maxStakingValue), modal.stakingToken?.decimals)}\n            // readOnly={!isBalanceFetched}\n            ,\n            onChange: setPrincipalFromTokenValue,\n            onFocus: setDirectCalculatorMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), editingCurrency === EditingCurrency.USD && /*#__PURE__*/_jsxDEV(InputNumber, {\n            className: \"m-roi__staked-row-input\",\n            value: principalAsUSD,\n            placeholder: DEFAULT_PRINCIPAL_AS_USD,\n            colorScheme: \"outline\",\n            inputSize: \"md\",\n            inputPrefix: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-ssm text-gray\",\n              children: [\"~\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: principalAsToken\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 22\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: stakingTokenSymbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 54\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this),\n            prefixPosition: \"button\",\n            min: 0 // max={getBalanceAmount(new BigNumber(modal.maxStakingValue), modal.stakingToken?.decimals)}\n            // readOnly={!isBalanceFetched}\n            ,\n            onChange: setPrincipalFromUSDValue,\n            onFocus: setDirectCalculatorMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"m-roi__staked-row-input-container-button\",\n            icon: ExchangeImg,\n            colorScheme: \"white\",\n            onClick: toggleEditingCurrency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-roi__staked-row-principal-amounts box-f-ai-c box-f-jc-sb\",\n          children: principalAmountOptions.map((principalAmountAsText, index, arr) => /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"yellow-l\",\n            size: \"ssm\",\n            onClick: () => setPrincipalFromUSDValue(principalAmountAsText),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-ssmd\",\n              children: [index !== arr.length - 1 && '$', principalAmountAsText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)\n          }, principalAmountAsText, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-roi__row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-roi__row-title text-black text-bold text-upper\",\n          children: \"Staked for\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          className: \"box-f box-f-jc-sb\",\n          buttonStyle: \"solid\",\n          defaultValue: stakedForOptions[3].value,\n          items: stakedForOptions,\n          onChange: ({\n            target: {\n              value\n            }\n          }) => setStakingDuration(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), autoCompoundFrequency === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-roi__row m-roi__compounding-every-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-roi__row-title text-black text-bold text-upper\",\n          children: \"Compounding every\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-f m-roi__compounding-every-row-container\",\n          children: [/*#__PURE__*/_jsxDEV(Switch, {\n            colorScheme: \"white\",\n            defaultChecked: compounding,\n            onChange: toggleCompounding\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            className: classNames('m-roi__compounding-every-row-radio-group', 'box-f box-f-jc-sb', {\n              'm-roi__compounding-every-row-radio-group_disabled': !compounding\n            }),\n            buttonStyle: \"solid\",\n            defaultValue: compoundingEveryOptions[0].value,\n            items: compoundingEveryOptions,\n            disabled: !compounding,\n            onChange: ({\n              target: {\n                value: index\n              }\n            }) => setCompoundingFrequency({\n              index\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-roi__row m-roi__arrow-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-circle box-f-c\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classNames('m-roi__arrow-row-img', {\n              'm-roi__arrow-row-img_reverted': Boolean(calculatorMode)\n            }),\n            style: {\n              width: '25px'\n            },\n            src: ArrowCircleImg,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-roi__row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-roi__row-title text-black text-bold text-upper\",\n          children: \"ROI at current rates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n          className: \"m-roi__staked-row-input\",\n          value: roiUSD,\n          placeholder: DEFAULT_PRINCIPAL_AS_TOKEN,\n          colorScheme: \"outline\",\n          inputSize: \"md\",\n          inputPrefix: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-ssm text-gray\",\n            children: [\"~\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: roiTokens\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 18\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: earningTokenSymbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 43\n            }, this), \" (\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: roiPercentage.toLocaleString('en', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this),\n          prefixPosition: \"button\",\n          min: 0,\n          onFocus: setIndirectCalculatorMode // max={getBalanceAmount(new BigNumber(modal.maxStakingValue), modal.stakingToken?.decimals)}\n          // readOnly={!isBalanceFetched}\n          ,\n          onChange: setTargetRoi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}, \"2Tvz6etdXrFtiIbkBZhRsbLOuZU=\", false, function () {\n  return [useMst];\n}));\n_c2 = RoiModal;\nexport default RoiModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RoiModal$observer\");\n$RefreshReg$(_c2, \"RoiModal\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/molecules/RoiModal/index.tsx"],"names":["React","classNames","observer","Button","InputNumber","RadioGroup","Switch","useMst","CalculatorMode","DEFAULT_PRINCIPAL_AS_TOKEN","DEFAULT_PRINCIPAL_AS_USD","EditingCurrency","Modal","Duration","principalAmountOptions","stakedForOptions","day","week","month","year","fiveYears","map","period","index","text","value","compoundingEveryOptions","twoWeeks","FIAT","RoiModal","modals","modal","roi","options","state","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","data","editingCurrency","mode","calculatorMode","compounding","controls","toggleEditingCurrency","toggleCompounding","setCalculatorMode","setPrincipalFromTokenValue","setPrincipalFromUSDValue","setStakingDuration","setTargetRoi","setCompoundingFrequency","stakingTokenSymbol","earningTokenSymbol","autoCompoundFrequency","setDirectCalculatorMode","ROI_BASED_ON_PRINCIPAL","setIndirectCalculatorMode","PRINCIPAL_BASED_ON_ROI","handleClose","close","isOpen","TOKEN","flexWrap","USD","ExchangeImg","principalAmountAsText","arr","length","target","Boolean","width","ArrowCircleImg","toLocaleString","minimumFractionDigits","maximumFractionDigits"],"mappings":"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","sourcesContent":["import React from 'react';\n// import BigNumber from 'bignumber.js/bignumber';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react-lite';\n\nimport ArrowCircleImg from '@/assets/img/icons/arrow-circle.svg';\n// import OpenLinkImg from '@/assets/img/icons/open-link.svg';\nimport ExchangeImg from '@/assets/img/icons/trade.svg';\nimport { Button, InputNumber, RadioGroup, Switch } from '@/components/atoms';\nimport { useMst } from '@/store';\nimport {\n  CalculatorMode,\n  DEFAULT_PRINCIPAL_AS_TOKEN,\n  DEFAULT_PRINCIPAL_AS_USD,\n  EditingCurrency,\n} from '@/store/Models/Modals/RoiModal';\n\n// import { getBalanceAmount } from '@/utils/formatBalance';\n// import { feeFormatter, numberWithCommas } from '@/utils';\n// import { getApy, getRoi } from '@/utils/compoundApy';\nimport Modal from '../Modal';\n\nimport './RoiModal.scss';\n\nenum Duration {\n  day = '1D',\n  week = '7D',\n  twoWeeks = '14D',\n  month = '30D',\n  year = '1Y',\n  fiveYears = '5Y',\n}\n\nconst principalAmountOptions = ['100', '1000', 'My Balance'];\n\n// values as indexes to retrieve stakingDuration from array (like [1, 7, 30, 365, 1825]) as O(1)\nconst stakedForOptions = [\n  Duration.day,\n  Duration.week,\n  Duration.month,\n  Duration.year,\n  Duration.fiveYears,\n].map((period, index) => ({\n  text: period,\n  value: index,\n}));\n\nconst compoundingEveryOptions = [\n  Duration.day,\n  Duration.week,\n  Duration.twoWeeks,\n  Duration.month,\n].map((period, index) => ({\n  text: period,\n  value: index,\n}));\n\nconst FIAT = 'USD';\n\nconst RoiModal: React.FC = observer(() => {\n  const { modals } = useMst();\n\n  const modal = modals.roi;\n  const { options, state } = modal;\n\n  // const [compounding, setIsCompounding] = useState(true);\n\n  // const [stakingDurationIndex, setStakingDuration] = useState(3); // value as index associated with stakedOptions\n\n  const { principalAsToken, principalAsUSD, roiUSD, roiTokens, roiPercentage } = state.data;\n  const { editingCurrency, mode: calculatorMode, compounding } = state.controls;\n  const {\n    toggleEditingCurrency,\n    toggleCompounding,\n    setCalculatorMode,\n    setPrincipalFromTokenValue,\n    setPrincipalFromUSDValue,\n    setStakingDuration,\n    setTargetRoi,\n    setCompoundingFrequency,\n  } = state;\n\n  if (!options) return null;\n\n  const {\n    stakingTokenSymbol,\n    // stakingTokenBalance,\n    // stakingTokenPrice,\n    earningTokenSymbol,\n    // earningTokenPrice,\n    autoCompoundFrequency,\n  } = options;\n\n  // direct exactly the same as CalculatorMode.ROI_BASED_ON_PRINCIPAL (first input)\n  const setDirectCalculatorMode = () => setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL);\n  const setIndirectCalculatorMode = () => setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI);\n\n  const handleClose = () => {\n    modals.roi.close();\n  };\n\n  // TODO: /trade/swap page must apply for outputCurrency (or other) as a param\n  // const apyModalLink = stakingToken.address\n  //   ? `/trade/swap?outputCurrency=${getAddress(stakingToken.address)}`\n  //   : '/trade/swap';\n\n  return (\n    <Modal\n      isVisible={modals.roi.isOpen}\n      className=\"m-roi\"\n      width={360}\n      handleCancel={handleClose}\n      closeIcon\n    >\n      <div className=\"m-roi__content\">\n        <div className=\"m-roi__title text-md text-black\">\n          <span className=\"text-upper\">Roi</span> Calculator\n        </div>\n\n        <div className=\"m-roi__row m-roi__staked-row\">\n          <div className=\"m-roi__row-title text-black text-bold text-upper\">\n            {stakingTokenSymbol} Staked\n          </div>\n          <div className=\"m-roi__staked-row-inputs-container\">\n            {editingCurrency === EditingCurrency.TOKEN && (\n              <InputNumber\n                className=\"m-roi__staked-row-input\"\n                value={principalAsToken}\n                placeholder={DEFAULT_PRINCIPAL_AS_TOKEN}\n                colorScheme=\"outline\"\n                inputSize=\"md\"\n                inputPrefix={\n                  <span className=\"text-ssm text-gray\" style={{ flexWrap: 'nowrap' }}>\n                    ~{principalAsUSD} <span>{FIAT}</span>\n                  </span>\n                }\n                prefixPosition=\"button\"\n                min={0}\n                // max={getBalanceAmount(new BigNumber(modal.maxStakingValue), modal.stakingToken?.decimals)}\n                // readOnly={!isBalanceFetched}\n                onChange={setPrincipalFromTokenValue}\n                onFocus={setDirectCalculatorMode}\n              />\n            )}\n            {editingCurrency === EditingCurrency.USD && (\n              <InputNumber\n                className=\"m-roi__staked-row-input\"\n                value={principalAsUSD}\n                placeholder={DEFAULT_PRINCIPAL_AS_USD}\n                colorScheme=\"outline\"\n                inputSize=\"md\"\n                inputPrefix={\n                  <span className=\"text-ssm text-gray\">\n                    ~<span>{principalAsToken}</span> <span>{stakingTokenSymbol}</span>\n                  </span>\n                }\n                prefixPosition=\"button\"\n                min={0}\n                // max={getBalanceAmount(new BigNumber(modal.maxStakingValue), modal.stakingToken?.decimals)}\n                // readOnly={!isBalanceFetched}\n                onChange={setPrincipalFromUSDValue}\n                onFocus={setDirectCalculatorMode}\n              />\n            )}\n            <Button\n              className=\"m-roi__staked-row-input-container-button\"\n              icon={ExchangeImg}\n              colorScheme=\"white\"\n              onClick={toggleEditingCurrency}\n            />\n          </div>\n          <div className=\"m-roi__staked-row-principal-amounts box-f-ai-c box-f-jc-sb\">\n            {principalAmountOptions.map((principalAmountAsText, index, arr) => (\n              <Button\n                key={principalAmountAsText}\n                colorScheme=\"yellow-l\"\n                size=\"ssm\"\n                onClick={() => setPrincipalFromUSDValue(principalAmountAsText)}\n              >\n                <span className=\"text-ssmd\">\n                  {index !== arr.length - 1 && '$'}\n                  {principalAmountAsText}\n                </span>\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"m-roi__row\">\n          <div className=\"m-roi__row-title text-black text-bold text-upper\">Staked for</div>\n          <RadioGroup\n            className=\"box-f box-f-jc-sb\"\n            buttonStyle=\"solid\"\n            defaultValue={stakedForOptions[3].value}\n            items={stakedForOptions}\n            onChange={({ target: { value } }) => setStakingDuration(value)}\n          />\n        </div>\n\n        {autoCompoundFrequency === 0 && (\n          <div className=\"m-roi__row m-roi__compounding-every-row\">\n            <div className=\"m-roi__row-title text-black text-bold text-upper\">\n              Compounding every\n            </div>\n            <div className=\"box-f m-roi__compounding-every-row-container\">\n              <Switch\n                colorScheme=\"white\"\n                defaultChecked={compounding}\n                onChange={toggleCompounding}\n              />\n              <RadioGroup\n                className={classNames(\n                  'm-roi__compounding-every-row-radio-group',\n                  'box-f box-f-jc-sb',\n                  {\n                    'm-roi__compounding-every-row-radio-group_disabled': !compounding,\n                  },\n                )}\n                buttonStyle=\"solid\"\n                defaultValue={compoundingEveryOptions[0].value}\n                items={compoundingEveryOptions}\n                disabled={!compounding}\n                onChange={({ target: { value: index } }) => setCompoundingFrequency({ index })}\n              />\n            </div>\n          </div>\n        )}\n\n        <div className=\"m-roi__row m-roi__arrow-row\">\n          <div className=\"box-circle box-f-c\">\n            <img\n              className={classNames('m-roi__arrow-row-img', {\n                'm-roi__arrow-row-img_reverted': Boolean(calculatorMode),\n              })}\n              style={{ width: '25px' }}\n              src={ArrowCircleImg}\n              alt=\"\"\n            />\n          </div>\n        </div>\n\n        <div className=\"m-roi__row\">\n          <div className=\"m-roi__row-title text-black text-bold text-upper\">\n            ROI at current rates\n          </div>\n          <InputNumber\n            className=\"m-roi__staked-row-input\"\n            value={roiUSD}\n            placeholder={DEFAULT_PRINCIPAL_AS_TOKEN}\n            colorScheme=\"outline\"\n            inputSize=\"md\"\n            inputPrefix={\n              <span className=\"text-ssm text-gray\">\n                ~<span>{roiTokens}</span> <span>{earningTokenSymbol}</span> (\n                <span>\n                  {roiPercentage.toLocaleString('en', {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2,\n                  })}\n                </span>\n                %)\n              </span>\n            }\n            prefixPosition=\"button\"\n            min={0}\n            onFocus={setIndirectCalculatorMode}\n            // max={getBalanceAmount(new BigNumber(modal.maxStakingValue), modal.stakingToken?.decimals)}\n            // readOnly={!isBalanceFetched}\n            onChange={setTargetRoi}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n});\n\nexport default RoiModal;\n"]},"metadata":{},"sourceType":"module"}