{"ast":null,"code":"import { Observable } from '../Observable';\nimport { innerFrom } from './from';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\nexport function race() {\n  var sources = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n\n  sources = argsOrArgArray(sources);\n  return sources.length === 1 ? innerFrom(sources[0]) : new Observable(raceInit(sources));\n}\nexport function raceInit(sources) {\n  return function (subscriber) {\n    var subscriptions = [];\n\n    var _loop_1 = function (i) {\n      subscriptions.push(innerFrom(sources[i]).subscribe(new OperatorSubscriber(subscriber, function (value) {\n        if (subscriptions) {\n          for (var s = 0; s < subscriptions.length; s++) {\n            s !== i && subscriptions[s].unsubscribe();\n          }\n\n          subscriptions = null;\n        }\n\n        subscriber.next(value);\n      })));\n    };\n\n    for (var i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n      _loop_1(i);\n    }\n  };\n}","map":{"version":3,"sources":["../../../../src/internal/observable/race.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,SAAT,QAA0B,QAA1B;AAGA,SAAS,cAAT,QAA+B,wBAA/B;AACA,SAAS,kBAAT,QAAmC,iCAAnC;AA+CA,OAAM,SAAU,IAAV,GAAc;AAAI,MAAA,OAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAyD;AAAzD,IAAA,OAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACtB,EAAA,OAAO,GAAG,cAAc,CAAC,OAAD,CAAxB;AAEA,SAAO,OAAO,CAAC,MAAR,KAAmB,CAAnB,GAAuB,SAAS,CAAC,OAAO,CAAC,CAAD,CAAR,CAAhC,GAAqE,IAAI,UAAJ,CAAkB,QAAQ,CAAC,OAAD,CAA1B,CAA5E;AACD;AAOD,OAAM,SAAU,QAAV,CAAsB,OAAtB,EAAmD;AACvD,SAAO,UAAC,UAAD,EAA0B;AAC/B,QAAI,aAAa,GAAmB,EAApC;;4BAMS,C,EAAC;AACR,MAAA,aAAa,CAAC,IAAd,CACE,SAAS,CAAC,OAAO,CAAC,CAAD,CAAR,CAAT,CAA4C,SAA5C,CACE,IAAI,kBAAJ,CAAuB,UAAvB,EAAmC,UAAC,KAAD,EAAM;AACvC,YAAI,aAAJ,EAAmB;AAGjB,eAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,aAAa,CAAC,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,YAAA,CAAC,KAAK,CAAN,IAAW,aAAa,CAAC,CAAD,CAAb,CAAiB,WAAjB,EAAX;AACD;;AACD,UAAA,aAAa,GAAG,IAAhB;AACD;;AACD,QAAA,UAAU,CAAC,IAAX,CAAgB,KAAhB;AACD,OAVD,CADF,CADF;;;AADF,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,aAAa,IAAI,CAAC,UAAU,CAAC,MAA7B,IAAuC,CAAC,GAAG,OAAO,CAAC,MAAnE,EAA2E,CAAC,EAA5E,EAA8E;cAArE,C;AAgBR;AACF,GAxBD;AAyBD","sourceRoot":"","sourcesContent":["import { Observable } from '../Observable';\nimport { innerFrom } from './from';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\nexport function race() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    sources = argsOrArgArray(sources);\n    return sources.length === 1 ? innerFrom(sources[0]) : new Observable(raceInit(sources));\n}\nexport function raceInit(sources) {\n    return function (subscriber) {\n        var subscriptions = [];\n        var _loop_1 = function (i) {\n            subscriptions.push(innerFrom(sources[i]).subscribe(new OperatorSubscriber(subscriber, function (value) {\n                if (subscriptions) {\n                    for (var s = 0; s < subscriptions.length; s++) {\n                        s !== i && subscriptions[s].unsubscribe();\n                    }\n                    subscriptions = null;\n                }\n                subscriber.next(value);\n            })));\n        };\n        for (var i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n            _loop_1(i);\n        }\n    };\n}\n//# sourceMappingURL=race.js.map"]},"metadata":{},"sourceType":"module"}