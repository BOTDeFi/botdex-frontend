{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/pages/DaoList/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Skeleton } from '@/components/atoms';\nimport { DaoPreview, DaoWrapper } from '@/components/sections/Dao';\nimport { DaoListItemsList } from '@/components/sections/DaoList';\nimport { SNAPSHOT_SPACE } from '@/config/constants/dao';\nimport useIntersectionObserver from '@/hooks/useIntersectionObserver';\nimport { groupProposalsPreviewByStatus, sortByCreated, transformGetProposalsPreview, useGetProposalsPreview } from '@/services/api/snapshot.org/hooks';\nimport './DaoList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEMS_PER_PAGE = 20;\nconst LoaderSkeleton = new Array(3).fill('').map(_c = (_, index) => {\n  return /*#__PURE__*/_jsxDEV(Skeleton.Input, {\n    className: \"dao-list__list-skeleton-loader\",\n    style: {\n      height: 60\n    },\n    active: true,\n    size: \"large\"\n  }, String(index), false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n});\n_c2 = LoaderSkeleton;\n\nconst DaoList = () => {\n  _s();\n\n  const [loadData, setLoadData] = useState(false);\n  const {\n    getProposalsPreview,\n    options: [, {\n      loading,\n      data\n    }]\n  } = useGetProposalsPreview({\n    fetchPolicy: 'network-only'\n  });\n  const {\n    observerRef,\n    isIntersecting\n  } = useIntersectionObserver();\n  const [listItems, setNewItems] = useState([]);\n  useEffect(() => {\n    if (isIntersecting) {\n      setLoadData(true);\n    }\n  }, [isIntersecting]);\n  useEffect(() => {\n    if (loadData) {\n      getProposalsPreview(ITEMS_PER_PAGE + listItems.length, listItems.length, SNAPSHOT_SPACE);\n      setLoadData(false);\n    }\n  }, [loadData, listItems.length, getProposalsPreview]);\n  useEffect(() => {\n    if (data) {\n      setNewItems(prevState => {\n        // extract proposals from raw response\n        const extractedListItems = transformGetProposalsPreview(data); // split proposals into separate groups by 'status': 'active', 'closed', 'pending'\n\n        const {\n          map: statesMap\n        } = groupProposalsPreviewByStatus(extractedListItems);\n        const {\n          active = [],\n          pending = [],\n          closed = []\n        } = statesMap;\n        active.sort(sortByCreated);\n        pending.sort(sortByCreated);\n        closed.sort(sortByCreated);\n        return [...prevState, ...pending, ...active, ...closed];\n      });\n    }\n  }, [data]);\n  const isFirstLoading = listItems.length === 0;\n  const Loader = isFirstLoading ? LoaderSkeleton : /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 12\n    },\n    children: LoaderSkeleton\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(DaoWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(DaoPreview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dao-list__list-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(DaoListItemsList, {\n        items: listItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: observerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), loading && Loader]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DaoList, \"WFWyzi6KnDlKB60FFKJfwu7QBSc=\", false, function () {\n  return [useGetProposalsPreview, useIntersectionObserver];\n});\n\n_c3 = DaoList;\nexport default DaoList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoaderSkeleton$new Array(3).fill('').map\");\n$RefreshReg$(_c2, \"LoaderSkeleton\");\n$RefreshReg$(_c3, \"DaoList\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/pages/DaoList/index.tsx"],"names":["React","useEffect","useState","Skeleton","DaoPreview","DaoWrapper","DaoListItemsList","SNAPSHOT_SPACE","useIntersectionObserver","groupProposalsPreviewByStatus","sortByCreated","transformGetProposalsPreview","useGetProposalsPreview","ITEMS_PER_PAGE","LoaderSkeleton","Array","fill","map","_","index","height","String","DaoList","loadData","setLoadData","getProposalsPreview","options","loading","data","fetchPolicy","observerRef","isIntersecting","listItems","setNewItems","length","prevState","extractedListItems","statesMap","active","pending","closed","sort","isFirstLoading","Loader","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { Skeleton } from '@/components/atoms';\nimport { DaoPreview, DaoWrapper } from '@/components/sections/Dao';\nimport { DaoListItemsList } from '@/components/sections/DaoList';\nimport { SNAPSHOT_SPACE } from '@/config/constants/dao';\nimport useIntersectionObserver from '@/hooks/useIntersectionObserver';\nimport {\n  groupProposalsPreviewByStatus,\n  IProposalsPreview,\n  sortByCreated,\n  transformGetProposalsPreview,\n  useGetProposalsPreview,\n} from '@/services/api/snapshot.org/hooks';\n\nimport './DaoList.scss';\n\nconst ITEMS_PER_PAGE = 20;\n\nconst LoaderSkeleton = new Array(3).fill('').map((_, index) => {\n  return (\n    <Skeleton.Input\n      key={String(index)}\n      className=\"dao-list__list-skeleton-loader\"\n      style={{ height: 60 }}\n      active\n      size=\"large\"\n    />\n  );\n});\n\nconst DaoList: React.FC = () => {\n  const [loadData, setLoadData] = useState(false);\n  const {\n    getProposalsPreview,\n    options: [, { loading, data }],\n  } = useGetProposalsPreview({\n    fetchPolicy: 'network-only',\n  });\n  const { observerRef, isIntersecting } = useIntersectionObserver<HTMLDivElement>();\n  const [listItems, setNewItems] = useState<IProposalsPreview>([]);\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setLoadData(true);\n    }\n  }, [isIntersecting]);\n\n  useEffect(() => {\n    if (loadData) {\n      getProposalsPreview(ITEMS_PER_PAGE + listItems.length, listItems.length, SNAPSHOT_SPACE);\n      setLoadData(false);\n    }\n  }, [loadData, listItems.length, getProposalsPreview]);\n\n  useEffect(() => {\n    if (data) {\n      setNewItems((prevState) => {\n        // extract proposals from raw response\n        const extractedListItems = transformGetProposalsPreview(data);\n        // split proposals into separate groups by 'status': 'active', 'closed', 'pending'\n        const { map: statesMap } = groupProposalsPreviewByStatus(extractedListItems);\n        const { active = [], pending = [], closed = [] } = statesMap;\n        active.sort(sortByCreated);\n        pending.sort(sortByCreated);\n        closed.sort(sortByCreated);\n\n        return [...prevState, ...pending, ...active, ...closed];\n      });\n    }\n  }, [data]);\n\n  const isFirstLoading = listItems.length === 0;\n  const Loader = isFirstLoading ? (\n    LoaderSkeleton\n  ) : (\n    <div style={{ marginTop: 12 }}>{LoaderSkeleton}</div>\n  );\n\n  return (\n    <DaoWrapper>\n      <DaoPreview />\n      <div className=\"dao-list__list-wrapper\">\n        <DaoListItemsList items={listItems} />\n        <div ref={observerRef} />\n        {loading && Loader}\n      </div>\n    </DaoWrapper>\n  );\n};\nexport default DaoList;\n"]},"metadata":{},"sourceType":"module"}