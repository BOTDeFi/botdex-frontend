{"ast":null,"code":"var _jsxFileName = \"/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Pools/TableRow/RecentProfit/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { InputNumber } from '@/components/atoms';\nimport { useMst } from '@/store';\nimport { PoolFarmingMode } from '@/types';\nimport CollectButton from '../../CollectButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecentProfit = observer(_c = _s(({\n  farmMode,\n  tokenStake,\n  earnings,\n  isFinished,\n  onCollect\n}) => {\n  _s();\n\n  const {\n    user\n  } = useMst();\n  const hasConnectedWallet = Boolean(user.address);\n\n  if (isFinished && earnings === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pools-table-row__details-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pools-table-row__details-title text-yellow text-ssm text-med text-upper\",\n      children: [\"recent \", tokenStake.symbol, \" profit\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n      colorScheme: \"white\",\n      value: earnings,\n      inputPrefix: hasConnectedWallet && (farmMode === PoolFarmingMode.earn || farmMode === PoolFarmingMode.manual) && !isFinished ? /*#__PURE__*/_jsxDEV(CollectButton, {\n        farmMode: farmMode,\n        value: earnings,\n        collectHandler: onCollect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this) : undefined,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n}, \"jOug7owhFSy7jF1WK2xPaP05zxA=\", false, function () {\n  return [useMst];\n}));\n_c2 = RecentProfit;\nexport default RecentProfit;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RecentProfit$observer\");\n$RefreshReg$(_c2, \"RecentProfit\");","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/src/components/sections/Pools/TableRow/RecentProfit/index.tsx"],"names":["React","observer","InputNumber","useMst","PoolFarmingMode","CollectButton","RecentProfit","farmMode","tokenStake","earnings","isFinished","onCollect","user","hasConnectedWallet","Boolean","address","symbol","earn","manual","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,MAAT,QAAuB,SAAvB;AACA,SAA2BC,eAA3B,QAAyD,SAAzD;AAEA,OAAOC,aAAP,MAA0B,qBAA1B;;AAUA,MAAMC,YAA0C,GAAGL,QAAQ,SACzD,CAAC;AAAEM,EAAAA,QAAF;AAAYC,EAAAA,UAAZ;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA,UAAlC;AAA8CC,EAAAA;AAA9C,CAAD,KAA+D;AAAA;;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAWT,MAAM,EAAvB;AACA,QAAMU,kBAAkB,GAAGC,OAAO,CAACF,IAAI,CAACG,OAAN,CAAlC;;AAEA,MAAIL,UAAU,IAAID,QAAQ,KAAK,CAA/B,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,yEAAf;AAAA,4BACUD,UAAU,CAACQ,MADrB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,WAAD;AACE,MAAA,WAAW,EAAC,OADd;AAEE,MAAA,KAAK,EAAEP,QAFT;AAGE,MAAA,WAAW,EACTI,kBAAkB,KACjBN,QAAQ,KAAKH,eAAe,CAACa,IAA7B,IAAqCV,QAAQ,KAAKH,eAAe,CAACc,MADjD,CAAlB,IAEA,CAACR,UAFD,gBAGE,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAEH,QAAzB;AAAmC,QAAA,KAAK,EAAEE,QAA1C;AAAoD,QAAA,cAAc,EAAEE;AAApE;AAAA;AAAA;AAAA;AAAA,cAHF,GAIIQ,SARR;AAUE,MAAA,QAAQ;AAVV;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA5BwD;AAAA,UAEtChB,MAFsC;AAAA,GAA3D;MAAMG,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport { InputNumber } from '@/components/atoms';\nimport { useMst } from '@/store';\nimport { IPoolFarmingMode, PoolFarmingMode, Token } from '@/types';\n\nimport CollectButton from '../../CollectButton';\n\ninterface IRecentProfitProps {\n  farmMode: IPoolFarmingMode;\n  tokenStake: Token;\n  earnings: number;\n  isFinished?: boolean;\n  onCollect: () => void;\n}\n\nconst RecentProfit: React.FC<IRecentProfitProps> = observer(\n  ({ farmMode, tokenStake, earnings, isFinished, onCollect }) => {\n    const { user } = useMst();\n    const hasConnectedWallet = Boolean(user.address);\n\n    if (isFinished && earnings === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"pools-table-row__details-box\">\n        <div className=\"pools-table-row__details-title text-yellow text-ssm text-med text-upper\">\n          recent {tokenStake.symbol} profit\n        </div>\n        <InputNumber\n          colorScheme=\"white\"\n          value={earnings}\n          inputPrefix={\n            hasConnectedWallet &&\n            (farmMode === PoolFarmingMode.earn || farmMode === PoolFarmingMode.manual) &&\n            !isFinished ? (\n              <CollectButton farmMode={farmMode} value={earnings} collectHandler={onCollect} />\n            ) : undefined\n          }\n          readOnly\n        />\n      </div>\n    );\n  },\n);\n\nexport default RecentProfit;\n"]},"metadata":{},"sourceType":"module"}