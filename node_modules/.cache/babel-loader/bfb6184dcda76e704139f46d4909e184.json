{"ast":null,"code":"import getByteLength from './_getByteLength.js'; // Internal function to wrap or shallow-copy an ArrayBuffer,\n// typed array or DataView to a new view, reusing the buffer.\n\nexport default function toBufferView(bufferSource) {\n  return new Uint8Array(bufferSource.buffer || bufferSource, bufferSource.byteOffset || 0, getByteLength(bufferSource));\n}","map":{"version":3,"sources":["/Users/rocknblock/Documents/GitHub/strong-hands-frontend/node_modules/underscore/modules/_toBufferView.js"],"names":["getByteLength","toBufferView","bufferSource","Uint8Array","buffer","byteOffset"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,qBAA1B,C,CAEA;AACA;;AACA,eAAe,SAASC,YAAT,CAAsBC,YAAtB,EAAoC;AACjD,SAAO,IAAIC,UAAJ,CACLD,YAAY,CAACE,MAAb,IAAuBF,YADlB,EAELA,YAAY,CAACG,UAAb,IAA2B,CAFtB,EAGLL,aAAa,CAACE,YAAD,CAHR,CAAP;AAKD","sourcesContent":["import getByteLength from './_getByteLength.js';\n\n// Internal function to wrap or shallow-copy an ArrayBuffer,\n// typed array or DataView to a new view, reusing the buffer.\nexport default function toBufferView(bufferSource) {\n  return new Uint8Array(\n    bufferSource.buffer || bufferSource,\n    bufferSource.byteOffset || 0,\n    getByteLength(bufferSource)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}